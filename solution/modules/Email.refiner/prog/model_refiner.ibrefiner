{"dev_input": {"input_path": "axauk/dev-si-fleet/fs/Instabase Drive/aihub/0198ef37-d998-7864-878d-539c9c7ddd98/documents/out/map_records"}, "options": {"provenance_tracking": true, "auto_provenance": false}, "fields": [{"label": "__model_result", "lines": [{"function_id": {"name": "get_raw_extracted_fields", "source": "NATIVE"}, "inputs": [{"arg_name": "INPUT_COL", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "KEYWORD", "data_type_options": ["TEXT"], "value": "INPUT_COL"}, {"arg_name": "fields_to_extract", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "[{\"name\": \"Target_Price\", \"prompt\": \"Step 1 \\u2013 Identify Base Premium:\\nLook for phrases like \\u201crenewal terms received\\u201d, \\u201ctarget at the moment\\u201d, \\u201cwe would like terms\\u201d, \\u201clooking for a quote\\u201d \\u2192 mark as Target_Premium.\\n\\nstrictly Ignore values with \\u201clast year was\\u201d, \\u201cexpiry premium\\u201d,\\\"last year paid\\\", \\u201ccurrently paying\\u201d unless a % change is also mentioned.\\n\\nIf % change (e.g., \\u201c10% increase\\u201d) is mentioned with a past premium \\u2192 calculate: base \\u00b1 % change in Step3\\n\\nIf two premiums from different insurers \\u2192 use the lower one.\\nIf no valid target \\u2192 return \\\" \\\".\\n\\nStep 2 \\u2013 Adjust for IPT:\\nIf \\u201cincluding IPT\\u201d \\u2192 divide by 1.12.\\nIf \\u201c+ IPT\\u201d, \\u201cexcluding IPT\\u201d, or \\u201cplus IPT\\u201d \\u2192 use as-is.\\nIgnore commission.\\n\\nStep 3 \\u2013 Apply % Change:\\nIf phrases like \\u201c10% increase\\u201d or \\\"additional premium\\\" or \\u201cindication is\\u2026\\u201d appear \\u2192 apply change.\\n\\nOutput:\\nCalculated Target Premium: \\u00a3[value]\\n\\nlets think step by step\", \"prompt_type\": \"advanced\", \"values\": {}, \"data_type\": \"TEXT\", \"prompt_schema\": null, \"description\": \"Extract the Target Price \\u2014 the premium or price the client or broker expects to pay for the insurance policy. sometimes it is implied from previous year\\u2019s premium.\\nIf no relevant price reference is available, return \\\"N/A\\\"\", \"model_type\": \"ADVANCED\", \"position\": 0, \"result_data_type\": \"TEXT\"}, {\"name\": \"Agency_Enquiry_Reference\", \"prompt\": \"You are working with the subject line and body of an email related to a submission. Your task is to extract the Agency Enquiry Reference, also known as Quote Ref, Quote Reference, RFQ, or Ref. It is a unique numeric or alphanumeric ID provided by the broker to track the quote.\\n\\nLook for below similar phrases:\\nQuote Ref: 745134320\\nRFQ-156802033\\nRef 947152\\nExtract the full expression, including the prefix (e.g., \\\"RFQ-156802033\\\" or \\\"Quote \\nRef: 746134380\\\").\\n\\nExclude:\\nUnlabeled strings like Q009258247-1169877\\nSystem IDs starting with Q00, P00\\nPlain numbers with no label\\nIf multiple references are present, return all. If none, return an empty string \\\"\\\"\", \"prompt_type\": \"advanced\", \"values\": {}, \"data_type\": \"TEXT\", \"prompt_schema\": null, \"description\": \"You are an expert in processing commercial fleet insurance submissions.\\n\\nYou are working with the subject line and body of an email related to a submission. Your task is to extract the **Agency Enquiry Reference**, also referred to as **Quote Ref**, **Quote Reference**, or **RFQ**.\\n\\nThis reference number may appear:\\n- In the subject line (e.g. \\\"Quote Ref: 746134380\\\")\\n- In the body of the email (e.g. \\\"Please use RFQ - 156802033 for your response\\\")\\n\\nLook for patterns like:\\n- \\\"Quote Ref\\\"\\n- \\\"Quote Reference\\\"\\n- \\\"QuoteRef\\\"\\n- \\\"RFQ\\\"\\n- \\\"Ref\\\"\\n\\nExtract the full text containing the reference, including any prefix like \\\"RFQ -\\\".\", \"model_type\": \"DEFAULT\", \"position\": 1, \"result_data_type\": \"TEXT\"}, {\"name\": \"Broker_Deadline\", \"prompt\": \"Extract the Broker Deadline from the email content.\\u2028This refers to the date by which a quote is expected from the insurer.\\n\\nInstructions\\nStep 1: Search for relevant deadline phrases\\nIdentify dates associated with the following phrases:\\nQuote required by\\nDeadline\\nTarget date\\nQuote deadline\\nQuote expected by\\nNeeded by\\nTerms no later than\\n\\nStep 2: Handle date formats\\nIf day, month, and year are present \\u2192 return in dd/mm/yyyy format.\\u2028Example: \\u201cQuote required by 10 January 2025\\u201d \\u2192 10/01/2025\\nIf only day and month are present (no year) \\u2192 return in dd/mm format.\\u2028Example: \\u201cQuote expected by 19 Jan\\u201d \\u2192 19/01\\nDo not infer the year from the email\\u2019s received date.\\n\\nStep 3: Exclude irrelevant dates\\nIgnore dates associated with:\\nPolicy renewal\\nEffective\\nExpiry\\nDue on\\n\\nOutput Format\\nBroker Deadline Date : <deadline date or \\\"\\\">\\nFull date: Broker Deadline Date : 10/01/2025\\nPartial date: Broker Deadline Date : 10/01\\nNo valid date: Broker Deadline Date : \\\"\\\"\", \"prompt_type\": \"advanced\", \"values\": {}, \"data_type\": \"TEXT\", \"prompt_schema\": null, \"description\": \"You are an expert in processing commercial fleet insurance submissions.\\n\\nYour task is to extract the **Broker Deadline**, also referred to as **Target Date**, **Quote Required By**, or simply **Deadline**, from the email subject or body.\\n\\nLook for expressions such as:\\n- \\\"Quote required by 10th January 2025\\\"\\n- \\\"Deadline: 10th January 2025\\\"\\n- \\\"Target date 10th January 2025\\\"\\n\\nIdentify phrases indicating a deadline and extract the associated date that follows.\", \"model_type\": \"ADVANCED\", \"position\": 2, \"result_data_type\": \"TEXT\"}, {\"name\": \"Product\", \"prompt\": \"\", \"prompt_type\": \"udf\", \"values\": {}, \"data_type\": \"TEXT\", \"prompt_schema\": null, \"description\": \"\", \"model_type\": \"ADVANCED\", \"position\": 3, \"result_data_type\": \"TEXT\"}, {\"name\": \"Insured\", \"prompt\": \"You are an expert in processing commercial fleet insurance submissions.\\n\\nYour task is to extract the **Insured Name**, It often appears on the top of the email or in the **Subject:** line. which may also be referred to as:\\n\\n- Policyholder\\n- Client Name\\n- Full Client Name\\n- Trading Name\\n- Company Name\\n\\nThe insured name typically refers to the legal entity or business applying for cover. It can appear in the email subject or body and is usually a company or trading name.\\n\\nExamples:\\n- Subject: ABC Holdings Ltd  \\u2192 Extract ABC Holdings Ltd\\n- Subject: [EXTERNAL] XYZ Holdings \\u2192Extract XYZ Holdings\\n\\nLook for phrases such as:\\n- \\\"Client Name: ABC (Holdings) Ltd\\\"\\n- \\\"Company: XYZ Holdings\\\"\\n- \\\"Policyholder \\u2013 ABC Ltd\\\"\\n\\nExtract only the entity name that represents the client or policyholder.\\n\\nOutput Format:\\n{\\n   \\\"Insured Name\\\" : \\\"<extracted insured name>\\\"\\n}\", \"prompt_type\": \"advanced\", \"values\": {}, \"data_type\": \"TEXT\", \"prompt_schema\": null, \"description\": \"You are an expert in processing commercial fleet insurance submissions.\\n\\nYour task is to extract the **Insured Name**, which may also be referred to as:\\n\\n- Policyholder\\n- Client Name\\n- Full Client Name\\n- Trading Name\\n- Company Name\\n\\nThe insured name typically refers to the legal entity or business applying for cover. It can appear in the email subject or body and is usually a company or trading name.\\n\\nExamples:\\n- \\\"ABC (Holdings) Ltd\\\"\\n- \\\"XYZ Holdings\\\"\\n\\nLook for phrases such as:\\n- \\\"Client Name: ABC (Holdings) Ltd\\\"\\n- \\\"Company: XYZ Holdings\\\"\\n- \\\"Policyholder \\u2013 ABC Ltd\\\"\\n\\nExtract only the entity name that represents the client or policyholder.\", \"model_type\": \"DEFAULT\", \"position\": 4, \"result_data_type\": \"TEXT\"}, {\"name\": \"Business_Description\", \"prompt\": \"Extract the Business Description of the company from the docuemnt.\\nLook for text following keywords or titles such as:\\n\\nOccupation\\nBusiness\\nBusiness Description\\nNature of Business\\nTrade\\n\\nOnly extract the content that describes the core business activity or operations. Strictly do not include the insured name, Name of Insured, contact info, address, or unrelated labels as business description .\\n\\nIf no relevant information is found, return:\\nBusiness Description: \\\"\\\"\\n\\nIf found, return in this format:\\nBusiness Description: \\\"<extracted text>\\\"\", \"prompt_type\": \"advanced\", \"values\": {}, \"data_type\": \"TEXT\", \"prompt_schema\": null, \"description\": \"Find and return the business description or trade of the insured. This is usually a short phrase describing what the company does \\u2014 like haulage, construction, taxi service, or logistics\", \"model_type\": \"ADVANCED\", \"position\": 5, \"result_data_type\": \"TEXT\"}, {\"name\": \"Agency_Name\", \"prompt\": \"Extract the complete Broker or Agency Name from the email content. This is the name of the brokerage firm or intermediary that sent the submission.\\n\\nLook for the name in:\\n\\nEmail signature or sign-off lines (e.g., \\u201cKind regards, John \\u2013 ABC Brokers\\u201d)\\n\\nSender\\u2019s details in body (e.g., \\u201c| Broker at XYZ Insurance Services\\u201d)\\n\\nFooter/legal lines\\n\\nAlways extract the full official name, including suffixes like Ltd, LLP, & Co., Insurance Group, etc.\\n\\nIf it says \\u201ca part of\\u201d or \\u201csubsidiary of\\u201d a group, extract the parent agency name.\\n\\nIgnore person names, internal teams (e.g., \\u201cFleet Division\\u201d), or job titles.\", \"prompt_type\": \"advanced\", \"values\": {}, \"data_type\": \"TEXT\", \"prompt_schema\": null, \"description\": \"You are an expert in processing commercial fleet insurance submissions.\\n\\nYour task is to extract the **Agency Name**, also referred to as the **Broker Name**, from the email content. This is the name of the brokerage firm or intermediary who has sent the submission.\\n\\nThis name is typically found in:\\n- The email signature\\n- The sender\\u2019s details in the body\\n- Footer or sign-off sections of the email\\n\\nCommon patterns:\\n- \\\"Kind regards, John Smith, Butterworth Spengler\\\"\\n- \\\"Thomas Carroll \\u2013 Fleet Division\\\"\\n- \\\"Best, Rachel | Broker at XYZ Brokers\\\"\\n\\nExtract only the name of the broker agency, not the individual contact person.\", \"model_type\": \"DEFAULT\", \"position\": 10, \"result_data_type\": \"TEXT\"}, {\"name\": \"Company_House_Reference_Party\", \"prompt\": \"You are expert in analysing vehicle insurance data. Your task is to extract the **company registration** number of the insured/client from the Email body.\\n\\nInstructions:\\n\\nStep-1 : Identify the Insured/client.\\n\\nStep-2 : Extract the company registration number of the insured/client extracted from step-1, which is typically 8 characters long but can be fewer.\\n\\nStep-3 : Look for key phrases indicating a registration number, such as:\\n\\n\\u201cCompany Number\\u201d\\n\\n\\u201cCompany Registration Number\\u201d\\n\\n\\u201cRegistered Number\\u201d\\n\\nor any similar variation\\n\\nExclusions & Constraints:\\n\\nStep-4 : Do not extract the company number found in the broker's details or footer.\\n\\nStep-5 : Only extract the number if it refers specifically to the insured/client.\\n\\nStep-6 : If no such registration number is found for the client, return an empty string: \\\"\\\".\\n\\nLet's think step by step.\", \"prompt_type\": \"advanced\", \"values\": {}, \"data_type\": \"TEXT\", \"prompt_schema\": null, \"description\": \"Extract the Companies House Reference of the insured, an alphanumeric code up to 8 characters, often referred to as \\\"Company registration number\\\" or \\\"Company No.\\\" Return only the value. If not found, return \\\"N/A\\\".\", \"model_type\": \"ADVANCED\", \"position\": 6, \"result_data_type\": \"TEXT\"}, {\"name\": \"Date_Established\", \"prompt\": \"You are an expert in processing commercial fleet insurance submissions.\\n\\nYour task is to extract the **Date Established** for the insured. This may also be referred to as:\\n\\n- \\\"Insured \\u2013 Date Established\\\"\\n- \\\"Year Business Established\\\"\\n- \\\"Established\\\"\\n- \\\"Date of Incorporation\\\"\\n- \\\"Trading Since\\\"\\n\\nThis information typically appears in the body of the email, submission form, or company profile section.\\n\\nLook for phrases like:\\n- \\\"Date established: 15th March 2010\\\"\\n- \\\"Established in 2005\\\"\\n- \\\"Trading since January 1998\\\"\\n- \\\"Incorporated on 07/06/2003\\\"\\n\\nExtract the full date or year that indicates when the insured began operations.\", \"prompt_type\": \"advanced\", \"values\": {}, \"data_type\": \"TEXT\", \"prompt_schema\": null, \"description\": \"You are an expert in processing commercial fleet insurance submissions.\\n\\nYour task is to extract the **Date Established** for the insured. This may also be referred to as:\\n\\n- \\\"Insured \\u2013 Date Established\\\"\\n- \\\"Year Business Established\\\"\\n- \\\"Established\\\"\\n- \\\"Date of Incorporation\\\"\\n- \\\"Trading Since\\\"\\n\\nThis information typically appears in the body of the email, submission form, or company profile section.\\n\\nLook for phrases like:\\n- \\\"Date established: 15th March 2010\\\"\\n- \\\"Established in 2005\\\"\\n- \\\"Trading since January 1998\\\"\\n- \\\"Incorporated on 07/06/2003\\\"\\n\\nExtract the full date or year that indicates when the insured began operations.\", \"model_type\": \"DEFAULT\", \"position\": 7, \"result_data_type\": \"TEXT\"}, {\"name\": \"Party_Address\", \"prompt\": \"Extract the full insured party\\u2019s address from the given text.\\n\\nThe insured is the client or policyholder, not the insurer or the broker/intermediary.\\n\\nOnly return addresses clearly associated with the insured party\\u2019s name (e.g., Hewer Group Ltd, Multi Turn Ltd, etc.).\\n\\nDo not return any address linked to brokers, agents, or insurers (e.g., Gallagher, AJG, UBT, AXA, Marsh, etc.).\\n\\nIf multiple addresses appear, return the one labeled \\\"Head Office\\\", \\\"HO Address\\\", or \\\"Registered Office\\\", if available.\\n\\nReturn the full address exactly as it appears in the document without omitting or reformatting any part, as a single string.\\n\\nIf no valid insured-related address is found, return \\\"\\\".\", \"prompt_type\": \"advanced\", \"values\": {}, \"data_type\": \"TEXT\", \"prompt_schema\": null, \"description\": \"Extract the Party Address (also known as the Insured \\u2013 Correspondence Address) from the document.\\n\\nInstructions:\\n\\nThis is the physical or mailing address of the insured entity.\\n\\nIt may appear in the email body, contact details section, or signature block.\\n\\nLook for lines or phrases like:\\n\\\"Correspondence Address: 8 Griffin Road\\\"\\n\\\"Insured Address \\u2013 1 Main Street\\\"\\n\\\"Address: Head Office \\u2013 22 King Street\\\"\\n\\nIf multiple addresses are found, prioritise the one labeled as \\\"Head Office\\\" or similar (e.g., \\u201cHO Address\\u201d).\\n\\nExtract the complete line(s) representing the address.\\n\\nIgnore unrelated addresses (e.g., branch, broker, or claimant addresses).\\n\\nOutput:\\n\\nReturn the full Party Address as a string. If no valid address is found, return \\\"N/A\\\"\", \"model_type\": \"ADVANCED\", \"position\": 8, \"result_data_type\": \"TEXT\"}, {\"name\": \"Holding_Broker\", \"prompt\": \"Your task is to extract the Holding Broker from the given text.\\n\\nOnly extract the value if the term \\\"Holding Broker\\\" is explicitly mentioned (case-insensitive).\\n\\nAccept direct patterns such as:\\n\\n\\\"Holding Broker: [Name]\\\"\\n\\\"We are the holding broker\\\"\\n\\\"Acting as the holding broker\\\"\\n\\\"[Name] is the holding broker\\\"\\n\\nDo not infer or assume the broker name based on context, sender domain, or other parties mentioned in the text.\\n\\nIf the statement is like \\u201cWe are the holding broker,\\u201d return the organization or person making the statement only if they are clearly identified nearby (e.g., in a signature block).\\n\\nIf the term \\\"Holding Broker\\\" is not present, or the associated name is unclear, return an empty string \\\"\\\"\", \"prompt_type\": \"advanced\", \"values\": {}, \"data_type\": \"TEXT\", \"prompt_schema\": null, \"description\": \"Extract the value associated with \\\"Holding Broker\\\" from the given text. Only return the value if it is explicitly labeled as \\\"Holding Broker\\\" (case-insensitive). Do not infer or guess the broker name if the label is not clearly mentioned. Return \\\"N/A\\\" if \\\"Holding Broker\\\" is not found\", \"model_type\": \"ADVANCED\", \"position\": 12, \"result_data_type\": \"TEXT\"}, {\"name\": \"Incepts_On\", \"prompt\": \"From the provided reference text, extract the Inception Date of the insurance policy.\\n\\nTreat the following labels as valid indicators of inception (case-insensitive):\\nInception Date, Policy Inception Date, Effective Date, Start Date, Period of Insurance, Renewal Date, Renewal On,**RNL **, Incepts On, **due**, **Due Date**, **Renewal Due**, **Presentation Due**, **Renewal Presentation due**\\n\\nExtract a date only if it appears alongside one of these valid labels.\\n\\nIf the date includes day, month, and year, return it in DD/MM/YYYY format.\\n\\nIf the date includes only day and month, append the year from the email sent date and return in DD/MM/YYYY format.\\n\\nDo not extract any date based solely on the email sent date.\\n\\nIf no valid label or date is present, return an empty string: \\\"\\\".\\n\\nOutput only the extracted date \\u2014 no extra text, quotes, or explanations.\", \"prompt_type\": \"advanced\", \"values\": {}, \"data_type\": \"TEXT\", \"prompt_schema\": null, \"description\": \"Extract just the Inception Date \\u2014 the date the insurance policy is set to begin.\\nIt may also be referred to as \\\"Effective Date\\\", \\\"Start Date\\\", or \\\"Incepts On\\\".\\nDo not return the Renewal Date.\\nIf no relevant start date is found, return \\\"N/A\\\".\", \"model_type\": \"DEFAULT\", \"position\": 13, \"result_data_type\": \"TEXT\"}, {\"name\": \"Expires_On\", \"prompt\": \"\", \"prompt_type\": \"udf\", \"values\": {}, \"data_type\": \"TEXT\", \"prompt_schema\": null, \"description\": \"\", \"model_type\": \"DEFAULT\", \"position\": 14, \"result_data_type\": \"TEXT\"}, {\"name\": \"Main_Cover_Type\", \"prompt\": \"Extract the Main Cover Type from the document. This refers to the level of motor insurance cover requested or provided.\\n\\nInstructions:\\n\\nLook for mentions of possible cover types which includes:\\n\\\"Comprehensive\\\"(\\\"Comp\\\"),  \\\"Third Party Only\\\"(\\\"TPO\\\"), \\\"TPFT\\\" (\\\"Third Party, Fire & Theft\\\"), \\\"Laid Up Accidental Damage and Theft\\\"(Laid Up ADFT) or \\\"Laid Up Fire and Theft\\\"(\\\"Laid Up FT\\\").\\n\\nIdentify all occurrences of these terms throughout the document.\\nExtract the most frequently occurring cover type.\\n\\nIf no valid cover type is found, return \\\"\\\".\\n\\nReturn only the exact cover type value, no extra text or explanation.\\n\\nOutput format:\\n\\nMain Cover Type: \\\"\\\"\", \"prompt_type\": \"advanced\", \"values\": {}, \"data_type\": \"TEXT\", \"prompt_schema\": null, \"description\": \"Extract the Main Cover Type from the input.\\nThis refers to the level of motor insurance cover requested or provided (e.g., \\\"Comprehensive\\\", \\\"Third Party Only\\\", \\\"TPFT\\\").\\nIf no valid cover type is found, return \\\"N/A\\\".\", \"model_type\": \"DEFAULT\", \"position\": 15, \"result_data_type\": \"TEXT\"}, {\"name\": \"Risk_Postcode\", \"prompt\": \"\", \"prompt_type\": \"derived\", \"values\": {}, \"data_type\": \"TEXT\", \"prompt_schema\": null, \"description\": \"\", \"model_type\": \"DEFAULT\", \"position\": 16, \"result_data_type\": \"TEXT\"}, {\"name\": \"Driver_Licence_Tenure\", \"prompt\": \"\", \"prompt_type\": \"derived\", \"values\": {}, \"data_type\": \"TEXT\", \"prompt_schema\": null, \"description\": \"\", \"model_type\": \"DEFAULT\", \"position\": 26, \"result_data_type\": \"TEXT\"}, {\"name\": \"Agency_address\", \"prompt\": \"You are an expert in Insurance underwriting. Your task is to extract the correct Agency address from the OCR-processed Email.\\n\\nFollow the given instructions before extracting the address.\\n\\nInstructions:\\n\\n1. The Agency Address refers to the address of the insurance broker, intermediary, or agent responsible for managing or placing the insurance policy.This address is typically associated with organisations such as Gallagher, UBT, Arthur J. Gallagher, etc.\\n\\n2. Look for addresses that are directly linked to broker personnel (e.g., account managers, account directors, insurance advisors) or company names known to be brokers/intermediaries.\\n\\n3. Exclude any addresses related to the insured party (e.g., the policyholder or client like Hewer Group Ltd or Multi Turn Ltd).\\n\\n4. Return the complete line(s) representing the address, usually found near the broker's name, company name, or email signature.\\n\\n5. If multiple broker addresses are present, select the one associated with the contact sending or managing the case.\\n\\n6. Return the complete physical address exactly as it is displayed in the document, without omitting or reformatting any part.\\n\\n7. If no agency/broker address is identified, return \\\"\\\".\\n\\nOutput Format:\\n\\nA single string containing the agency\\u2019s **physical address**, or \\\"\\\" if not found.\", \"prompt_type\": \"advanced\", \"values\": {}, \"data_type\": \"TEXT\", \"prompt_schema\": null, \"description\": \"Extract the Agency Address from the provided text.\\n\\nDefinition:\\n\\nThe Agency Address refers to the address of the insurance broker, intermediary, or agent responsible for managing or placing the insurance policy.\\n\\nThis address is typically associated with organisations such as Gallagher, UBT, Arthur J. Gallagher, etc.\\n\\nInstructions:\\n\\nLook for addresses that are directly linked to broker personnel (e.g., account managers, account directors, insurance advisors) or company names known to be brokers/intermediaries.\\n\\nExclude any addresses related to the insured party (e.g., the policyholder or client like Hewer Group Ltd or Multi Turn Ltd).\\n\\nReturn the complete line(s) representing the address, usually found near the broker's name, company name, or email signature.\\n\\nIf multiple broker addresses are present, select the one associated with the contact sending or managing the case.\\n\\nIf no agency/broker address is identified, return \\\"N/A\\\".\\n\\nOutput:\\n\\nA single string containing the agency\\u2019s physical address, or \\\"N/A\\\" if not found.\", \"model_type\": \"ADVANCED\", \"position\": 9, \"result_data_type\": \"TEXT\"}, {\"name\": \"Effective_From\", \"prompt\": \"\", \"prompt_type\": \"udf\", \"values\": {}, \"data_type\": \"TEXT\", \"prompt_schema\": null, \"description\": \"\", \"model_type\": \"ADVANCED\", \"position\": 17, \"result_data_type\": \"TEXT\"}, {\"name\": \"Effective_To\", \"prompt\": \"\", \"prompt_type\": \"udf\", \"values\": {}, \"data_type\": \"TEXT\", \"prompt_schema\": null, \"description\": \"\", \"model_type\": \"ADVANCED\", \"position\": 18, \"result_data_type\": \"TEXT\"}, {\"name\": \"Is_Holding_Broker\", \"prompt\": \"\", \"prompt_type\": \"udf\", \"values\": {}, \"data_type\": \"TEXT\", \"prompt_schema\": null, \"description\": \"\", \"model_type\": \"DEFAULT\", \"position\": 21, \"result_data_type\": \"TEXT\"}, {\"name\": \"Transaction_Type\", \"prompt\": \"\", \"prompt_type\": \"udf\", \"values\": {}, \"data_type\": \"TEXT\", \"prompt_schema\": null, \"description\": \"\", \"model_type\": \"DEFAULT\", \"position\": 22, \"result_data_type\": \"TEXT\"}, {\"name\": \"Agency_Contact\", \"prompt\": \"Extract the Agency Contact \\u2014 this is the name of the person who sent the original enquiry from the agency (broker/intermediary) to the insurer.\\n\\nInstructions:\\n\\nLook for the first email in the thread that is sent from a broker or intermediary (not the insurer).\\n\\nIdentify the sender\\u2019s full name from that email, typically found near the signature block (e.g., at the bottom).\\n\\nReturn only the sender\\u2019s full name .\\n\\nDo not return email addresses, phone numbers, or job titles.\\n\\nIf no agency contact name is found, return \\\"\\\".\", \"prompt_type\": \"advanced\", \"values\": {}, \"data_type\": \"TEXT\", \"prompt_schema\": null, \"description\": \"Extract the Agency Contact \\u2014 this is the name of the person who sent the email or prepared the Broker Presentation.\\n\\nInstructions:\\n\\nLook for the sender\\u2019s name in the email body, especially near the signature section at the end of the email.\\n\\nIf the name is mentioned in the Broker Presentation, usually on the first or last page, extract it from there.\\n\\nReturn only the full name of the person (e.g., John Smith).\\n\\nDo not return any email addresses, phone numbers, or job titles.\\n\\nIf no name is found, return \\\"N/A\\\"\", \"model_type\": \"DEFAULT\", \"position\": 11, \"result_data_type\": \"TEXT\"}, {\"name\": \"Driver_Details\", \"prompt\": \"Task : Extract all driver-specific details from the Email body.\\n\\nFor each driver, extract the following fields. If a field is missing or not clearly present, use an empty string '':\\n\\nDriver Name \\u2013 The full name of the driver(For example : \\\"Williams\\\").\\nDriver DOB \\u2013 The date of birth of the driver.\\nLicence Date \\u2013 The date when the driver obtained their license.\\nConviction code \\u2013 The conviction code(s), if any, associated with this driver(For example 'SP30', 'IN10' etc).\\nDriver claim \\u2013 Claim information related to this driver, if any.\\n\\nInstructions:\\nEnsure that data is correctly attributed to the corresponding driver.\\nIf driver name is not available, eliminate that row.\\nDate Normalization Rules (for both DOB and Licence Date):\\nIf the date is in dd/mm/yyyy format, keep it as is.\\nIf only year \\u2192 01/01/yyyy\\nIf month+year \\u2192 01/mm/yyyy\\n\\nOutput all dates as dd/mm/yyyy\\nReturn the tabular format output as specified below without any additional text.\\nExample Output format:\\n[ [\\\"Driver Name\\\", \\\"Driver DOB\\u201d, \\\"Licence Date\\\", \\\"Conviction Code\\\", \\\"Driver Claims\\\"], [\\\"<Driver Name>\\\", \\\"<Driver DOB>\\\", \\\"<Licence Date>\\\", \\\"<Conviction Code>\\\", \\\"<Driver Claims>\\\"] ]\\n\\nLet's think step by step.\", \"prompt_type\": \"advanced\", \"values\": {}, \"data_type\": \"TEXT\", \"prompt_schema\": null, \"description\": \"Task : Extract all driver-specific details from the Email body.\\n\\nFor each driver, extract the following fields. If a field is missing or not clearly present, use an empty string '':\\n\\nDriver Name \\u2013 The full name of the driver.\\nDriver DOB \\u2013 The date of birth of the driver.\\nLicence Date \\u2013 The date when the driver obtained their license.\\nConviction code \\u2013 The conviction code(s), if any, associated with this driver(For example 'SP30', 'IN10' etc).\\nDriver claim \\u2013 Claim information related to this driver, if any.\\n\\nInstructions:\\n--> Ensure that data is correctly attributed to the corresponding driver.\\n--> If driver name is not available, eliminate that row.\\n\\nReturn the tabular format output as specified below without any additional text.\\nExample Output format:\\n[\\n  [\\\"Driver Name\\\", \\\"Driver DOB\\u201d, \\\"Licence Date\\\", \\\"Conviction code\\\", \\\"Driver Claims\\\"],\\n  [\\\"<Driver Name>\\\", \\\"<Driver DOB>\\\", \\\"<Licence Date>\\\", \\\"<Conviction Code>\\\", \\\"<Driver Claims>\\\"],\\n]\\n\\nLet's think step by step.\", \"model_type\": \"ADVANCED\", \"position\": 24, \"result_data_type\": \"TEXT\"}, {\"name\": \"Driver_Age\", \"prompt\": \"\", \"prompt_type\": \"derived\", \"values\": {}, \"data_type\": \"TEXT\", \"prompt_schema\": null, \"description\": \"\", \"model_type\": \"DEFAULT\", \"position\": 25, \"result_data_type\": \"TEXT\"}, {\"name\": \"Today_date\", \"prompt\": \"\", \"prompt_type\": \"udf\", \"values\": {}, \"data_type\": \"TEXT\", \"prompt_schema\": null, \"description\": \"\", \"model_type\": \"DEFAULT\", \"position\": 23, \"result_data_type\": \"TEXT\"}, {\"name\": \"Drive_Type\", \"prompt\": \"\", \"prompt_type\": \"udf\", \"values\": {}, \"data_type\": \"TEXT\", \"prompt_schema\": null, \"description\": \"\", \"model_type\": \"DEFAULT\", \"position\": 28, \"result_data_type\": \"TEXT\"}, {\"name\": \"Driver_Data_Merged\", \"prompt\": \"\", \"prompt_type\": \"udf\", \"values\": {}, \"data_type\": \"TEXT\", \"prompt_schema\": null, \"description\": \"\", \"model_type\": \"DEFAULT\", \"position\": 27, \"result_data_type\": \"TEXT\"}, {\"name\": \"Driver_Party_Table\", \"prompt\": \"\", \"prompt_type\": \"udf\", \"values\": {}, \"data_type\": \"TEXT\", \"prompt_schema\": null, \"description\": \"\", \"model_type\": \"DEFAULT\", \"position\": 29, \"result_data_type\": \"TEXT\"}, {\"name\": \"Excess_Type_Accident_Damage\", \"prompt\": \"Extract the Excess Type for All Damage, typically labeled as AD, ADFT, or ADFTWS.\\n\\nInstructions:\\n\\nLook for values labeled under or near \\\"Excess Type\\\", \\\"All Damage\\\", \\\"AD\\\", \\\"ADFT\\\", \\\"ADFTWS\\\".\\nIf no such value is found, return an empty string \\\"\\\".\\n\\nOutput Format:\\nExcess Value: \\\"\\\"\", \"prompt_type\": \"advanced\", \"values\": {}, \"data_type\": \"TEXT\", \"prompt_schema\": null, \"description\": \"Extract the Excess Type for Accident Damage, such as ADFT or ADFTWS.\\nLook for values labeled under \\\"Excess Type\\\" or near the Accident Damage section.\\nIf no such value is found, return \\\"N/A\\\".\\n\\nOutput:\\nReturn either ADFT, ADFTWS, or \\\"N/A\\\"\", \"model_type\": \"DEFAULT\", \"position\": 31, \"result_data_type\": \"TEXT\"}, {\"name\": \"Excess_Type_Fire\", \"prompt\": \"Extract the Excess Type for Fire, typically labeled under fire-related sections.\\n\\nInstructions:\\n\\nLook for values labeled under or near \\\"Fire Excess\\\", \\\"Excess Type - Fire\\\", \\\"ADFT\\\", \\\"ADFTWS\\\", \\\"ADF&F\\\", \\\"AD&FT\\\" or similar fire-related descriptions.\\n\\nIf no such value is found, return an empty string \\\"\\\".\\n\\nOutput Format:\\nExcess Value: \\\"\\\"\", \"prompt_type\": \"advanced\", \"values\": {}, \"data_type\": \"TEXT\", \"prompt_schema\": null, \"description\": \"Extract the Excess Type for Accident Damage generally referred as AD or ADFT or ADFTWS. Look for values labeled under \\\"Excess Type\\\" .\\nIf no such value is found, return \\\"N/A\\\".\\n\\nOutput:\\nReturn excess value if not found retrun \\\"\\\"\", \"model_type\": \"DEFAULT\", \"position\": 30, \"result_data_type\": \"TEXT\"}, {\"name\": \"Excess_Type_Theft\", \"prompt\": \"Extract the Excess Type for Theft, typically labeled under theft-related sections.\\n\\nInstructions:\\n\\nLook for values labeled under \\\"Theft Excess\\\", \\\"Excess Type - Theft\\\", \\\"Theft\\\", \\\"ADFT\\\", \\\"ADF&T\\\", \\\"AD&FT\\\" or related terms.\\nIf no such value is found, return an empty string \\\"\\\".\\n\\nOutput Format:\\nExcess Value: \\\"\\\"\", \"prompt_type\": \"advanced\", \"values\": {}, \"data_type\": \"TEXT\", \"prompt_schema\": null, \"description\": \"Extract the values labeled under \\\"Excess Type\\\" for Fire Excess, also referred to as **Excess** or **ADFT** or **ADFTWS**. If no such value is found, return \\\"N/A\\\".\\n\\nOutput:\\nReturn excess value if not found retrun \\\"\\\"\", \"model_type\": \"DEFAULT\", \"position\": 32, \"result_data_type\": \"TEXT\"}, {\"name\": \"Excess_Type_WS\", \"prompt\": \"Extract the Excess Type for Windscreen, typically labeled under windscreen-related sections.\\n\\nInstructions:\\n\\nLook for values labeled under or near \\\"Windscreen Excess\\\", \\\"Excess Type - Windscreen\\\", \\\"Windscreen\\\", \\\"ADFTWS\\\" , \\\"WS Excess\\\" or similar terms.\\n\\nIf no such value is found, return an empty string \\\"\\\".\\n\\nOutput Format:\\nExcess Value: \\\"\\\"\", \"prompt_type\": \"advanced\", \"values\": {}, \"data_type\": \"TEXT\", \"prompt_schema\": null, \"description\": \"Extract the values labeled under \\\"Excess Type\\\" for Fire Excess, also referred to as **Excess** or **ADFT** or **ADFTWS**. If no such value is found, return \\\"N/A\\\".\\n\\nOutput:\\nReturn excess value if not found retrun \\\"\\\"\", \"model_type\": \"DEFAULT\", \"position\": 33, \"result_data_type\": \"TEXT\"}, {\"name\": \"Vehicle_Schedule_Data\", \"prompt\": \"Your task is to extract a table with two columns: \\\"Vehicle Registration\\\" (e.g., \\\"AB12 XYZ\\\", \\\"KL01AB1234\\\") and \\\"Cover Vehicle\\\" (e.g., \\\"TPO\\\", \\\"TPFT\\\", \\\"Comprehensive\\\", \\\"Comp\\\").\\n\\nStep1: Identify valid vehicle registration numbers and their associated cover types.\\n\\nStep2: Convert all vehicle registration numbers to uppercase.\\n\\nStep3: If a cover type is not found for a valid registration, include the registration number with an empty string.\\n\\nStep4: Ignore any entries without valid registration numbers and exclude irrelevant text (e.g., disclaimers or general notes).\\n\\nOutput Format:\\n\\n[ [\\\"Vehicle Registration\\\", \\\"Cover Vehicle\\\"], [\\\"AB12 XYZ\\\", \\\"TPO\\\"],]\\nIf no valid rows found, return [] only.\\n\\nLet's think step by step\", \"prompt_type\": \"advanced\", \"values\": {}, \"data_type\": \"TEXT\", \"prompt_schema\": null, \"description\": \"**Vehicle Registration** - This column should contain the registration number (license plate) of each vehicle (e.g., \\\"AB12 XYZ\\\", \\\"XYZ 1234\\\").\", \"model_type\": \"ADVANCED\", \"position\": 35, \"result_data_type\": \"TEXT\"}, {\"name\": \"Business_Category\", \"prompt\": \"\", \"prompt_type\": \"udf\", \"values\": {}, \"data_type\": \"TEXT\", \"prompt_schema\": null, \"description\": \"\", \"model_type\": \"DEFAULT\", \"position\": 34, \"result_data_type\": \"TEXT\"}, {\"name\": \"Vehicle_Count_From_Table\", \"prompt\": \"\", \"prompt_type\": \"udf\", \"values\": {}, \"data_type\": \"TEXT\", \"prompt_schema\": null, \"description\": \"\", \"model_type\": \"DEFAULT\", \"position\": 40, \"result_data_type\": \"TEXT\"}, {\"name\": \"Offering_Type\", \"prompt\": \"\", \"prompt_type\": \"udf\", \"values\": {}, \"data_type\": \"TEXT\", \"prompt_schema\": null, \"description\": \"\", \"model_type\": \"DEFAULT\", \"position\": 42, \"result_data_type\": \"TEXT\"}, {\"name\": \"Unique__Values__Cover__Basis\", \"prompt\": \"\", \"prompt_type\": \"udf\", \"values\": {}, \"data_type\": \"TEXT\", \"prompt_schema\": null, \"description\": \"\", \"model_type\": \"DEFAULT\", \"position\": 36, \"result_data_type\": \"TEXT\"}, {\"name\": \"Cover_Basis_Mapping\", \"prompt\": \"\", \"prompt_type\": \"derived\", \"values\": {}, \"data_type\": \"TEXT\", \"prompt_schema\": null, \"description\": \"\", \"model_type\": \"DEFAULT\", \"position\": 37, \"result_data_type\": \"TEXT\"}, {\"name\": \"Vehicle_Schedule_Table\", \"prompt\": \"\", \"prompt_type\": \"udf\", \"values\": {}, \"data_type\": \"TEXT\", \"prompt_schema\": null, \"description\": \"\", \"model_type\": \"DEFAULT\", \"position\": 38, \"result_data_type\": \"TEXT\"}, {\"name\": \"Vehicle_Count_From_Email\", \"prompt\": \"You are an expert at processing vehicle insurance Emails.\\n\\nYour task is to extract and return the numerical value for number of vehicles explicitly mentioned in the email. Look for phrases such as:\\n\\n\\\"Number of vehicles in MID\\\", \\\"Number of vehicles in vehicle schedule\\\", \\\"Total vehicles listed\\\", \\\"Vehicles submitted to MID\\\",\\nor any similar phrasing indicating a specific count of vehicles.\\n\\nDo not calculate or count vehicle entries manually. Only extract the number if it is clearly and explicitly stated in close proximity to these phrases.\\n\\nIf no explicit count is mentioned, return \\\"\\\".\\n\\nLet's think step by step.\", \"prompt_type\": \"advanced\", \"values\": {}, \"data_type\": \"TEXT\", \"prompt_schema\": null, \"description\": \"Extract the number of vehicles mentioned in the Email.\", \"model_type\": \"DEFAULT\", \"position\": 39, \"result_data_type\": \"TEXT\"}, {\"name\": \"Number_of_Notifiable_Vehicles\", \"prompt\": \"\", \"prompt_type\": \"udf\", \"values\": {}, \"data_type\": \"TEXT\", \"prompt_schema\": null, \"description\": \"\", \"model_type\": \"DEFAULT\", \"position\": 41, \"result_data_type\": \"TEXT\"}, {\"name\": \"Agency_Code\", \"prompt\": \"Extract the Agency Code from the provided email subject line.\\n\\nThe Agency Code is a 7-digit numeric value.\\n\\nIt is commonly found in the email subject.\\n\\nThe expected format is:\\n\\n[Galileo Number] \\u2013 [Agency Code] \\u2013 [Submission Name]\\n\\nExample:\\nQ009258247 - 1169877 - FW EXTERNAL New Motor Fleet Enquiry\\n\\nSeparators may vary (e.g., hyphens, dashes, or spaces), but the Agency Code is typically the second 7-digit number in the sequence.\\n\\nExtract the 7-digit number that appears between the Galileo Number and the submission description.\\n\\nIf no valid Agency Code is found, return an empty string \\\"\\\"\", \"prompt_type\": \"advanced\", \"values\": {}, \"data_type\": \"TEXT\", \"prompt_schema\": null, \"description\": \"From the provided email content, extract the Agency Code.\\n\\nThe Agency Code is a 7 digit numeric value.\\n\\nIt is commonly found in the **email subject** line, often after a hyphen (-) or embedded between other reference numbers.\\n\\nLook for patterns like:\\n[Galelio Number]-[AgencyCode]-[Submission Name]\\n\\nIt is the second numeric value in a hyphen-separated subject string.\\n\\nExtract only the numeric Agency Code.\\nIf no agency code is found, return an empty string \\\"\\\"\", \"model_type\": \"DEFAULT\", \"position\": 43, \"result_data_type\": \"TEXT\"}, {\"name\": \"Main_Cover_Type_Mapped\", \"prompt\": \"\", \"prompt_type\": \"derived\", \"values\": {}, \"data_type\": \"TEXT\", \"prompt_schema\": null, \"description\": \"\", \"model_type\": \"DEFAULT\", \"position\": 44, \"result_data_type\": \"TEXT\"}, {\"name\": \"Party_Address_Line_2\", \"prompt\": \"\", \"prompt_type\": \"udf\", \"values\": {}, \"data_type\": \"TEXT\", \"prompt_schema\": null, \"description\": \"\", \"model_type\": \"DEFAULT\", \"position\": 47, \"result_data_type\": \"TEXT\"}, {\"name\": \"Party_Address_Line_3\", \"prompt\": \"\", \"prompt_type\": \"udf\", \"values\": {}, \"data_type\": \"TEXT\", \"prompt_schema\": null, \"description\": \"\", \"model_type\": \"DEFAULT\", \"position\": 48, \"result_data_type\": \"TEXT\"}, {\"name\": \"Party_Address_Country\", \"prompt\": \"\", \"prompt_type\": \"udf\", \"values\": {}, \"data_type\": \"TEXT\", \"prompt_schema\": null, \"description\": \"\", \"model_type\": \"DEFAULT\", \"position\": 49, \"result_data_type\": \"TEXT\"}, {\"name\": \"Party_Address_State\", \"prompt\": \"\", \"prompt_type\": \"udf\", \"values\": {}, \"data_type\": \"TEXT\", \"prompt_schema\": null, \"description\": \"\", \"model_type\": \"DEFAULT\", \"position\": 50, \"result_data_type\": \"TEXT\"}, {\"name\": \"Party_Address_City\", \"prompt\": \"\", \"prompt_type\": \"udf\", \"values\": {}, \"data_type\": \"TEXT\", \"prompt_schema\": null, \"description\": \"\", \"model_type\": \"DEFAULT\", \"position\": 51, \"result_data_type\": \"TEXT\"}, {\"name\": \"Party_Address_Postcode\", \"prompt\": \"\", \"prompt_type\": \"udf\", \"values\": {}, \"data_type\": \"TEXT\", \"prompt_schema\": null, \"description\": \"\", \"model_type\": \"DEFAULT\", \"position\": 52, \"result_data_type\": \"TEXT\"}, {\"name\": \"Party_Address_Line_1\", \"prompt\": \"\", \"prompt_type\": \"udf\", \"values\": {}, \"data_type\": \"TEXT\", \"prompt_schema\": null, \"description\": \"\", \"model_type\": \"DEFAULT\", \"position\": 46, \"result_data_type\": \"TEXT\"}, {\"name\": \"Party_Address_Details\", \"prompt\": \"\", \"prompt_type\": \"derived\", \"values\": {}, \"data_type\": \"TEXT\", \"prompt_schema\": null, \"description\": \"\", \"model_type\": \"DEFAULT\", \"position\": 45, \"result_data_type\": \"TEXT\"}, {\"name\": \"Trade_Descriptions\", \"prompt\": \"\", \"prompt_type\": \"udf\", \"values\": {}, \"data_type\": \"TEXT\", \"prompt_schema\": null, \"description\": \"\", \"model_type\": \"DEFAULT\", \"position\": 53, \"result_data_type\": \"TEXT\"}, {\"name\": \"AXA_Trade_Description\", \"prompt\": \"\", \"prompt_type\": \"derived\", \"values\": {}, \"data_type\": \"TEXT\", \"prompt_schema\": null, \"description\": \"\", \"model_type\": \"DEFAULT\", \"position\": 54, \"result_data_type\": \"TEXT\"}, {\"name\": \"Is_Holding_Broker_Details\", \"prompt\": \"\", \"prompt_type\": \"derived\", \"values\": {}, \"data_type\": \"TEXT\", \"prompt_schema\": null, \"description\": \"\", \"model_type\": \"DEFAULT\", \"position\": 19, \"result_data_type\": \"TEXT\"}, {\"name\": \"Is_Holding_Broker_From_Context\", \"prompt\": \"You are given an email content. Identify if the Broker is the Holding Broker using the steps  below. \\n\\nStep 1 \\u2013 If the email contains (case insensitive, exact match required):\\n\\t\\u2022\\t\\\"we hold\\\"\\n\\t\\u2022\\t\\\"we hold with\\\"\\n\\t\\u2022\\t\\\"we currently hold\\\" but not fleet, insure\\n\\t\\u2022\\t\\\"we are the holding broker\\\"\\n\\t\\u2022\\t\\\"risk we hold\\\" but not by other broker\\n\\t\\u2022\\t\\\"existing client\\u201d\\n\\t\\u2022\\t\\\"our client\\u201d\\n\\t\\u2022\\t\\\"client of ours\\u201d\\u2028Return:\\n{ \\\"holding_broker\\\": \\\"Yes\\\", \\\"source_text\\\": \\\"<matched phrase>\\\" }\\n\\nStep 2 \\u2013 If the email contains (case insensitive, exact match required):\\n\\t\\u2022\\t\\\"we are attacking this risk\\\"\\n\\t\\u2022\\t\\\"we are attacking this one\\\"\\n\\t\\u2022\\t\\\"we are not the holding broker\\\"\\n\\t\\u2022\\t\\\"we hold all lines except fleet\\\"\\u2028Return:\\n{ \\\"holding_broker\\\": \\\"No\\\", \\\"source_text\\\": \\\"<matched phrase>\\\" }\\n\\nStep 3 \\u2013 If no matches are from Step 1 and Step 2:\\u2028Return:\\n{ \\\"holding_broker\\\": \\\"\\\", \\\"source_text\\\": \\\"No identifiable holding broker in statement\\\" }\\n\\nLet's think step by step.\", \"prompt_type\": \"advanced\", \"values\": {}, \"data_type\": \"TEXT\", \"prompt_schema\": null, \"description\": \"You are given an email content. Identify if the Broker is the Holding Broker using the steps  below. \\nReturn only a JSON result in this format:\\n{\\n  \\\"holding_broker\\\": \\\"<Yes | No | Blank>\\\",\\n  \\\"source_text\\\": \\\"<matched phrase or explanation>\\\"\\n}\\n\\nStep 1 \\u2013 If the email contains (case-insensitive):\\n\\t\\u2022\\t\\\"we hold\\\"\\n\\t\\u2022\\t\\\"we hold with\\\"\\n\\t\\u2022\\t\\\"we currently hold\\\"\\n\\t\\u2022\\t\\\"we are the holding broker\\\"\\n\\t\\u2022\\t\\\"risk we hold\\\"\\u2028Return:\\n{ \\\"holding_broker\\\": \\\"Yes\\\", \\\"source_text\\\": \\\"<matched phrase>\\\" }\\n\\nStep 2 \\u2013 If the email contains (case-insensitive):\\n\\t\\u2022\\t\\\"we are attacking this risk\\\"\\n\\t\\u2022\\t\\\"we are attacking this one\\\"\\n\\t\\u2022\\t\\\"we are not the holding broker\\\"\\u2028Return:\\n{ \\\"holding_broker\\\": \\\"No\\\", \\\"source_text\\\": \\\"<matched phrase>\\\" }\\n\\nStep 3 \\u2013 If no match:\\u2028Return:\\n{ \\\"holding_broker\\\": \\\"\\\", \\\"source_text\\\": \\\"No identifiable holding broker in statement\\\" }\\n\\nLet's think step by step.\", \"model_type\": \"ADVANCED\", \"position\": 20, \"result_data_type\": \"TEXT\"}]"}, {"arg_name": "metrics_params", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "{\"source_id\": \"Unknown\", \"source_type\": \"App\", \"user_agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36\"}"}, {"arg_name": "proj_uuid", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"0198ef37-d998-7864-878d-539c9c7ddd98\""}, {"arg_name": "cached_index", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "custom_request", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "{\"enable_map_reduce_extraction\": true, \"feature_flag_overrides\": {\"enable_dummy_feature_c\": true, \"enable_aihub_secret_manager\": true, \"aihub_enable_classification_validation\": true, \"enable_slas\": true, \"enable_advanced_apps\": true, \"aihub_enable_ocr_confidence_validation\": true, \"enable_text_view_in_converse\": true, \"enable_repo_roles\": true, \"enable_deployment_dashboard\": true, \"enable_multi_step_lite\": true, \"enable_runtime_configuration\": true, \"enable_upgrade_in_progress_banner\": true, \"enable_aihub_review_queues\": true, \"enable_aihub_stp_options\": true, \"aihub_enable_native_excel_processing\": true, \"aihub_enable_reasoning_prompt_suggestion\": true, \"enable_email_integration_data_source\": true, \"enable_aihub_saml_mapping\": true, \"enable_review_dashboard\": true, \"aihub_enable_search_history\": true, \"enable_aihub_deployment_notifications\": true, \"aihub_enable_vision_reasoning\": true, \"aihub_enable_migrate_project\": true, \"enable_app_ux_refresh\": true, \"enable_splitter_instructions\": true, \"enterprise_advanced_ocr\": true, \"aihub_enable_manual_app_ibllm_updates\": true, \"aihub_enable_customize_app\": true, \"enable_discourse_community_forum\": true, \"aihub_enable_app_run_gt_sets\": true, \"aihub_enable_navbar_redesign\": true, \"aihub_enable_extended_ai_runtime_expiration\": true, \"aihub_enable_build_split_by_page\": true, \"aihub_enable_search_in_navbar\": true, \"aihub_enable_build_moderation\": true, \"enable_upgrade_expired_apps\": true, \"aihub_enable_sdlc_workspaces\": true, \"enable_decoupled_chatbots\": true, \"aihub_enable_linked_deployments\": true, \"enable_extraction_value_normalization\": true, \"enable_fine_grain_usage_data\": true, \"enable_original_llm_limits\": true, \"enable_passing_class_names_to_splitter\": true, \"enable_search_acl_ui_v2\": true, \"enable_multistep_build\": true}, \"udf_id\": null, \"confidence_for_reasoning\": true}"}, {"arg_name": "doc_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{}"}]}]}, {"label": "Target_Price", "lines": [{"function_id": {"name": "get_extracted_field_value", "source": "NATIVE"}, "inputs": [{"arg_name": "fields", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "FIELD", "data_type_options": ["TEXT"], "value": "__model_result"}, {"arg_name": "field", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "\"Target_Price\""}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{}"}], "output_type": "TEXT"}, {"function_id": {"name": "refine_field_v2", "source": "NATIVE"}, "inputs": [{"arg_name": "prompt", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"Extract only the final target premium value.\\nIf no valid target premium value is found, return \\\"\\\".\\nDo not include any label text like \\\"target premium\\\" or \\\"client is looking for\\\".\\nReturn only the clean value.\""}, {"arg_name": "metrics_params", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "{\"source_id\": \"Unknown\", \"source_type\": \"App\", \"user_agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36\"}"}, {"arg_name": "proj_uuid", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"0198ef37-d998-7864-878d-539c9c7ddd98\""}, {"arg_name": "cached_index", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "custom_request", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "{\"enable_map_reduce_extraction\": true, \"feature_flag_overrides\": {\"enable_dummy_feature_c\": true, \"enable_aihub_secret_manager\": true, \"aihub_enable_classification_validation\": true, \"enable_slas\": true, \"enable_advanced_apps\": true, \"aihub_enable_ocr_confidence_validation\": true, \"enable_text_view_in_converse\": true, \"enable_repo_roles\": true, \"enable_deployment_dashboard\": true, \"enable_multi_step_lite\": true, \"enable_runtime_configuration\": true, \"enable_upgrade_in_progress_banner\": true, \"enable_aihub_review_queues\": true, \"enable_aihub_stp_options\": true, \"aihub_enable_native_excel_processing\": true, \"aihub_enable_reasoning_prompt_suggestion\": true, \"enable_email_integration_data_source\": true, \"enable_aihub_saml_mapping\": true, \"enable_review_dashboard\": true, \"aihub_enable_search_history\": true, \"enable_aihub_deployment_notifications\": true, \"aihub_enable_vision_reasoning\": true, \"aihub_enable_migrate_project\": true, \"enable_app_ux_refresh\": true, \"enable_splitter_instructions\": true, \"enterprise_advanced_ocr\": true, \"aihub_enable_manual_app_ibllm_updates\": true, \"aihub_enable_customize_app\": true, \"enable_discourse_community_forum\": true, \"aihub_enable_app_run_gt_sets\": true, \"aihub_enable_navbar_redesign\": true, \"aihub_enable_extended_ai_runtime_expiration\": true, \"aihub_enable_build_split_by_page\": true, \"aihub_enable_search_in_navbar\": true, \"aihub_enable_build_moderation\": true, \"enable_upgrade_expired_apps\": true, \"aihub_enable_sdlc_workspaces\": true, \"enable_decoupled_chatbots\": true, \"aihub_enable_linked_deployments\": true, \"enable_extraction_value_normalization\": true, \"enable_fine_grain_usage_data\": true, \"enable_original_llm_limits\": true, \"enable_passing_class_names_to_splitter\": true, \"enable_search_acl_ui_v2\": true, \"enable_multistep_build\": true}, \"udf_id\": null, \"confidence_for_reasoning\": true}"}, {"arg_name": "doc_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "data_type", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"TEXT\""}, {"arg_name": "previous_line", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LINE", "data_type_options": ["TEXT"], "value": "Target_Price@0"}, {"arg_name": "prompt_arg_names", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[]"}, {"arg_name": "prompt_arg_vals", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[]"}, {"arg_name": "prompt_arg_data_types", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[]"}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{}"}], "output_type": "TEXT"}, {"function_id": {"name": "run_udf_in_lambda_v2", "source": "NATIVE"}, "inputs": [{"arg_name": "absolute_scripts_path", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"axauk/dev-si-fleet/fs/Instabase Drive/aihub/0198ef37-d998-7864-878d-539c9c7ddd98/project/modules/scripts/REFINER/914ee07e-052c-4f59-9873-84891e3e37f4.json\""}, {"arg_name": "function_args", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "[{\"name\":\"previous_line\",\"data_type\":\"LINE\",\"value\":\"Target_Price@1\"}]"}, {"arg_name": "lambda_udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "doc_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"17068\""}, {"arg_name": "code_arg", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"\\n\\ndef unnamed_custom_function(previous_line, context = {}, keys = {}, **kwargs):\\n\\treturn previous_line.replace(\\\"\\u00a3\\\",\\\"\\\").replace(\\\",\\\",\\\"\\\")\""}, {"arg_name": "fn_name", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"unnamed_custom_function\""}, {"arg_name": "args", "arg_type": "VAR_POSITIONAL", "data_type": "LIST", "value": "[{\"data_type\":\"LINE\",\"value\":\"Target_Price@1\"}]"}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{}"}], "output_type": "TEXT"}]}, {"label": "Agency_Enquiry_Reference", "lines": [{"function_id": {"name": "get_extracted_field_value", "source": "NATIVE"}, "inputs": [{"arg_name": "fields", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "FIELD", "data_type_options": ["TEXT"], "value": "__model_result"}, {"arg_name": "field", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "\"Agency_Enquiry_Reference\""}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{}"}], "output_type": "TEXT"}, {"function_id": {"name": "refine_field_v2", "source": "NATIVE"}, "inputs": [{"arg_name": "prompt", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"Extract only the clean Agency Enquiry Reference value.\\n\\nKeep the full reference if it is in a format like:\\n\\n\\\"RFQ - 156802033\\\"\\n\\n\\\"746134380\\\"\\n\\n\\\"[Quote Ref: 746134380]\\\"\\n\\nRemove any surrounding labels, brackets, or filler text.\\nReturn only the clean reference string. If no valid reference is found, return \\\"\\\".\""}, {"arg_name": "metrics_params", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "{\"source_id\": \"Unknown\", \"source_type\": \"App\", \"user_agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36\"}"}, {"arg_name": "proj_uuid", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"0198ef37-d998-7864-878d-539c9c7ddd98\""}, {"arg_name": "cached_index", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "custom_request", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "{\"enable_map_reduce_extraction\": true, \"feature_flag_overrides\": {\"enable_dummy_feature_c\": true, \"enable_aihub_secret_manager\": true, \"aihub_enable_classification_validation\": true, \"enable_slas\": true, \"enable_advanced_apps\": true, \"aihub_enable_ocr_confidence_validation\": true, \"enable_text_view_in_converse\": true, \"enable_repo_roles\": true, \"enable_deployment_dashboard\": true, \"enable_multi_step_lite\": true, \"enable_runtime_configuration\": true, \"enable_upgrade_in_progress_banner\": true, \"enable_aihub_review_queues\": true, \"enable_aihub_stp_options\": true, \"aihub_enable_native_excel_processing\": true, \"aihub_enable_reasoning_prompt_suggestion\": true, \"enable_email_integration_data_source\": true, \"enable_aihub_saml_mapping\": true, \"enable_review_dashboard\": true, \"aihub_enable_search_history\": true, \"enable_aihub_deployment_notifications\": true, \"aihub_enable_vision_reasoning\": true, \"aihub_enable_migrate_project\": true, \"enable_app_ux_refresh\": true, \"enable_splitter_instructions\": true, \"enterprise_advanced_ocr\": true, \"aihub_enable_manual_app_ibllm_updates\": true, \"aihub_enable_customize_app\": true, \"enable_discourse_community_forum\": true, \"aihub_enable_app_run_gt_sets\": true, \"aihub_enable_navbar_redesign\": true, \"aihub_enable_extended_ai_runtime_expiration\": true, \"aihub_enable_build_split_by_page\": true, \"aihub_enable_search_in_navbar\": true, \"aihub_enable_build_moderation\": true, \"enable_upgrade_expired_apps\": true, \"aihub_enable_sdlc_workspaces\": true, \"enable_decoupled_chatbots\": true, \"aihub_enable_linked_deployments\": true, \"enable_extraction_value_normalization\": true, \"enable_fine_grain_usage_data\": true, \"enable_original_llm_limits\": true, \"enable_passing_class_names_to_splitter\": true, \"enable_search_acl_ui_v2\": true, \"enable_multistep_build\": true}, \"udf_id\": null, \"confidence_for_reasoning\": true}"}, {"arg_name": "doc_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "data_type", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"TEXT\""}, {"arg_name": "previous_line", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LINE", "data_type_options": ["TEXT"], "value": "Agency_Enquiry_Reference@0"}, {"arg_name": "prompt_arg_names", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[]"}, {"arg_name": "prompt_arg_vals", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[]"}, {"arg_name": "prompt_arg_data_types", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[]"}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{}"}], "output_type": "TEXT"}]}, {"label": "Broker_Deadline", "lines": [{"function_id": {"name": "get_extracted_field_value", "source": "NATIVE"}, "inputs": [{"arg_name": "fields", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "FIELD", "data_type_options": ["TEXT"], "value": "__model_result"}, {"arg_name": "field", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "\"Broker_Deadline\""}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{}"}], "output_type": "TEXT"}, {"function_id": {"name": "refine_field_v2", "source": "NATIVE"}, "inputs": [{"arg_name": "prompt", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"Just return only date without extra information\""}, {"arg_name": "metrics_params", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "{\"source_id\": \"Unknown\", \"source_type\": \"App\", \"user_agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36\"}"}, {"arg_name": "proj_uuid", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"0198ef37-d998-7864-878d-539c9c7ddd98\""}, {"arg_name": "cached_index", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "custom_request", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "{\"enable_map_reduce_extraction\": true, \"feature_flag_overrides\": {\"enable_dummy_feature_c\": true, \"enable_aihub_secret_manager\": true, \"aihub_enable_classification_validation\": true, \"enable_slas\": true, \"enable_advanced_apps\": true, \"aihub_enable_ocr_confidence_validation\": true, \"enable_text_view_in_converse\": true, \"enable_repo_roles\": true, \"enable_deployment_dashboard\": true, \"enable_multi_step_lite\": true, \"enable_runtime_configuration\": true, \"enable_upgrade_in_progress_banner\": true, \"enable_aihub_review_queues\": true, \"enable_aihub_stp_options\": true, \"aihub_enable_native_excel_processing\": true, \"aihub_enable_reasoning_prompt_suggestion\": true, \"enable_email_integration_data_source\": true, \"enable_aihub_saml_mapping\": true, \"enable_review_dashboard\": true, \"aihub_enable_search_history\": true, \"enable_aihub_deployment_notifications\": true, \"aihub_enable_vision_reasoning\": true, \"aihub_enable_migrate_project\": true, \"enable_app_ux_refresh\": true, \"enable_splitter_instructions\": true, \"enterprise_advanced_ocr\": true, \"aihub_enable_manual_app_ibllm_updates\": true, \"aihub_enable_customize_app\": true, \"enable_discourse_community_forum\": true, \"aihub_enable_app_run_gt_sets\": true, \"aihub_enable_navbar_redesign\": true, \"aihub_enable_extended_ai_runtime_expiration\": true, \"aihub_enable_build_split_by_page\": true, \"aihub_enable_search_in_navbar\": true, \"aihub_enable_build_moderation\": true, \"enable_upgrade_expired_apps\": true, \"aihub_enable_sdlc_workspaces\": true, \"enable_decoupled_chatbots\": true, \"aihub_enable_linked_deployments\": true, \"enable_extraction_value_normalization\": true, \"enable_fine_grain_usage_data\": true, \"enable_original_llm_limits\": true, \"enable_passing_class_names_to_splitter\": true, \"enable_search_acl_ui_v2\": true, \"enable_multistep_build\": true}, \"udf_id\": null, \"confidence_for_reasoning\": true}"}, {"arg_name": "doc_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "data_type", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"TEXT\""}, {"arg_name": "previous_line", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LINE", "data_type_options": ["TEXT"], "value": "Broker_Deadline@0"}, {"arg_name": "prompt_arg_names", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[]"}, {"arg_name": "prompt_arg_vals", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[]"}, {"arg_name": "prompt_arg_data_types", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[]"}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{}"}], "output_type": "TEXT"}, {"function_id": {"name": "run_udf_in_lambda_v2", "source": "NATIVE"}, "inputs": [{"arg_name": "absolute_scripts_path", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"axauk/dev-si-fleet/fs/Instabase Drive/aihub/0198ef37-d998-7864-878d-539c9c7ddd98/project/modules/scripts/REFINER/44eb448b-8d39-4bb3-81d5-e3d64992b242.json\""}, {"arg_name": "function_args", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "[{\"name\":\"previous_line\",\"data_type\":\"LINE\",\"value\":\"Broker_Deadline@1\"}]"}, {"arg_name": "lambda_udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "doc_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"17069\""}, {"arg_name": "code_arg", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"\\n\\ndef adding_business_logic(previous_line, context = {}, keys = {}, **kwargs):\\n\\tfrom datetime import datetime, timedelta\\n\\t\\n\\t\\n\\tdef add_calendar_days(start_date, days):\\n\\t    \\\"\\\"\\\"Add calendar days (including weekends) to a given date.\\\"\\\"\\\"\\n\\t    return start_date + timedelta(days=days)\\n\\t\\n\\tdef add_weekdays(start_date, days):\\n\\t    \\\"\\\"\\\"Add weekdays to a given date, skipping weekends.\\\"\\\"\\\"\\n\\t    while days > 0:\\n\\t        start_date += timedelta(days=1)\\n\\t        if start_date.weekday() < 5:  # Weekdays: Mon-Fri = 0-4\\n\\t            days -= 1\\n\\t    return start_date\\n\\t\\n\\tdef process_date(input_str):\\n\\t    today = datetime.today().replace(hour=0, minute=0, second=0, microsecond=0)\\n\\t\\n\\t    # Try to parse dd/mm/yyyy\\n\\t    try:\\n\\t        parsed_date = datetime.strptime(input_str, \\\"%d/%m/%Y\\\")\\n\\t    except ValueError:\\n\\t        # If year not present, try dd/mm check\\n\\t        try:\\n\\t            try:\\n\\t                parsed_date = datetime.strptime(input_str, \\\"%d/%m\\\")\\n\\t                final_date = add_calendar_days(today, 5)\\n\\t                return final_date.strftime(\\\"%d/%m/%Y\\\")\\n\\t            except:\\n\\t                final_date = add_calendar_days(today, 5)\\n\\t                return final_date.strftime(\\\"%d/%m/%Y\\\")\\n\\t        except ValueError:\\n\\t            final_date = add_calendar_days(today, 5)\\n\\t            return final_date.strftime(\\\"%d/%m/%Y\\\")\\n\\t            \\n\\t    # Compare dates\\n\\t    base_date = parsed_date if parsed_date >= today else today\\n\\t\\n\\t    return base_date.strftime(\\\"%d/%m/%Y\\\")\\n\\t\\n\\tresult = process_date(previous_line) \\n\\treturn result\""}, {"arg_name": "fn_name", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"adding_business_logic\""}, {"arg_name": "args", "arg_type": "VAR_POSITIONAL", "data_type": "LIST", "value": "[{\"data_type\":\"LINE\",\"value\":\"Broker_Deadline@1\"}]"}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{}"}], "output_type": "TEXT"}]}, {"label": "Product", "lines": [{"function_id": {"name": "run_udf_in_lambda_v2", "source": "NATIVE"}, "inputs": [{"arg_name": "absolute_scripts_path", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"axauk/dev-si-fleet/fs/Instabase Drive/aihub/0198ef37-d998-7864-878d-539c9c7ddd98/project/modules/scripts/REFINER/bcf13204-6348-4f58-9430-794bb0939a47.json\""}, {"arg_name": "function_args", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "[]"}, {"arg_name": "lambda_udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "doc_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"17070\""}, {"arg_name": "code_arg", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"\\n\\ndef default_value(context = {}, keys = {}, **kwargs):\\n\\treturn \\\"Fleet\\\"\""}, {"arg_name": "fn_name", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"default_value\""}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{\"metrics_params\": {\"data_type\": \"DICT\", \"value\": \"{\\\"source_id\\\": \\\"Unknown\\\", \\\"source_type\\\": \\\"App\\\", \\\"user_agent\\\": \\\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36\\\"}\"}}"}], "output_type": "TEXT"}]}, {"label": "Insured", "lines": [{"function_id": {"name": "get_extracted_field_value", "source": "NATIVE"}, "inputs": [{"arg_name": "fields", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "FIELD", "data_type_options": ["TEXT"], "value": "__model_result"}, {"arg_name": "field", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "\"Insured\""}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{}"}], "output_type": "TEXT"}, {"function_id": {"name": "refine_field_v2", "source": "NATIVE"}, "inputs": [{"arg_name": "prompt", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"Return only the clean **Insured Name**.\\n\\n- Preserve full legal or trading names as written, such as:\\n  - \\\"ABC (Holdings) Ltd\\\"\\n  - \\\"XYZ Holdings\\\"\\n- Remove any preceding labels such as \\\"Client Name:\\\", \\\"Company:\\\", or \\\"Policyholder \\u2013\\\"\\n- Remove any trailing punctuation or filler text\\n\\nIf no insured name is found, return \\\"\\\".\""}, {"arg_name": "metrics_params", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "{\"source_id\": \"Unknown\", \"source_type\": \"App\", \"user_agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36\"}"}, {"arg_name": "proj_uuid", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"0198ef37-d998-7864-878d-539c9c7ddd98\""}, {"arg_name": "cached_index", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "custom_request", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "{\"enable_map_reduce_extraction\": true, \"feature_flag_overrides\": {\"enable_dummy_feature_c\": true, \"enable_aihub_secret_manager\": true, \"aihub_enable_classification_validation\": true, \"enable_slas\": true, \"enable_advanced_apps\": true, \"aihub_enable_ocr_confidence_validation\": true, \"enable_text_view_in_converse\": true, \"enable_repo_roles\": true, \"enable_deployment_dashboard\": true, \"enable_multi_step_lite\": true, \"enable_runtime_configuration\": true, \"enable_upgrade_in_progress_banner\": true, \"enable_aihub_review_queues\": true, \"enable_aihub_stp_options\": true, \"aihub_enable_native_excel_processing\": true, \"aihub_enable_reasoning_prompt_suggestion\": true, \"enable_email_integration_data_source\": true, \"enable_aihub_saml_mapping\": true, \"enable_review_dashboard\": true, \"aihub_enable_search_history\": true, \"enable_aihub_deployment_notifications\": true, \"aihub_enable_vision_reasoning\": true, \"aihub_enable_migrate_project\": true, \"enable_app_ux_refresh\": true, \"enable_splitter_instructions\": true, \"enterprise_advanced_ocr\": true, \"aihub_enable_manual_app_ibllm_updates\": true, \"aihub_enable_customize_app\": true, \"enable_discourse_community_forum\": true, \"aihub_enable_app_run_gt_sets\": true, \"aihub_enable_navbar_redesign\": true, \"aihub_enable_extended_ai_runtime_expiration\": true, \"aihub_enable_build_split_by_page\": true, \"aihub_enable_search_in_navbar\": true, \"aihub_enable_build_moderation\": true, \"enable_upgrade_expired_apps\": true, \"aihub_enable_sdlc_workspaces\": true, \"enable_decoupled_chatbots\": true, \"aihub_enable_linked_deployments\": true, \"enable_extraction_value_normalization\": true, \"enable_fine_grain_usage_data\": true, \"enable_original_llm_limits\": true, \"enable_passing_class_names_to_splitter\": true, \"enable_search_acl_ui_v2\": true, \"enable_multistep_build\": true}, \"udf_id\": null, \"confidence_for_reasoning\": true}"}, {"arg_name": "doc_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "data_type", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"TEXT\""}, {"arg_name": "previous_line", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LINE", "data_type_options": ["TEXT"], "value": "Insured@0"}, {"arg_name": "prompt_arg_names", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[]"}, {"arg_name": "prompt_arg_vals", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[]"}, {"arg_name": "prompt_arg_data_types", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[]"}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{}"}], "output_type": "TEXT"}]}, {"label": "Business_Description", "lines": [{"function_id": {"name": "get_extracted_field_value", "source": "NATIVE"}, "inputs": [{"arg_name": "fields", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "FIELD", "data_type_options": ["TEXT"], "value": "__model_result"}, {"arg_name": "field", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "\"Business_Description\""}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{}"}], "output_type": "TEXT"}, {"function_id": {"name": "refine_field_v2", "source": "NATIVE"}, "inputs": [{"arg_name": "prompt", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"From the extracted text, return only the clean **Business Description**.\\n\\n- Preserve the complete business activity description as written.\\n- Remove any preceding labels such as \\\"Trade:\\\", \\\"Business Description:\\\", or \\\"Nature of Business:\\\"\\n- Remove trailing punctuation, line breaks, or filler text.\\n\\nIf no business description is found, return \\\"\\\"\""}, {"arg_name": "metrics_params", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "{\"source_id\": \"Unknown\", \"source_type\": \"App\", \"user_agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36\"}"}, {"arg_name": "proj_uuid", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"0198ef37-d998-7864-878d-539c9c7ddd98\""}, {"arg_name": "cached_index", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "custom_request", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "{\"enable_map_reduce_extraction\": true, \"feature_flag_overrides\": {\"enable_dummy_feature_c\": true, \"enable_aihub_secret_manager\": true, \"aihub_enable_classification_validation\": true, \"enable_slas\": true, \"enable_advanced_apps\": true, \"aihub_enable_ocr_confidence_validation\": true, \"enable_text_view_in_converse\": true, \"enable_repo_roles\": true, \"enable_deployment_dashboard\": true, \"enable_multi_step_lite\": true, \"enable_runtime_configuration\": true, \"enable_upgrade_in_progress_banner\": true, \"enable_aihub_review_queues\": true, \"enable_aihub_stp_options\": true, \"aihub_enable_native_excel_processing\": true, \"aihub_enable_reasoning_prompt_suggestion\": true, \"enable_email_integration_data_source\": true, \"enable_aihub_saml_mapping\": true, \"enable_review_dashboard\": true, \"aihub_enable_search_history\": true, \"enable_aihub_deployment_notifications\": true, \"aihub_enable_vision_reasoning\": true, \"aihub_enable_migrate_project\": true, \"enable_app_ux_refresh\": true, \"enable_splitter_instructions\": true, \"enterprise_advanced_ocr\": true, \"aihub_enable_manual_app_ibllm_updates\": true, \"aihub_enable_customize_app\": true, \"enable_discourse_community_forum\": true, \"aihub_enable_app_run_gt_sets\": true, \"aihub_enable_navbar_redesign\": true, \"aihub_enable_extended_ai_runtime_expiration\": true, \"aihub_enable_build_split_by_page\": true, \"aihub_enable_search_in_navbar\": true, \"aihub_enable_build_moderation\": true, \"enable_upgrade_expired_apps\": true, \"aihub_enable_sdlc_workspaces\": true, \"enable_decoupled_chatbots\": true, \"aihub_enable_linked_deployments\": true, \"enable_extraction_value_normalization\": true, \"enable_fine_grain_usage_data\": true, \"enable_original_llm_limits\": true, \"enable_passing_class_names_to_splitter\": true, \"enable_search_acl_ui_v2\": true, \"enable_multistep_build\": true}, \"udf_id\": null, \"confidence_for_reasoning\": true}"}, {"arg_name": "doc_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "data_type", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"TEXT\""}, {"arg_name": "previous_line", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LINE", "data_type_options": ["TEXT"], "value": "Business_Description@0"}, {"arg_name": "prompt_arg_names", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[]"}, {"arg_name": "prompt_arg_vals", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[]"}, {"arg_name": "prompt_arg_data_types", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[]"}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{}"}], "output_type": "TEXT"}]}, {"label": "Company_House_Reference_Party", "lines": [{"function_id": {"name": "get_extracted_field_value", "source": "NATIVE"}, "inputs": [{"arg_name": "fields", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "FIELD", "data_type_options": ["TEXT"], "value": "__model_result"}, {"arg_name": "field", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "\"Company_House_Reference_Party\""}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{}"}], "output_type": "TEXT"}, {"function_id": {"name": "refine_field_v2", "source": "NATIVE"}, "inputs": [{"arg_name": "prompt", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"Just return the final output company registration number of the insured, otherwise return an empty string: \\\"\\\" without any additional text.\""}, {"arg_name": "metrics_params", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "{\"source_id\": \"Unknown\", \"source_type\": \"App\", \"user_agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36\"}"}, {"arg_name": "proj_uuid", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"0198ef37-d998-7864-878d-539c9c7ddd98\""}, {"arg_name": "cached_index", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "custom_request", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "{\"enable_map_reduce_extraction\": true, \"feature_flag_overrides\": {\"enable_dummy_feature_c\": true, \"enable_aihub_secret_manager\": true, \"aihub_enable_classification_validation\": true, \"enable_slas\": true, \"enable_advanced_apps\": true, \"aihub_enable_ocr_confidence_validation\": true, \"enable_text_view_in_converse\": true, \"enable_repo_roles\": true, \"enable_deployment_dashboard\": true, \"enable_multi_step_lite\": true, \"enable_runtime_configuration\": true, \"enable_upgrade_in_progress_banner\": true, \"enable_aihub_review_queues\": true, \"enable_aihub_stp_options\": true, \"aihub_enable_native_excel_processing\": true, \"aihub_enable_reasoning_prompt_suggestion\": true, \"enable_email_integration_data_source\": true, \"enable_aihub_saml_mapping\": true, \"enable_review_dashboard\": true, \"aihub_enable_search_history\": true, \"enable_aihub_deployment_notifications\": true, \"aihub_enable_vision_reasoning\": true, \"aihub_enable_migrate_project\": true, \"enable_app_ux_refresh\": true, \"enable_splitter_instructions\": true, \"enterprise_advanced_ocr\": true, \"aihub_enable_manual_app_ibllm_updates\": true, \"aihub_enable_customize_app\": true, \"enable_discourse_community_forum\": true, \"aihub_enable_app_run_gt_sets\": true, \"aihub_enable_navbar_redesign\": true, \"aihub_enable_extended_ai_runtime_expiration\": true, \"aihub_enable_build_split_by_page\": true, \"aihub_enable_search_in_navbar\": true, \"aihub_enable_build_moderation\": true, \"enable_upgrade_expired_apps\": true, \"aihub_enable_sdlc_workspaces\": true, \"enable_decoupled_chatbots\": true, \"aihub_enable_linked_deployments\": true, \"enable_extraction_value_normalization\": true, \"enable_fine_grain_usage_data\": true, \"enable_original_llm_limits\": true, \"enable_passing_class_names_to_splitter\": true, \"enable_search_acl_ui_v2\": true, \"enable_multistep_build\": true}, \"udf_id\": null, \"confidence_for_reasoning\": true}"}, {"arg_name": "doc_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "data_type", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"TEXT\""}, {"arg_name": "previous_line", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LINE", "data_type_options": ["TEXT"], "value": "Company_House_Reference_Party@0"}, {"arg_name": "prompt_arg_names", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[]"}, {"arg_name": "prompt_arg_vals", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[]"}, {"arg_name": "prompt_arg_data_types", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[]"}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{}"}], "output_type": "TEXT"}]}, {"label": "Date_Established", "lines": [{"function_id": {"name": "get_extracted_field_value", "source": "NATIVE"}, "inputs": [{"arg_name": "fields", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "FIELD", "data_type_options": ["TEXT"], "value": "__model_result"}, {"arg_name": "field", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "\"Date_Established\""}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{}"}], "output_type": "TEXT"}, {"function_id": {"name": "refine_field_v2", "source": "NATIVE"}, "inputs": [{"arg_name": "prompt", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"You are an expert in document analysis and date extraction.\\nYour task is to extract and normalize a date from the given text.\\nInstructions:\\nInterpret all date formats strictly as day/month/year (DD/MM/YYYY), regardless of how the date appears in the text. The first number is always the day, second is the month, third is the year.\\nNormalize and return the date in the format: DD/MM/YYYY (zero-padded).\\nIf only a year is present (e.g. \\\"2020\\\"), return it as 01/01/YYYY.\\nIf a month and year are present (e.g. \\\"March 2020\\\" or \\\"03/2020\\\"), return it as 01/MM/YYYY.\\nIf a full day, month, and year are present, return the exact date in DD/MM/YYYY format.\\nReturn only the extracted value (no label or explanation in output).\\nIf no valid establishment date is found, return exactly: \\\"\\\" (empty string, without quotes).\\nExamples:\\nExample 1:\\nText: The business was founded in 2021.\\nOutput: 01/01/2021\\nExample 2:\\nText: Established: March 2020.\\nOutput: 01/03/2020\\nExample 3:\\nText: Policy effective from 5/11/2023 for one year.\\nOutput: 05/11/2023\\nExample 4:\\nText: Driver's licence issue date: 14-6-90, valid for 10 years.\\nOutput: 14/06/1990\\nExample 5:\\nText: Vehicle registration expires on 01.12.2025.\\nOutput: 01/12/2025\\nExample 6:\\nText: Renewal date: \\\"\\\"\\nOutput: \\\"\\\"\""}, {"arg_name": "metrics_params", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "{\"source_id\": \"Unknown\", \"source_type\": \"App\", \"user_agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36\"}"}, {"arg_name": "proj_uuid", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"0198ef37-d998-7864-878d-539c9c7ddd98\""}, {"arg_name": "cached_index", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "custom_request", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "{\"enable_map_reduce_extraction\": true, \"feature_flag_overrides\": {\"enable_dummy_feature_c\": true, \"enable_aihub_secret_manager\": true, \"aihub_enable_classification_validation\": true, \"enable_slas\": true, \"enable_advanced_apps\": true, \"aihub_enable_ocr_confidence_validation\": true, \"enable_text_view_in_converse\": true, \"enable_repo_roles\": true, \"enable_deployment_dashboard\": true, \"enable_multi_step_lite\": true, \"enable_runtime_configuration\": true, \"enable_upgrade_in_progress_banner\": true, \"enable_aihub_review_queues\": true, \"enable_aihub_stp_options\": true, \"aihub_enable_native_excel_processing\": true, \"aihub_enable_reasoning_prompt_suggestion\": true, \"enable_email_integration_data_source\": true, \"enable_aihub_saml_mapping\": true, \"enable_review_dashboard\": true, \"aihub_enable_search_history\": true, \"enable_aihub_deployment_notifications\": true, \"aihub_enable_vision_reasoning\": true, \"aihub_enable_migrate_project\": true, \"enable_app_ux_refresh\": true, \"enable_splitter_instructions\": true, \"enterprise_advanced_ocr\": true, \"aihub_enable_manual_app_ibllm_updates\": true, \"aihub_enable_customize_app\": true, \"enable_discourse_community_forum\": true, \"aihub_enable_app_run_gt_sets\": true, \"aihub_enable_navbar_redesign\": true, \"aihub_enable_extended_ai_runtime_expiration\": true, \"aihub_enable_build_split_by_page\": true, \"aihub_enable_search_in_navbar\": true, \"aihub_enable_build_moderation\": true, \"enable_upgrade_expired_apps\": true, \"aihub_enable_sdlc_workspaces\": true, \"enable_decoupled_chatbots\": true, \"aihub_enable_linked_deployments\": true, \"enable_extraction_value_normalization\": true, \"enable_fine_grain_usage_data\": true, \"enable_original_llm_limits\": true, \"enable_passing_class_names_to_splitter\": true, \"enable_search_acl_ui_v2\": true, \"enable_multistep_build\": true}, \"udf_id\": null, \"confidence_for_reasoning\": true}"}, {"arg_name": "doc_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "data_type", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"TEXT\""}, {"arg_name": "previous_line", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LINE", "data_type_options": ["TEXT"], "value": "Date_Established@0"}, {"arg_name": "prompt_arg_names", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[]"}, {"arg_name": "prompt_arg_vals", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[]"}, {"arg_name": "prompt_arg_data_types", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[]"}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{}"}], "output_type": "TEXT"}]}, {"label": "Party_Address", "lines": [{"function_id": {"name": "get_extracted_field_value", "source": "NATIVE"}, "inputs": [{"arg_name": "fields", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "FIELD", "data_type_options": ["TEXT"], "value": "__model_result"}, {"arg_name": "field", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "\"Party_Address\""}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{}"}], "output_type": "TEXT"}, {"function_id": {"name": "refine_field_v2", "source": "NATIVE"}, "inputs": [{"arg_name": "prompt", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"Clean and return **only the address details**. This means:\\n- Preserve the physical address lines.\\n- Format it as a single clean string separated by commas.\\n- If no valid address is present, return \\\"\\\".\""}, {"arg_name": "metrics_params", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "{\"source_id\": \"Unknown\", \"source_type\": \"App\", \"user_agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36\"}"}, {"arg_name": "proj_uuid", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"0198ef37-d998-7864-878d-539c9c7ddd98\""}, {"arg_name": "cached_index", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "custom_request", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "{\"enable_map_reduce_extraction\": true, \"feature_flag_overrides\": {\"enable_dummy_feature_c\": true, \"enable_aihub_secret_manager\": true, \"aihub_enable_classification_validation\": true, \"enable_slas\": true, \"enable_advanced_apps\": true, \"aihub_enable_ocr_confidence_validation\": true, \"enable_text_view_in_converse\": true, \"enable_repo_roles\": true, \"enable_deployment_dashboard\": true, \"enable_multi_step_lite\": true, \"enable_runtime_configuration\": true, \"enable_upgrade_in_progress_banner\": true, \"enable_aihub_review_queues\": true, \"enable_aihub_stp_options\": true, \"aihub_enable_native_excel_processing\": true, \"aihub_enable_reasoning_prompt_suggestion\": true, \"enable_email_integration_data_source\": true, \"enable_aihub_saml_mapping\": true, \"enable_review_dashboard\": true, \"aihub_enable_search_history\": true, \"enable_aihub_deployment_notifications\": true, \"aihub_enable_vision_reasoning\": true, \"aihub_enable_migrate_project\": true, \"enable_app_ux_refresh\": true, \"enable_splitter_instructions\": true, \"enterprise_advanced_ocr\": true, \"aihub_enable_manual_app_ibllm_updates\": true, \"aihub_enable_customize_app\": true, \"enable_discourse_community_forum\": true, \"aihub_enable_app_run_gt_sets\": true, \"aihub_enable_navbar_redesign\": true, \"aihub_enable_extended_ai_runtime_expiration\": true, \"aihub_enable_build_split_by_page\": true, \"aihub_enable_search_in_navbar\": true, \"aihub_enable_build_moderation\": true, \"enable_upgrade_expired_apps\": true, \"aihub_enable_sdlc_workspaces\": true, \"enable_decoupled_chatbots\": true, \"aihub_enable_linked_deployments\": true, \"enable_extraction_value_normalization\": true, \"enable_fine_grain_usage_data\": true, \"enable_original_llm_limits\": true, \"enable_passing_class_names_to_splitter\": true, \"enable_search_acl_ui_v2\": true, \"enable_multistep_build\": true}, \"udf_id\": null, \"confidence_for_reasoning\": true}"}, {"arg_name": "doc_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "data_type", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"TEXT\""}, {"arg_name": "previous_line", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LINE", "data_type_options": ["TEXT"], "value": "Party_Address@0"}, {"arg_name": "prompt_arg_names", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[]"}, {"arg_name": "prompt_arg_vals", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[]"}, {"arg_name": "prompt_arg_data_types", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[]"}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{}"}], "output_type": "TEXT"}]}, {"label": "Agency_address", "lines": [{"function_id": {"name": "get_extracted_field_value", "source": "NATIVE"}, "inputs": [{"arg_name": "fields", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "FIELD", "data_type_options": ["TEXT"], "value": "__model_result"}, {"arg_name": "field", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "\"Agency_address\""}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{}"}], "output_type": "TEXT"}, {"function_id": {"name": "refine_field_v2", "source": "NATIVE"}, "inputs": [{"arg_name": "prompt", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"Clean and return **only the address details**. This means:\\n- Preserve the physical address lines.\\n- Format it as a single clean string separated by commas.\\n- If no valid address is present, return \\\"\\\".\""}, {"arg_name": "metrics_params", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "{\"source_id\": \"Unknown\", \"source_type\": \"App\", \"user_agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36\"}"}, {"arg_name": "proj_uuid", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"0198ef37-d998-7864-878d-539c9c7ddd98\""}, {"arg_name": "cached_index", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "custom_request", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "{\"enable_map_reduce_extraction\": true, \"feature_flag_overrides\": {\"enable_dummy_feature_c\": true, \"enable_aihub_secret_manager\": true, \"aihub_enable_classification_validation\": true, \"enable_slas\": true, \"enable_advanced_apps\": true, \"aihub_enable_ocr_confidence_validation\": true, \"enable_text_view_in_converse\": true, \"enable_repo_roles\": true, \"enable_deployment_dashboard\": true, \"enable_multi_step_lite\": true, \"enable_runtime_configuration\": true, \"enable_upgrade_in_progress_banner\": true, \"enable_aihub_review_queues\": true, \"enable_aihub_stp_options\": true, \"aihub_enable_native_excel_processing\": true, \"aihub_enable_reasoning_prompt_suggestion\": true, \"enable_email_integration_data_source\": true, \"enable_aihub_saml_mapping\": true, \"enable_review_dashboard\": true, \"aihub_enable_search_history\": true, \"enable_aihub_deployment_notifications\": true, \"aihub_enable_vision_reasoning\": true, \"aihub_enable_migrate_project\": true, \"enable_app_ux_refresh\": true, \"enable_splitter_instructions\": true, \"enterprise_advanced_ocr\": true, \"aihub_enable_manual_app_ibllm_updates\": true, \"aihub_enable_customize_app\": true, \"enable_discourse_community_forum\": true, \"aihub_enable_app_run_gt_sets\": true, \"aihub_enable_navbar_redesign\": true, \"aihub_enable_extended_ai_runtime_expiration\": true, \"aihub_enable_build_split_by_page\": true, \"aihub_enable_search_in_navbar\": true, \"aihub_enable_build_moderation\": true, \"enable_upgrade_expired_apps\": true, \"aihub_enable_sdlc_workspaces\": true, \"enable_decoupled_chatbots\": true, \"aihub_enable_linked_deployments\": true, \"enable_extraction_value_normalization\": true, \"enable_fine_grain_usage_data\": true, \"enable_original_llm_limits\": true, \"enable_passing_class_names_to_splitter\": true, \"enable_search_acl_ui_v2\": true, \"enable_multistep_build\": true}, \"udf_id\": null, \"confidence_for_reasoning\": true}"}, {"arg_name": "doc_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "data_type", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"TEXT\""}, {"arg_name": "previous_line", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LINE", "data_type_options": ["TEXT"], "value": "Agency_address@0"}, {"arg_name": "prompt_arg_names", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[]"}, {"arg_name": "prompt_arg_vals", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[]"}, {"arg_name": "prompt_arg_data_types", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[]"}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{}"}], "output_type": "TEXT"}]}, {"label": "Agency_Name", "lines": [{"function_id": {"name": "get_extracted_field_value", "source": "NATIVE"}, "inputs": [{"arg_name": "fields", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "FIELD", "data_type_options": ["TEXT"], "value": "__model_result"}, {"arg_name": "field", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "\"Agency_Name\""}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{}"}], "output_type": "TEXT"}, {"function_id": {"name": "refine_field_v2", "source": "NATIVE"}, "inputs": [{"arg_name": "prompt", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"From the extracted text, return only the clean **Agency Name** or **Broker Name**.\\n\\nIf no agency or broker name is found, return \\\"\\\".\""}, {"arg_name": "metrics_params", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "{\"source_id\": \"Unknown\", \"source_type\": \"App\", \"user_agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36\"}"}, {"arg_name": "proj_uuid", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"0198ef37-d998-7864-878d-539c9c7ddd98\""}, {"arg_name": "cached_index", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "custom_request", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "{\"enable_map_reduce_extraction\": true, \"feature_flag_overrides\": {\"enable_dummy_feature_c\": true, \"enable_aihub_secret_manager\": true, \"aihub_enable_classification_validation\": true, \"enable_slas\": true, \"enable_advanced_apps\": true, \"aihub_enable_ocr_confidence_validation\": true, \"enable_text_view_in_converse\": true, \"enable_repo_roles\": true, \"enable_deployment_dashboard\": true, \"enable_multi_step_lite\": true, \"enable_runtime_configuration\": true, \"enable_upgrade_in_progress_banner\": true, \"enable_aihub_review_queues\": true, \"enable_aihub_stp_options\": true, \"aihub_enable_native_excel_processing\": true, \"aihub_enable_reasoning_prompt_suggestion\": true, \"enable_email_integration_data_source\": true, \"enable_aihub_saml_mapping\": true, \"enable_review_dashboard\": true, \"aihub_enable_search_history\": true, \"enable_aihub_deployment_notifications\": true, \"aihub_enable_vision_reasoning\": true, \"aihub_enable_migrate_project\": true, \"enable_app_ux_refresh\": true, \"enable_splitter_instructions\": true, \"enterprise_advanced_ocr\": true, \"aihub_enable_manual_app_ibllm_updates\": true, \"aihub_enable_customize_app\": true, \"enable_discourse_community_forum\": true, \"aihub_enable_app_run_gt_sets\": true, \"aihub_enable_navbar_redesign\": true, \"aihub_enable_extended_ai_runtime_expiration\": true, \"aihub_enable_build_split_by_page\": true, \"aihub_enable_search_in_navbar\": true, \"aihub_enable_build_moderation\": true, \"enable_upgrade_expired_apps\": true, \"aihub_enable_sdlc_workspaces\": true, \"enable_decoupled_chatbots\": true, \"aihub_enable_linked_deployments\": true, \"enable_extraction_value_normalization\": true, \"enable_fine_grain_usage_data\": true, \"enable_original_llm_limits\": true, \"enable_passing_class_names_to_splitter\": true, \"enable_search_acl_ui_v2\": true, \"enable_multistep_build\": true}, \"udf_id\": null, \"confidence_for_reasoning\": true}"}, {"arg_name": "doc_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "data_type", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"TEXT\""}, {"arg_name": "previous_line", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LINE", "data_type_options": ["TEXT"], "value": "Agency_Name@0"}, {"arg_name": "prompt_arg_names", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[]"}, {"arg_name": "prompt_arg_vals", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[]"}, {"arg_name": "prompt_arg_data_types", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[]"}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{}"}], "output_type": "TEXT"}]}, {"label": "Agency_Contact", "lines": [{"function_id": {"name": "get_extracted_field_value", "source": "NATIVE"}, "inputs": [{"arg_name": "fields", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "FIELD", "data_type_options": ["TEXT"], "value": "__model_result"}, {"arg_name": "field", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "\"Agency_Contact\""}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{}"}], "output_type": "TEXT"}]}, {"label": "Holding_Broker", "lines": [{"function_id": {"name": "get_extracted_field_value", "source": "NATIVE"}, "inputs": [{"arg_name": "fields", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "FIELD", "data_type_options": ["TEXT"], "value": "__model_result"}, {"arg_name": "field", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "\"Holding_Broker\""}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{}"}], "output_type": "TEXT"}]}, {"label": "Incepts_On", "lines": [{"function_id": {"name": "get_extracted_field_value", "source": "NATIVE"}, "inputs": [{"arg_name": "fields", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "FIELD", "data_type_options": ["TEXT"], "value": "__model_result"}, {"arg_name": "field", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "\"Incepts_On\""}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{}"}], "output_type": "TEXT"}, {"function_id": {"name": "refine_field_v2", "source": "NATIVE"}, "inputs": [{"arg_name": "prompt", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"Check Format: If date is already in the dd/mm/yyyy format, return it as is.\\nStandardize Date: If the date is in a different valid format (e.g., yyyy-mm-dd, mm/dd/yyyy, dd-mm-yyyy, etc.), convert it to dd/mm/yyyy. return the cleaned date without any quotes\\nInvalid Dates: If date is missing, empty, or not a valid date, return an empty string \\\"\\\"\""}, {"arg_name": "metrics_params", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "{\"source_id\": \"Unknown\", \"source_type\": \"App\", \"user_agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36\"}"}, {"arg_name": "proj_uuid", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"0198ef37-d998-7864-878d-539c9c7ddd98\""}, {"arg_name": "cached_index", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "custom_request", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "{\"enable_map_reduce_extraction\": true, \"feature_flag_overrides\": {\"enable_dummy_feature_c\": true, \"enable_aihub_secret_manager\": true, \"aihub_enable_classification_validation\": true, \"enable_slas\": true, \"enable_advanced_apps\": true, \"aihub_enable_ocr_confidence_validation\": true, \"enable_text_view_in_converse\": true, \"enable_repo_roles\": true, \"enable_deployment_dashboard\": true, \"enable_multi_step_lite\": true, \"enable_runtime_configuration\": true, \"enable_upgrade_in_progress_banner\": true, \"enable_aihub_review_queues\": true, \"enable_aihub_stp_options\": true, \"aihub_enable_native_excel_processing\": true, \"aihub_enable_reasoning_prompt_suggestion\": true, \"enable_email_integration_data_source\": true, \"enable_aihub_saml_mapping\": true, \"enable_review_dashboard\": true, \"aihub_enable_search_history\": true, \"enable_aihub_deployment_notifications\": true, \"aihub_enable_vision_reasoning\": true, \"aihub_enable_migrate_project\": true, \"enable_app_ux_refresh\": true, \"enable_splitter_instructions\": true, \"enterprise_advanced_ocr\": true, \"aihub_enable_manual_app_ibllm_updates\": true, \"aihub_enable_customize_app\": true, \"enable_discourse_community_forum\": true, \"aihub_enable_app_run_gt_sets\": true, \"aihub_enable_navbar_redesign\": true, \"aihub_enable_extended_ai_runtime_expiration\": true, \"aihub_enable_build_split_by_page\": true, \"aihub_enable_search_in_navbar\": true, \"aihub_enable_build_moderation\": true, \"enable_upgrade_expired_apps\": true, \"aihub_enable_sdlc_workspaces\": true, \"enable_decoupled_chatbots\": true, \"aihub_enable_linked_deployments\": true, \"enable_extraction_value_normalization\": true, \"enable_fine_grain_usage_data\": true, \"enable_original_llm_limits\": true, \"enable_passing_class_names_to_splitter\": true, \"enable_search_acl_ui_v2\": true, \"enable_multistep_build\": true}, \"udf_id\": null, \"confidence_for_reasoning\": true}"}, {"arg_name": "doc_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "data_type", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"TEXT\""}, {"arg_name": "previous_line", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LINE", "data_type_options": ["TEXT"], "value": "Incepts_On@0"}, {"arg_name": "prompt_arg_names", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[]"}, {"arg_name": "prompt_arg_vals", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[]"}, {"arg_name": "prompt_arg_data_types", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[]"}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{}"}], "output_type": "TEXT"}]}, {"label": "Expires_On", "lines": [{"function_id": {"name": "run_udf_in_lambda_v2", "source": "NATIVE"}, "inputs": [{"arg_name": "absolute_scripts_path", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"axauk/dev-si-fleet/fs/Instabase Drive/aihub/0198ef37-d998-7864-878d-539c9c7ddd98/project/modules/scripts/REFINER/3b0642b5-6d61-42f8-ab49-3a5f8ca9b225.json\""}, {"arg_name": "function_args", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "[{\"name\":\"Incepts_On\",\"data_type\":\"FIELD\",\"value\":\"Incepts_On\"}]"}, {"arg_name": "lambda_udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "doc_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"17071\""}, {"arg_name": "code_arg", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"\\n\\ndef unnamed_custom_function(Incepts_On, context = {}, keys = {}, **kwargs):\\n\\tfrom datetime import datetime, timedelta\\n\\t\\n\\tdef add_one_year_minus_one_day(date_str):\\n\\t    # Parse the input date (DD/MM/YYYY)\\n\\t    input_date = datetime.strptime(date_str, \\\"%d/%m/%Y\\\")\\n\\t    try:\\n\\t        # Try to add one year directly\\n\\t        one_year_later = input_date.replace(year=input_date.year + 1)\\n\\t    except ValueError:\\n\\t        # Handle Feb 29 (leap year issue) and other invalid dates\\n\\t        temp_date = input_date + (datetime(input_date.year + 1, 3, 1) - datetime(input_date.year, 3, 1))\\n\\t        one_year_later = temp_date\\n\\t    # Subtract one day\\n\\t    final_date = one_year_later - timedelta(days=1)\\n\\t    # Return formatted date as DD/MM/YYYY with leading zeros\\n\\t    return final_date.strftime(\\\"%d/%m/%Y\\\")\\n\\t    \\n\\ttry:\\n\\t    expiry_date = add_one_year_minus_one_day(Incepts_On)\\n\\t    return expiry_date\\n\\texcept Exception as e:\\n\\t    return \\\"\\\"\\n\\t\\n\\t\""}, {"arg_name": "fn_name", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"unnamed_custom_function\""}, {"arg_name": "args", "arg_type": "VAR_POSITIONAL", "data_type": "LIST", "value": "[{\"data_type\":\"FIELD\",\"value\":\"Incepts_On\"}]"}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{\"metrics_params\": {\"data_type\": \"DICT\", \"value\": \"{\\\"source_id\\\": \\\"Unknown\\\", \\\"source_type\\\": \\\"App\\\", \\\"user_agent\\\": \\\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36\\\"}\"}}"}], "output_type": "TEXT"}]}, {"label": "Main_Cover_Type", "lines": [{"function_id": {"name": "get_extracted_field_value", "source": "NATIVE"}, "inputs": [{"arg_name": "fields", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "FIELD", "data_type_options": ["TEXT"], "value": "__model_result"}, {"arg_name": "field", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "\"Main_Cover_Type\""}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{}"}], "output_type": "TEXT"}, {"function_id": {"name": "refine_field_v2", "source": "NATIVE"}, "inputs": [{"arg_name": "prompt", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"From the extracted text, return only the clean **Main Cover Type**.\\nIf no cover type is found, return \\\"\\\"\""}, {"arg_name": "metrics_params", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "{\"source_id\": \"Unknown\", \"source_type\": \"App\", \"user_agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36\"}"}, {"arg_name": "proj_uuid", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"0198ef37-d998-7864-878d-539c9c7ddd98\""}, {"arg_name": "cached_index", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "custom_request", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "{\"enable_map_reduce_extraction\": true, \"feature_flag_overrides\": {\"enable_dummy_feature_c\": true, \"enable_aihub_secret_manager\": true, \"aihub_enable_classification_validation\": true, \"enable_slas\": true, \"enable_advanced_apps\": true, \"aihub_enable_ocr_confidence_validation\": true, \"enable_text_view_in_converse\": true, \"enable_repo_roles\": true, \"enable_deployment_dashboard\": true, \"enable_multi_step_lite\": true, \"enable_runtime_configuration\": true, \"enable_upgrade_in_progress_banner\": true, \"enable_aihub_review_queues\": true, \"enable_aihub_stp_options\": true, \"aihub_enable_native_excel_processing\": true, \"aihub_enable_reasoning_prompt_suggestion\": true, \"enable_email_integration_data_source\": true, \"enable_aihub_saml_mapping\": true, \"enable_review_dashboard\": true, \"aihub_enable_search_history\": true, \"enable_aihub_deployment_notifications\": true, \"aihub_enable_vision_reasoning\": true, \"aihub_enable_migrate_project\": true, \"enable_app_ux_refresh\": true, \"enable_splitter_instructions\": true, \"enterprise_advanced_ocr\": true, \"aihub_enable_manual_app_ibllm_updates\": true, \"aihub_enable_customize_app\": true, \"enable_discourse_community_forum\": true, \"aihub_enable_app_run_gt_sets\": true, \"aihub_enable_navbar_redesign\": true, \"aihub_enable_extended_ai_runtime_expiration\": true, \"aihub_enable_build_split_by_page\": true, \"aihub_enable_search_in_navbar\": true, \"aihub_enable_build_moderation\": true, \"enable_upgrade_expired_apps\": true, \"aihub_enable_sdlc_workspaces\": true, \"enable_decoupled_chatbots\": true, \"aihub_enable_linked_deployments\": true, \"enable_extraction_value_normalization\": true, \"enable_fine_grain_usage_data\": true, \"enable_original_llm_limits\": true, \"enable_passing_class_names_to_splitter\": true, \"enable_search_acl_ui_v2\": true, \"enable_multistep_build\": true}, \"udf_id\": null, \"confidence_for_reasoning\": true}"}, {"arg_name": "doc_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "data_type", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"TEXT\""}, {"arg_name": "previous_line", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LINE", "data_type_options": ["TEXT"], "value": "Main_Cover_Type@0"}, {"arg_name": "prompt_arg_names", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[]"}, {"arg_name": "prompt_arg_vals", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[]"}, {"arg_name": "prompt_arg_data_types", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[]"}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{}"}], "output_type": "TEXT"}, {"function_id": {"name": "run_udf_in_lambda_v2", "source": "NATIVE"}, "inputs": [{"arg_name": "absolute_scripts_path", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"axauk/dev-si-fleet/fs/Instabase Drive/aihub/0198ef37-d998-7864-878d-539c9c7ddd98/project/modules/scripts/REFINER/5f64974f-13fb-42ba-8ed9-5ffd77e22056.json\""}, {"arg_name": "function_args", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "[{\"name\":\"previous_line\",\"data_type\":\"LINE\",\"value\":\"Main_Cover_Type@1\"}]"}, {"arg_name": "lambda_udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "doc_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"17072\""}, {"arg_name": "code_arg", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"\\n\\ndef check_cover_type(previous_line, context = {}, keys = {}, **kwargs):\\n\\t# Import Python packages\\n\\t# import json\\n\\t\\n\\t# Log statements using print()\\n\\t# print(\\\"This will appear in the logs\\\")\\n\\t\\n\\t# Return the cleaned output\\n\\tdef contains_only_quotes(s):\\n\\t  return all(c in {'\\\"', \\\"'\\\"} for c in s)\\n\\t\\n\\tprevious_line = previous_line.strip()\\n\\tif previous_line:\\n\\t  if contains_only_quotes(previous_line):\\n\\t    print('1')\\n\\t    return 'Comp'\\n\\t  else :\\n\\t    print('2')\\n\\t    return previous_line\\n\\tprint('3')\\n\\treturn 'Comp'\""}, {"arg_name": "fn_name", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"check_cover_type\""}, {"arg_name": "args", "arg_type": "VAR_POSITIONAL", "data_type": "LIST", "value": "[{\"data_type\":\"LINE\",\"value\":\"Main_Cover_Type@1\"}]"}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{}"}], "output_type": "TEXT"}]}, {"label": "Risk_Postcode", "lines": [{"function_id": {"name": "refine_field_v2", "source": "NATIVE"}, "inputs": [{"arg_name": "prompt", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"insured_address: {{ \\\\ Party Address \\\\}}\\n\\nExtract the post code from the insured_address. The post code is typically an alphanumeric value located at the end of the address.\\n\\nIf no post code is found, return \\\"\\\".\""}, {"arg_name": "metrics_params", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "{\"source_id\": \"Unknown\", \"source_type\": \"App\", \"user_agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36\"}"}, {"arg_name": "proj_uuid", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"0198ef37-d998-7864-878d-539c9c7ddd98\""}, {"arg_name": "cached_index", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "custom_request", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "{\"enable_map_reduce_extraction\": true, \"feature_flag_overrides\": {\"enable_dummy_feature_c\": true, \"enable_aihub_secret_manager\": true, \"aihub_enable_classification_validation\": true, \"enable_slas\": true, \"enable_advanced_apps\": true, \"aihub_enable_ocr_confidence_validation\": true, \"enable_text_view_in_converse\": true, \"enable_repo_roles\": true, \"enable_deployment_dashboard\": true, \"enable_multi_step_lite\": true, \"enable_runtime_configuration\": true, \"enable_upgrade_in_progress_banner\": true, \"enable_aihub_review_queues\": true, \"enable_aihub_stp_options\": true, \"aihub_enable_native_excel_processing\": true, \"aihub_enable_reasoning_prompt_suggestion\": true, \"enable_email_integration_data_source\": true, \"enable_aihub_saml_mapping\": true, \"enable_review_dashboard\": true, \"aihub_enable_search_history\": true, \"enable_aihub_deployment_notifications\": true, \"aihub_enable_vision_reasoning\": true, \"aihub_enable_migrate_project\": true, \"enable_app_ux_refresh\": true, \"enable_splitter_instructions\": true, \"enterprise_advanced_ocr\": true, \"aihub_enable_manual_app_ibllm_updates\": true, \"aihub_enable_customize_app\": true, \"enable_discourse_community_forum\": true, \"aihub_enable_app_run_gt_sets\": true, \"aihub_enable_navbar_redesign\": true, \"aihub_enable_extended_ai_runtime_expiration\": true, \"aihub_enable_build_split_by_page\": true, \"aihub_enable_search_in_navbar\": true, \"aihub_enable_build_moderation\": true, \"enable_upgrade_expired_apps\": true, \"aihub_enable_sdlc_workspaces\": true, \"enable_decoupled_chatbots\": true, \"aihub_enable_linked_deployments\": true, \"enable_extraction_value_normalization\": true, \"enable_fine_grain_usage_data\": true, \"enable_original_llm_limits\": true, \"enable_passing_class_names_to_splitter\": true, \"enable_search_acl_ui_v2\": true, \"enable_multistep_build\": true}, \"udf_id\": null, \"confidence_for_reasoning\": true}"}, {"arg_name": "doc_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "data_type", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"TEXT\""}, {"arg_name": "previous_line", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "prompt_arg_names", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[{\"data_type\": \"ANY\", \"value\": \"\\\"Party_Address\\\"\"}]"}, {"arg_name": "prompt_arg_vals", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[{\"data_type\": \"FIELD\", \"value\": \"Party_Address\"}]"}, {"arg_name": "prompt_arg_data_types", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[{\"data_type\": \"ANY\", \"value\": \"\\\"TEXT\\\"\"}]"}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{}"}], "output_type": "TEXT"}]}, {"label": "Effective_From", "lines": [{"function_id": {"name": "run_udf_in_lambda_v2", "source": "NATIVE"}, "inputs": [{"arg_name": "absolute_scripts_path", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"axauk/dev-si-fleet/fs/Instabase Drive/aihub/0198ef37-d998-7864-878d-539c9c7ddd98/project/modules/scripts/REFINER/cdc271aa-ae88-4c57-9cb1-946de8e41082.json\""}, {"arg_name": "function_args", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "[{\"name\":\"Incepts_On\",\"data_type\":\"FIELD\",\"value\":\"Incepts_On\"}]"}, {"arg_name": "lambda_udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "doc_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"17074\""}, {"arg_name": "code_arg", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"\\n\\ndef get_inception_date(Incepts_On, context = {}, keys = {}, **kwargs):\\n\\treturn Incepts_On\""}, {"arg_name": "fn_name", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"get_inception_date\""}, {"arg_name": "args", "arg_type": "VAR_POSITIONAL", "data_type": "LIST", "value": "[{\"data_type\":\"FIELD\",\"value\":\"Incepts_On\"}]"}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{\"metrics_params\": {\"data_type\": \"DICT\", \"value\": \"{\\\"source_id\\\": \\\"Unknown\\\", \\\"source_type\\\": \\\"App\\\", \\\"user_agent\\\": \\\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36\\\"}\"}}"}], "output_type": "TEXT"}]}, {"label": "Effective_To", "lines": [{"function_id": {"name": "run_udf_in_lambda_v2", "source": "NATIVE"}, "inputs": [{"arg_name": "absolute_scripts_path", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"axauk/dev-si-fleet/fs/Instabase Drive/aihub/0198ef37-d998-7864-878d-539c9c7ddd98/project/modules/scripts/REFINER/26d6d2bc-1ed5-44a1-b842-32c693580535.json\""}, {"arg_name": "function_args", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "[{\"name\":\"Expires_On\",\"data_type\":\"FIELD\",\"value\":\"Expires_On\"}]"}, {"arg_name": "lambda_udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "doc_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"17075\""}, {"arg_name": "code_arg", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"\\n\\ndef get_expiry_date(Expires_On, context = {}, keys = {}, **kwargs):\\n\\treturn Expires_On\""}, {"arg_name": "fn_name", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"get_expiry_date\""}, {"arg_name": "args", "arg_type": "VAR_POSITIONAL", "data_type": "LIST", "value": "[{\"data_type\":\"FIELD\",\"value\":\"Expires_On\"}]"}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{\"metrics_params\": {\"data_type\": \"DICT\", \"value\": \"{\\\"source_id\\\": \\\"Unknown\\\", \\\"source_type\\\": \\\"App\\\", \\\"user_agent\\\": \\\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36\\\"}\"}}"}], "output_type": "TEXT"}]}, {"label": "Is_Holding_Broker_Details", "lines": [{"function_id": {"name": "refine_field_v2", "source": "NATIVE"}, "inputs": [{"arg_name": "prompt", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"holding_broker: \\\\ Holding Broker \\\\\\nagency_name: \\\\ Agency Name \\\\\\n\\nComparare `holding_broker` and `agency_name` to determine if they represent the same organization.\\n\\nRules:\\n1. If `holding_broker` is an empty string, return: {\\\"holding_broker\\\": \\\"\\\", \\\"basis\\\": \\\"Holding broker is empty\\\"}.\\n\\n2.If the two names refer to the same or a similar entity \\u2014 for example, when they differ only by abbreviations, suffix variations (e.g., \\\"Ltd\\\" vs \\\"Limited\\\", \\\"Corp\\\" vs \\\"Corporation\\\"), or extra generic words (e.g., \\\"Group\\\", \\\"Financial\\\") \\u2014 return:\\n{\\\"holding_broker\\\": \\\"Yes\\\", \\\"basis\\\": \\\"Names are similar after normalization\\\"}\\n\\n3. If they are different entities, return: {\\\"holding_broker\\\": \\\"No\\\", \\\"basis\\\": \\\"Names are different after normalization\\\"}.\\n\\nSteps:\\n- Normalize both names: lowercase, remove legal suffixes (like ltd, corp, inc), and special characters.\\n- Then compare using fuzzy similarity or normalized string match.\\n\\nReturn output strictly in JSON format with keys:\\n- `holding_broker`: \\\"Yes\\\", \\\"No\\\", or \\\"\\\"\\n- `basis`: explanation of the decision\""}, {"arg_name": "metrics_params", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "{\"source_id\": \"Unknown\", \"source_type\": \"App\", \"user_agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36\"}"}, {"arg_name": "proj_uuid", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"0198ef37-d998-7864-878d-539c9c7ddd98\""}, {"arg_name": "cached_index", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "custom_request", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "{\"enable_map_reduce_extraction\": true, \"feature_flag_overrides\": {\"enable_dummy_feature_c\": true, \"enable_aihub_secret_manager\": true, \"aihub_enable_classification_validation\": true, \"enable_slas\": true, \"enable_advanced_apps\": true, \"aihub_enable_ocr_confidence_validation\": true, \"enable_text_view_in_converse\": true, \"enable_repo_roles\": true, \"enable_deployment_dashboard\": true, \"enable_multi_step_lite\": true, \"enable_runtime_configuration\": true, \"enable_upgrade_in_progress_banner\": true, \"enable_aihub_review_queues\": true, \"enable_aihub_stp_options\": true, \"aihub_enable_native_excel_processing\": true, \"aihub_enable_reasoning_prompt_suggestion\": true, \"enable_email_integration_data_source\": true, \"enable_aihub_saml_mapping\": true, \"enable_review_dashboard\": true, \"aihub_enable_search_history\": true, \"enable_aihub_deployment_notifications\": true, \"aihub_enable_vision_reasoning\": true, \"aihub_enable_migrate_project\": true, \"enable_app_ux_refresh\": true, \"enable_splitter_instructions\": true, \"enterprise_advanced_ocr\": true, \"aihub_enable_manual_app_ibllm_updates\": true, \"aihub_enable_customize_app\": true, \"enable_discourse_community_forum\": true, \"aihub_enable_app_run_gt_sets\": true, \"aihub_enable_navbar_redesign\": true, \"aihub_enable_extended_ai_runtime_expiration\": true, \"aihub_enable_build_split_by_page\": true, \"aihub_enable_search_in_navbar\": true, \"aihub_enable_build_moderation\": true, \"enable_upgrade_expired_apps\": true, \"aihub_enable_sdlc_workspaces\": true, \"enable_decoupled_chatbots\": true, \"aihub_enable_linked_deployments\": true, \"enable_extraction_value_normalization\": true, \"enable_fine_grain_usage_data\": true, \"enable_original_llm_limits\": true, \"enable_passing_class_names_to_splitter\": true, \"enable_search_acl_ui_v2\": true, \"enable_multistep_build\": true}, \"udf_id\": null, \"confidence_for_reasoning\": true}"}, {"arg_name": "doc_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "data_type", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"TEXT\""}, {"arg_name": "previous_line", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "prompt_arg_names", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[{\"data_type\": \"ANY\", \"value\": \"\\\"Agency_Name\\\"\"}, {\"data_type\": \"ANY\", \"value\": \"\\\"Holding_Broker\\\"\"}]"}, {"arg_name": "prompt_arg_vals", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[{\"data_type\": \"FIELD\", \"value\": \"Agency_Name\"}, {\"data_type\": \"FIELD\", \"value\": \"Holding_Broker\"}]"}, {"arg_name": "prompt_arg_data_types", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[{\"data_type\": \"ANY\", \"value\": \"\\\"TEXT\\\"\"}, {\"data_type\": \"ANY\", \"value\": \"\\\"TEXT\\\"\"}]"}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{}"}], "output_type": "TEXT"}]}, {"label": "Is_Holding_Broker_From_Context", "lines": [{"function_id": {"name": "get_extracted_field_value", "source": "NATIVE"}, "inputs": [{"arg_name": "fields", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "FIELD", "data_type_options": ["TEXT"], "value": "__model_result"}, {"arg_name": "field", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "\"Is_Holding_Broker_From_Context\""}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{}"}], "output_type": "TEXT"}, {"function_id": {"name": "refine_field_v2", "source": "NATIVE"}, "inputs": [{"arg_name": "prompt", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"Just return the final json output without any additional text.\""}, {"arg_name": "metrics_params", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "{\"source_id\": \"Unknown\", \"source_type\": \"App\", \"user_agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36\"}"}, {"arg_name": "proj_uuid", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"0198ef37-d998-7864-878d-539c9c7ddd98\""}, {"arg_name": "cached_index", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "custom_request", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "{\"enable_map_reduce_extraction\": true, \"feature_flag_overrides\": {\"enable_dummy_feature_c\": true, \"enable_aihub_secret_manager\": true, \"aihub_enable_classification_validation\": true, \"enable_slas\": true, \"enable_advanced_apps\": true, \"aihub_enable_ocr_confidence_validation\": true, \"enable_text_view_in_converse\": true, \"enable_repo_roles\": true, \"enable_deployment_dashboard\": true, \"enable_multi_step_lite\": true, \"enable_runtime_configuration\": true, \"enable_upgrade_in_progress_banner\": true, \"enable_aihub_review_queues\": true, \"enable_aihub_stp_options\": true, \"aihub_enable_native_excel_processing\": true, \"aihub_enable_reasoning_prompt_suggestion\": true, \"enable_email_integration_data_source\": true, \"enable_aihub_saml_mapping\": true, \"enable_review_dashboard\": true, \"aihub_enable_search_history\": true, \"enable_aihub_deployment_notifications\": true, \"aihub_enable_vision_reasoning\": true, \"aihub_enable_migrate_project\": true, \"enable_app_ux_refresh\": true, \"enable_splitter_instructions\": true, \"enterprise_advanced_ocr\": true, \"aihub_enable_manual_app_ibllm_updates\": true, \"aihub_enable_customize_app\": true, \"enable_discourse_community_forum\": true, \"aihub_enable_app_run_gt_sets\": true, \"aihub_enable_navbar_redesign\": true, \"aihub_enable_extended_ai_runtime_expiration\": true, \"aihub_enable_build_split_by_page\": true, \"aihub_enable_search_in_navbar\": true, \"aihub_enable_build_moderation\": true, \"enable_upgrade_expired_apps\": true, \"aihub_enable_sdlc_workspaces\": true, \"enable_decoupled_chatbots\": true, \"aihub_enable_linked_deployments\": true, \"enable_extraction_value_normalization\": true, \"enable_fine_grain_usage_data\": true, \"enable_original_llm_limits\": true, \"enable_passing_class_names_to_splitter\": true, \"enable_search_acl_ui_v2\": true, \"enable_multistep_build\": true}, \"udf_id\": null, \"confidence_for_reasoning\": true}"}, {"arg_name": "doc_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "data_type", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"TEXT\""}, {"arg_name": "previous_line", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LINE", "data_type_options": ["TEXT"], "value": "Is_Holding_Broker_From_Context@0"}, {"arg_name": "prompt_arg_names", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[]"}, {"arg_name": "prompt_arg_vals", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[]"}, {"arg_name": "prompt_arg_data_types", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[]"}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{}"}], "output_type": "TEXT"}]}, {"label": "Is_Holding_Broker", "lines": [{"function_id": {"name": "run_udf_in_lambda_v2", "source": "NATIVE"}, "inputs": [{"arg_name": "absolute_scripts_path", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"axauk/dev-si-fleet/fs/Instabase Drive/aihub/0198ef37-d998-7864-878d-539c9c7ddd98/project/modules/scripts/REFINER/135a511b-7275-4ae2-872f-ae3ff84ed6d1.json\""}, {"arg_name": "function_args", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "[{\"name\":\"Is_Holding_Broker_Details\",\"data_type\":\"FIELD\",\"value\":\"Is_Holding_Broker_Details\"},{\"name\":\"Is_Holding_Broker_From_Context\",\"data_type\":\"FIELD\",\"value\":\"Is_Holding_Broker_From_Context\"}]"}, {"arg_name": "lambda_udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "doc_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"17076\""}, {"arg_name": "code_arg", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"\\n\\ndef return_holding_broker_value(Is_Holding_Broker_Details, Is_Holding_Broker_From_Context, context = {}, keys = {}, **kwargs):\\n\\timport json\\n\\t\\n\\tdef contains_only_quotes(s):\\n\\t  return all(c in {'\\\"', \\\"'\\\"} for c in s)\\n\\t\\n\\tdef extract_holding_broker_from_text(text: str) -> str:\\n\\t    brace_stack = []\\n\\t    start_idx = -1\\n\\t    end_idx = -1\\n\\t\\n\\t    # Step 1: Find the first complete {...} block\\n\\t    for i, ch in enumerate(text):\\n\\t        if ch == '{':\\n\\t            if not brace_stack:\\n\\t                start_idx = i\\n\\t            brace_stack.append('{')\\n\\t        elif ch == '}':\\n\\t            if brace_stack:\\n\\t                brace_stack.pop()\\n\\t                if not brace_stack:\\n\\t                    end_idx = i + 1  # Include the closing brace\\n\\t                    break\\n\\t\\n\\t    # Step 2: If we found a full JSON block\\n\\t    if start_idx != -1 and end_idx != -1:\\n\\t        json_str = text[start_idx:end_idx]\\n\\t\\n\\t        try:\\n\\t            data = json.loads(json_str)\\n\\t            print(data)\\n\\t            holding_broker = data.get('holding_broker')  \\n\\t            print(\\\"holding broker\\\", holding_broker)\\n\\t            return holding_broker\\n\\t        except Exception as e:\\n\\t            print(e)\\n\\t            return ''\\n\\t\\n\\t    return ''\\n\\t\\n\\tdef normalize_holding_broker(value: str) -> str:\\n\\t    value = value.strip().lower()\\n\\t    if value == 'yes':\\n\\t        return 'Yes'\\n\\t    elif value == 'no':\\n\\t        return 'No'\\n\\t    return ''\\n\\t\\n\\tholding_broker_explicit = extract_holding_broker_from_text(Is_Holding_Broker_Details)\\n\\tholding_broker_context = extract_holding_broker_from_text(Is_Holding_Broker_From_Context)\\n\\t\\n\\tholding_broker_explicit = normalize_holding_broker(holding_broker_explicit)\\n\\tholding_broker_context = normalize_holding_broker(holding_broker_context)\\n\\t\\n\\tprint(\\\"holding_broker_explicit\\\",holding_broker_explicit)\\n\\tprint(\\\"holding_broker_context\\\",holding_broker_context)\\n\\t\\n\\t# Prefer explicit if available\\n\\tif holding_broker_explicit:\\n\\t    print('if')\\n\\t    result = holding_broker_explicit\\n\\telse:\\n\\t    print('else')\\n\\t    result = holding_broker_context\\n\\treturn result\""}, {"arg_name": "fn_name", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"return_holding_broker_value\""}, {"arg_name": "args", "arg_type": "VAR_POSITIONAL", "data_type": "LIST", "value": "[{\"data_type\":\"FIELD\",\"value\":\"Is_Holding_Broker_Details\"},{\"data_type\":\"FIELD\",\"value\":\"Is_Holding_Broker_From_Context\"}]"}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{\"metrics_params\": {\"data_type\": \"DICT\", \"value\": \"{\\\"source_id\\\": \\\"Unknown\\\", \\\"source_type\\\": \\\"App\\\", \\\"user_agent\\\": \\\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36\\\"}\"}}"}], "output_type": "TEXT"}]}, {"label": "Transaction_Type", "lines": [{"function_id": {"name": "run_udf_in_lambda_v2", "source": "NATIVE"}, "inputs": [{"arg_name": "absolute_scripts_path", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"axauk/dev-si-fleet/fs/Instabase Drive/aihub/0198ef37-d998-7864-878d-539c9c7ddd98/project/modules/scripts/REFINER/62c6511a-0435-44d9-9233-d917f88eed57.json\""}, {"arg_name": "function_args", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "[]"}, {"arg_name": "lambda_udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "doc_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"17077\""}, {"arg_name": "code_arg", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"\\n\\ndef get_transaction_type(context = {}, keys = {}, **kwargs):\\n\\treturn \\\"New Business\\\"\""}, {"arg_name": "fn_name", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"get_transaction_type\""}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{\"metrics_params\": {\"data_type\": \"DICT\", \"value\": \"{\\\"source_id\\\": \\\"Unknown\\\", \\\"source_type\\\": \\\"App\\\", \\\"user_agent\\\": \\\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36\\\"}\"}}"}], "output_type": "TEXT"}]}, {"label": "Today_date", "lines": [{"function_id": {"name": "run_udf_in_lambda_v2", "source": "NATIVE"}, "inputs": [{"arg_name": "absolute_scripts_path", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"axauk/dev-si-fleet/fs/Instabase Drive/aihub/0198ef37-d998-7864-878d-539c9c7ddd98/project/modules/scripts/REFINER/2c38e145-7512-4ebf-82ea-bdd81c511897.json\""}, {"arg_name": "function_args", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "[]"}, {"arg_name": "lambda_udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "doc_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"17080\""}, {"arg_name": "code_arg", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"\\n\\ndef get_todays_date(context = {}, keys = {}, **kwargs):\\n\\tfrom datetime import date\\n\\ttoday = str(date.today())\\n\\tprint(today)\\n\\treturn today\""}, {"arg_name": "fn_name", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"get_todays_date\""}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{\"metrics_params\": {\"data_type\": \"DICT\", \"value\": \"{\\\"source_id\\\": \\\"Unknown\\\", \\\"source_type\\\": \\\"App\\\", \\\"user_agent\\\": \\\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36\\\"}\"}}"}], "output_type": "TEXT"}]}, {"label": "Driver_Details", "lines": [{"function_id": {"name": "get_extracted_field_value", "source": "NATIVE"}, "inputs": [{"arg_name": "fields", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "FIELD", "data_type_options": ["TEXT"], "value": "__model_result"}, {"arg_name": "field", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "\"Driver_Details\""}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{}"}], "output_type": "TEXT"}, {"function_id": {"name": "run_udf_in_lambda_v2", "source": "NATIVE"}, "inputs": [{"arg_name": "absolute_scripts_path", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"axauk/dev-si-fleet/fs/Instabase Drive/aihub/0198ef37-d998-7864-878d-539c9c7ddd98/project/modules/scripts/REFINER/844a0976-55df-4e10-9128-5c29b93b3f90.json\""}, {"arg_name": "function_args", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "[{\"name\":\"previous_line\",\"data_type\":\"LINE\",\"value\":\"Driver_Details@0\"}]"}, {"arg_name": "lambda_udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "doc_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"17078\""}, {"arg_name": "code_arg", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"\\n\\ndef get_cleaned_df(previous_line, context = {}, keys = {}, **kwargs):\\n\\timport pandas as pd\\n\\timport json, re, ast\\n\\timport traceback\\n\\t\\n\\tdef convert_to_dataframe(data):\\n\\t    if isinstance(data, list):\\n\\t        if all(isinstance(item, dict) for item in data):\\n\\t            # List of dictionaries\\n\\t            return pd.DataFrame(data)\\n\\t        elif all(isinstance(item, list) for item in data):\\n\\t            # List of lists\\n\\t            return pd.DataFrame(data[1:], columns=data[0])\\n\\t        else:\\n\\t            raise ValueError(\\\"The list must contain either all dictionaries or all lists.\\\")\\n\\t    else:\\n\\t        raise TypeError(\\\"Input data is not a list.\\\")\\n\\t\\n\\tcolumns_order = [\\n\\t         \\\"Driver Name\\\",\\n\\t         \\\"Driver DOB\\\",\\n\\t         \\\"Licence Date\\\",\\n\\t         \\\"Conviction Code\\\",\\n\\t          \\\"Driver Claims\\\"\\n\\t    ]\\n\\t\\n\\t\\n\\tdef get_df_with_regex_match(previous_line, columns_order):\\n\\t    parsed, inner_content = None, None\\n\\t    df = pd.DataFrame(columns=columns_order)\\n\\t    try:\\n\\t        match = re.search(r\\\"```(?:\\\\w+)?\\\\s*([\\\\s\\\\S]*?)\\\\s*```\\\", previous_line)\\n\\t        if match:\\n\\t            inner_content = match.group(1).strip()\\n\\t    \\n\\t            # Step 2: Try to parse it as JSON\\n\\t            try:\\n\\t                parsed = json.loads(inner_content)\\n\\t                print(parsed)\\n\\t            except json.JSONDecodeError:\\n\\t                # If JSON parsing fails, fallback to literal_eval\\n\\t                try:\\n\\t                    parsed = ast.literal_eval(inner_content)\\n\\t                except Exception as e:\\n\\t                    print(\\\"Parsing failed:\\\", e)\\n\\t                    parsed = None\\n\\t          \\n\\t        if parsed:\\n\\t            df = convert_to_dataframe(parsed)\\n\\t            return True, df \\n\\t        else:\\n\\t            return False, df \\n\\t    except Exception as e:\\n\\t      return False, pd.DataFrame(columns=columns_order)\\n\\t\\n\\tdef parse_markdown_format(previous_line, columns_order):\\n\\t    try:\\n\\t        lines = [line.strip() for line in previous_line.strip().split('\\\\n') if line.strip().startswith('|') and '---' not in line]\\n\\t        list_of_lists = [ [cell.strip() for cell in line.strip('|').split('|')] for line in lines ]\\n\\t        if list_of_lists:\\n\\t            df = convert_to_dataframe(list_of_lists)\\n\\t            return True, df\\n\\t        else:\\n\\t            return False, pd.DataFrame(columns=columns_order)\\n\\t    except:\\n\\t        return False, pd.DataFrame(columns=columns_order)\\n\\t\\n\\ttry:\\n\\t    \\n\\t    df = pd.DataFrame(columns=columns_order)\\n\\t    \\n\\t    flg, df = get_df_with_regex_match(previous_line, columns_order)\\n\\t    print(flg)\\n\\t    if not flg:\\n\\t        flg, df = parse_markdown_format(previous_line, columns_order)\\n\\t    # print(previous_line)\\n\\t    print(flg)\\n\\t    if not flg:\\n\\t      try:\\n\\t          data = json.loads(previous_line)\\n\\t          # print(\\\"data\\\",data)\\n\\t          df = convert_to_dataframe(data)\\n\\t          # print(\\\"1st\\\",df)\\n\\t\\n\\t      except Exception as e:\\n\\t          data = ast.literal_eval(previous_line)\\n\\t          df = convert_to_dataframe(data)\\n\\t\\n\\t    # print(\\\"2nd \\\",df)\\n\\t    df.fillna(\\\"\\\", inplace=True)\\n\\t    \\n\\t    if len(df.columns.tolist()) > 0:\\n\\t        # df[\\\"Conviction Code\\\"] = df[\\\"Conviction Code\\\"].replace([\\\"No\\\", \\\"no\\\"], \\\"\\\")\\n\\t        df[\\\"Conviction Code\\\"] = df[\\\"Conviction Code\\\"].astype(str).str.strip().replace([\\\"no\\\", \\\"No\\\"], \\\"\\\")\\n\\t        df[\\\"Licence Date\\\"] = df[\\\"Licence Date\\\"].apply(\\n\\t    lambda x: f\\\"01/01/{x.strip()}\\\" if re.fullmatch(r\\\"\\\\s*(19|20)\\\\d{2}\\\\s*\\\", str(x)) else x)\\n\\t        df = df[columns_order]\\n\\t        df = [df.columns.tolist()] + df.values.tolist()\\n\\t        return df\\n\\t    else:\\n\\t        return [columns_order]\\n\\t      \\n\\texcept Exception as e:\\n\\t    return [columns_order]\""}, {"arg_name": "fn_name", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"get_cleaned_df\""}, {"arg_name": "args", "arg_type": "VAR_POSITIONAL", "data_type": "LIST", "value": "[{\"data_type\":\"LINE\",\"value\":\"Driver_Details@0\"}]"}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{}"}], "output_type": "TEXT"}]}, {"label": "Driver_Age", "lines": [{"function_id": {"name": "refine_field_v2", "source": "NATIVE"}, "inputs": [{"arg_name": "prompt", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"driver_details:{{ \\\\ Driver Details \\\\ }}\\ntoday_date: {{ \\\\ Today date \\\\ }}\\nthe driver_details table contains a column 'Driver Name' and 'Driver DOB'. \\ncalculate each driver age in complete years using 'Driver DOB' and today_date\\nif Driver DOB is missing or empty in a row return that row with the age as empty\\nreturn final output as a table with two columns: 'Driver Name' , 'Age'\""}, {"arg_name": "metrics_params", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "{\"source_id\": \"Unknown\", \"source_type\": \"App\", \"user_agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36\"}"}, {"arg_name": "proj_uuid", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"0198ef37-d998-7864-878d-539c9c7ddd98\""}, {"arg_name": "cached_index", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "custom_request", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "{\"enable_map_reduce_extraction\": true, \"feature_flag_overrides\": {\"enable_dummy_feature_c\": true, \"enable_aihub_secret_manager\": true, \"aihub_enable_classification_validation\": true, \"enable_slas\": true, \"enable_advanced_apps\": true, \"aihub_enable_ocr_confidence_validation\": true, \"enable_text_view_in_converse\": true, \"enable_repo_roles\": true, \"enable_deployment_dashboard\": true, \"enable_multi_step_lite\": true, \"enable_runtime_configuration\": true, \"enable_upgrade_in_progress_banner\": true, \"enable_aihub_review_queues\": true, \"enable_aihub_stp_options\": true, \"aihub_enable_native_excel_processing\": true, \"aihub_enable_reasoning_prompt_suggestion\": true, \"enable_email_integration_data_source\": true, \"enable_aihub_saml_mapping\": true, \"enable_review_dashboard\": true, \"aihub_enable_search_history\": true, \"enable_aihub_deployment_notifications\": true, \"aihub_enable_vision_reasoning\": true, \"aihub_enable_migrate_project\": true, \"enable_app_ux_refresh\": true, \"enable_splitter_instructions\": true, \"enterprise_advanced_ocr\": true, \"aihub_enable_manual_app_ibllm_updates\": true, \"aihub_enable_customize_app\": true, \"enable_discourse_community_forum\": true, \"aihub_enable_app_run_gt_sets\": true, \"aihub_enable_navbar_redesign\": true, \"aihub_enable_extended_ai_runtime_expiration\": true, \"aihub_enable_build_split_by_page\": true, \"aihub_enable_search_in_navbar\": true, \"aihub_enable_build_moderation\": true, \"enable_upgrade_expired_apps\": true, \"aihub_enable_sdlc_workspaces\": true, \"enable_decoupled_chatbots\": true, \"aihub_enable_linked_deployments\": true, \"enable_extraction_value_normalization\": true, \"enable_fine_grain_usage_data\": true, \"enable_original_llm_limits\": true, \"enable_passing_class_names_to_splitter\": true, \"enable_search_acl_ui_v2\": true, \"enable_multistep_build\": true}, \"udf_id\": null, \"confidence_for_reasoning\": true}"}, {"arg_name": "doc_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "data_type", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"TEXT\""}, {"arg_name": "previous_line", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "prompt_arg_names", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[{\"data_type\": \"ANY\", \"value\": \"\\\"Today_date\\\"\"}, {\"data_type\": \"ANY\", \"value\": \"\\\"Driver_Details\\\"\"}]"}, {"arg_name": "prompt_arg_vals", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[{\"data_type\": \"FIELD\", \"value\": \"Today_date\"}, {\"data_type\": \"FIELD\", \"value\": \"Driver_Details\"}]"}, {"arg_name": "prompt_arg_data_types", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[{\"data_type\": \"ANY\", \"value\": \"\\\"TEXT\\\"\"}, {\"data_type\": \"ANY\", \"value\": \"\\\"TEXT\\\"\"}]"}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{}"}], "output_type": "TEXT"}, {"function_id": {"name": "run_udf_in_lambda_v2", "source": "NATIVE"}, "inputs": [{"arg_name": "absolute_scripts_path", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"axauk/dev-si-fleet/fs/Instabase Drive/aihub/0198ef37-d998-7864-878d-539c9c7ddd98/project/modules/scripts/REFINER/68710c60-85df-4fe5-87ff-7ef73fe2c363.json\""}, {"arg_name": "function_args", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "[{\"name\":\"previous_line\",\"data_type\":\"LINE\",\"value\":\"Driver_Age@0\"}]"}, {"arg_name": "lambda_udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "doc_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"17079\""}, {"arg_name": "code_arg", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"\\n\\ndef clean_llm_result(previous_line, context = {}, keys = {}, **kwargs):\\n\\tcolumns = ['Driver Name', 'Age']\\n\\tif previous_line == '[]':\\n\\t    return [columns]\\n\\telse:\\n\\t  return previous_line\""}, {"arg_name": "fn_name", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"clean_llm_result\""}, {"arg_name": "args", "arg_type": "VAR_POSITIONAL", "data_type": "LIST", "value": "[{\"data_type\":\"LINE\",\"value\":\"Driver_Age@0\"}]"}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{}"}], "output_type": "TEXT"}]}, {"label": "Driver_Licence_Tenure", "lines": [{"function_id": {"name": "refine_field_v2", "source": "NATIVE"}, "inputs": [{"arg_name": "prompt", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"driver_details: {{ \\\\ Driver Details \\\\}}\\n\\ntoday_date: {{ \\\\ Today date \\\\}}\\n\\n\\nThe driver_details table contains a column 'Driver Name' and 'Licence Date'.\\n\\nCalculate each driver's licence tenure in complete years using 'Licence Date' and today_date.\\n\\nIf 'Licence Date' is missing or empty in a row, return that row with the Licence Tenure as empty.\\n\\nReturn the final output as a table with two columns: 'Driver Name' , \\u2018Licence Tenure'\""}, {"arg_name": "metrics_params", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "{\"source_id\": \"Unknown\", \"source_type\": \"App\", \"user_agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36\"}"}, {"arg_name": "proj_uuid", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"0198ef37-d998-7864-878d-539c9c7ddd98\""}, {"arg_name": "cached_index", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "custom_request", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "{\"enable_map_reduce_extraction\": true, \"feature_flag_overrides\": {\"enable_dummy_feature_c\": true, \"enable_aihub_secret_manager\": true, \"aihub_enable_classification_validation\": true, \"enable_slas\": true, \"enable_advanced_apps\": true, \"aihub_enable_ocr_confidence_validation\": true, \"enable_text_view_in_converse\": true, \"enable_repo_roles\": true, \"enable_deployment_dashboard\": true, \"enable_multi_step_lite\": true, \"enable_runtime_configuration\": true, \"enable_upgrade_in_progress_banner\": true, \"enable_aihub_review_queues\": true, \"enable_aihub_stp_options\": true, \"aihub_enable_native_excel_processing\": true, \"aihub_enable_reasoning_prompt_suggestion\": true, \"enable_email_integration_data_source\": true, \"enable_aihub_saml_mapping\": true, \"enable_review_dashboard\": true, \"aihub_enable_search_history\": true, \"enable_aihub_deployment_notifications\": true, \"aihub_enable_vision_reasoning\": true, \"aihub_enable_migrate_project\": true, \"enable_app_ux_refresh\": true, \"enable_splitter_instructions\": true, \"enterprise_advanced_ocr\": true, \"aihub_enable_manual_app_ibllm_updates\": true, \"aihub_enable_customize_app\": true, \"enable_discourse_community_forum\": true, \"aihub_enable_app_run_gt_sets\": true, \"aihub_enable_navbar_redesign\": true, \"aihub_enable_extended_ai_runtime_expiration\": true, \"aihub_enable_build_split_by_page\": true, \"aihub_enable_search_in_navbar\": true, \"aihub_enable_build_moderation\": true, \"enable_upgrade_expired_apps\": true, \"aihub_enable_sdlc_workspaces\": true, \"enable_decoupled_chatbots\": true, \"aihub_enable_linked_deployments\": true, \"enable_extraction_value_normalization\": true, \"enable_fine_grain_usage_data\": true, \"enable_original_llm_limits\": true, \"enable_passing_class_names_to_splitter\": true, \"enable_search_acl_ui_v2\": true, \"enable_multistep_build\": true}, \"udf_id\": null, \"confidence_for_reasoning\": true}"}, {"arg_name": "doc_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "data_type", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"TEXT\""}, {"arg_name": "previous_line", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "prompt_arg_names", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[{\"data_type\": \"ANY\", \"value\": \"\\\"Today_date\\\"\"}, {\"data_type\": \"ANY\", \"value\": \"\\\"Driver_Details\\\"\"}]"}, {"arg_name": "prompt_arg_vals", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[{\"data_type\": \"FIELD\", \"value\": \"Today_date\"}, {\"data_type\": \"FIELD\", \"value\": \"Driver_Details\"}]"}, {"arg_name": "prompt_arg_data_types", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[{\"data_type\": \"ANY\", \"value\": \"\\\"TEXT\\\"\"}, {\"data_type\": \"ANY\", \"value\": \"\\\"TEXT\\\"\"}]"}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{}"}], "output_type": "TEXT"}, {"function_id": {"name": "run_udf_in_lambda_v2", "source": "NATIVE"}, "inputs": [{"arg_name": "absolute_scripts_path", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"axauk/dev-si-fleet/fs/Instabase Drive/aihub/0198ef37-d998-7864-878d-539c9c7ddd98/project/modules/scripts/REFINER/352a062b-e7a4-4a68-af68-dac37862fcff.json\""}, {"arg_name": "function_args", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "[{\"name\":\"previous_line\",\"data_type\":\"LINE\",\"value\":\"Driver_Licence_Tenure@0\"}]"}, {"arg_name": "lambda_udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "doc_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"17073\""}, {"arg_name": "code_arg", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"\\n\\ndef clean_llm_result(previous_line, context = {}, keys = {}, **kwargs):\\n\\tcolumns = ['Driver Name', 'Licence Tenure']\\n\\tif previous_line == '[]':\\n\\t    return [columns]\\n\\telse:\\n\\t  return previous_line\""}, {"arg_name": "fn_name", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"clean_llm_result\""}, {"arg_name": "args", "arg_type": "VAR_POSITIONAL", "data_type": "LIST", "value": "[{\"data_type\":\"LINE\",\"value\":\"Driver_Licence_Tenure@0\"}]"}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{}"}], "output_type": "TEXT"}]}, {"label": "Driver_Data_Merged", "lines": [{"function_id": {"name": "run_udf_in_lambda_v2", "source": "NATIVE"}, "inputs": [{"arg_name": "absolute_scripts_path", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"axauk/dev-si-fleet/fs/Instabase Drive/aihub/0198ef37-d998-7864-878d-539c9c7ddd98/project/modules/scripts/REFINER/4a47c5c8-9fc5-4caf-88a1-3bea9d8d6058.json\""}, {"arg_name": "function_args", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "[{\"name\":\"Driver_Details\",\"data_type\":\"FIELD\",\"value\":\"Driver_Details\"},{\"name\":\"Driver_Age\",\"data_type\":\"FIELD\",\"value\":\"Driver_Age\"},{\"name\":\"Driver_Licence_Tenure\",\"data_type\":\"FIELD\",\"value\":\"Driver_Licence_Tenure\"}]"}, {"arg_name": "lambda_udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "doc_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"17082\""}, {"arg_name": "code_arg", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"\\n\\ndef merge_driver_details(Driver_Details, Driver_Age, Driver_Licence_Tenure, context = {}, keys = {}, **kwargs):\\n\\timport pandas as pd\\n\\timport json\\n\\t\\n\\tdef convert_to_dataframe(data):\\n\\t    if isinstance(data, list):\\n\\t        if all(isinstance(item, dict) for item in data):\\n\\t            # List of dictionaries\\n\\t            return pd.DataFrame(data)\\n\\t        \\n\\t        elif all(isinstance(item, list) for item in data):\\n\\t            # List of lists\\n\\t            # First row is assumed as header\\n\\t            return pd.DataFrame(data[1:], columns=data[0])\\n\\t\\n\\ttry:\\n\\t  Driver_Details = json.loads(Driver_Details)\\n\\t  Driver_Age = json.loads(Driver_Age)\\n\\t  Driver_Licence_Tenure = json.loads(Driver_Licence_Tenure)\\n\\t  merged_df = []\\n\\t  \\n\\t  try:\\n\\t      Driver_Details = convert_to_dataframe(Driver_Details)\\n\\t      merged_df = Driver_Details\\n\\t  except Exception as e:\\n\\t      print(\\\"no driver details \\\", e)\\n\\t\\n\\t  try:\\n\\t      Driver_Age = convert_to_dataframe(Driver_Age)\\n\\t  except Exception as e:\\n\\t      print(\\\"no driver conviction details \\\", e)\\n\\t\\n\\t  try:\\n\\t      Driver_Licence_Tenure = convert_to_dataframe(Driver_Licence_Tenure)\\n\\t  except Exception as e:\\n\\t      print(\\\"no driver licence details \\\", e)\\n\\t\\n\\t  # print(Driver_Details.columns)\\n\\t  # print(Driver_Age.columns)\\n\\t\\n\\t  try:\\n\\t      merged_df = pd.merge(Driver_Details, Driver_Age,  on='Driver Name', how='outer')\\n\\t  except Exception as e:\\n\\t      print(\\\"no driver licence details \\\", e)\\n\\t\\n\\t  try:\\n\\t      merged_df_all = pd.merge(merged_df, Driver_Licence_Tenure, on='Driver Name', how='outer')\\n\\t  except Exception as e:\\n\\t      merged_df_all = merged_df.copy()\\n\\t      merged_df_all.fillna('', inplace=True)\\n\\t      if len(merged_df_all.columns.tolist()) > 0:\\n\\t          merged_Df = [merged_df_all.columns.tolist()] + merged_df_all.values.tolist()\\n\\t          print(\\\"merging issue \\\", e)\\n\\t          return merged_Df\\n\\t      else:\\n\\t          return [[\\\"Driver DOB\\\", \\\"Licence Date\\\", \\\"Conviction Code\\\", \\\"Age\\\", \\\"Driver Name\\\", \\\"Licence Tenure\\\"]]\\n\\t\\n\\t  merged_df_all.fillna('', inplace=True)\\n\\t\\n\\t  if len(merged_df_all.columns.tolist()) > 0:\\n\\t      merged_Df = [merged_df_all.columns.tolist()] + merged_df_all.values.tolist()\\n\\t      return merged_Df\\n\\t  else:\\n\\t      return [[\\\"Driver DOB\\\", \\\"Licence Date\\\", \\\"Conviction Code\\\", \\\"Age\\\", \\\"Driver Name\\\", \\\"Licence Tenure\\\"]]\\n\\texcept:\\n\\t  return [[\\\"Driver DOB\\\", \\\"Licence Date\\\", \\\"Conviction Code\\\", \\\"Age\\\", \\\"Driver Name\\\", \\\"Licence Tenure\\\"]]\""}, {"arg_name": "fn_name", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"merge_driver_details\""}, {"arg_name": "args", "arg_type": "VAR_POSITIONAL", "data_type": "LIST", "value": "[{\"data_type\":\"FIELD\",\"value\":\"Driver_Details\"},{\"data_type\":\"FIELD\",\"value\":\"Driver_Age\"},{\"data_type\":\"FIELD\",\"value\":\"Driver_Licence_Tenure\"}]"}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{\"metrics_params\": {\"data_type\": \"DICT\", \"value\": \"{\\\"source_id\\\": \\\"Unknown\\\", \\\"source_type\\\": \\\"App\\\", \\\"user_agent\\\": \\\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36\\\"}\"}}"}], "output_type": "TEXT"}]}, {"label": "Drive_Type", "lines": [{"function_id": {"name": "run_udf_in_lambda_v2", "source": "NATIVE"}, "inputs": [{"arg_name": "absolute_scripts_path", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"axauk/dev-si-fleet/fs/Instabase Drive/aihub/0198ef37-d998-7864-878d-539c9c7ddd98/project/modules/scripts/REFINER/72343869-0bdc-450a-88c0-5e9e469262b0.json\""}, {"arg_name": "function_args", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "[{\"name\":\"Driver_Data_Merged\",\"data_type\":\"FIELD\",\"value\":\"Driver_Data_Merged\"}]"}, {"arg_name": "lambda_udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "doc_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"17081\""}, {"arg_name": "code_arg", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"\\n\\ndef get_driver_type(Driver_Data_Merged, context = {}, keys = {}, **kwargs):\\n\\timport json\\n\\timport pandas as pd\\n\\t\\n\\tdef classify_driver(row):\\n\\t    try:\\n\\t        age = int(row[\\\"Age\\\"])\\n\\t        conviction_code = str(row[\\\"Conviction Code\\\"]).strip()\\n\\t        \\n\\t        if age < 25:\\n\\t            return \\\"Young Driver\\\"\\n\\t        elif age >= 25 and str(conviction_code).strip() not in [\\\"\\\", None,\\\"N/A\\\",\\\"null\\\"]:\\n\\t            return \\\"Convicted Driver\\\"\\n\\t        else:\\n\\t            return \\\"\\\"\\n\\t    except:\\n\\t        return \\\"\\\"  # Fallback in case of data issues\\n\\t\\n\\tdef convert_to_dataframe(data):\\n\\t    if isinstance(data, list):\\n\\t        if all(isinstance(item, dict) for item in data):\\n\\t            # List of dictionaries\\n\\t            return pd.DataFrame(data)\\n\\t        elif all(isinstance(item, list) for item in data):\\n\\t            # List of lists\\n\\t            return pd.DataFrame(data[1:] , columns= data[0])\\n\\t        else:\\n\\t            raise ValueError(\\\"The list must contain either all dictionaries or all lists.\\\")\\n\\t    else:\\n\\t        raise TypeError(\\\"Input data is not a list.\\\")\\n\\t\\n\\tcolumns = ['Driver Name', 'Driver Type']\\n\\t\\n\\ttry:\\n\\t  table = json.loads(Driver_Data_Merged)\\n\\t  df = convert_to_dataframe(table)\\n\\t  df[\\\"Driver Type\\\"] = df.apply(classify_driver, axis=1)\\n\\t  return [columns] + df[columns].values.tolist()\\n\\t  \\n\\texcept Exception as e:\\n\\t  print(e)\\n\\t  return [columns]\""}, {"arg_name": "fn_name", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"get_driver_type\""}, {"arg_name": "args", "arg_type": "VAR_POSITIONAL", "data_type": "LIST", "value": "[{\"data_type\":\"FIELD\",\"value\":\"Driver_Data_Merged\"}]"}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{\"metrics_params\": {\"data_type\": \"DICT\", \"value\": \"{\\\"source_id\\\": \\\"Unknown\\\", \\\"source_type\\\": \\\"App\\\", \\\"user_agent\\\": \\\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36\\\"}\"}}"}], "output_type": "TEXT"}]}, {"label": "Driver_Party_Table", "lines": [{"function_id": {"name": "run_udf_in_lambda_v2", "source": "NATIVE"}, "inputs": [{"arg_name": "absolute_scripts_path", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"axauk/dev-si-fleet/fs/Instabase Drive/aihub/0198ef37-d998-7864-878d-539c9c7ddd98/project/modules/scripts/REFINER/a3a8ac1b-ffa3-4aea-9875-770f3c81735c.json\""}, {"arg_name": "function_args", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "[{\"name\":\"Driver_Data_Merged\",\"data_type\":\"FIELD\",\"value\":\"Driver_Data_Merged\"},{\"name\":\"Drive_Type\",\"data_type\":\"FIELD\",\"value\":\"Drive_Type\"}]"}, {"arg_name": "lambda_udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "doc_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"17083\""}, {"arg_name": "code_arg", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"\\n\\ndef form_driver_table(Driver_Data_Merged, Drive_Type, context = {}, keys = {}, **kwargs):\\n\\timport pandas as pd\\n\\timport json, traceback\\n\\timport numpy as np\\n\\t\\n\\tdef convert_to_dataframe(data):\\n\\t    if isinstance(data, list):\\n\\t        if all(isinstance(item, dict) for item in data):\\n\\t            # List of dictionaries\\n\\t            return pd.DataFrame(data)\\n\\t        \\n\\t        elif all(isinstance(item, list) for item in data):\\n\\t            # List of lists\\n\\t            # First row is assumed as header\\n\\t            return pd.DataFrame(data[1:], columns=data[0])\\n\\t\\n\\ttry:\\n\\t  Driver_Data_Merged = json.loads(Driver_Data_Merged)\\n\\t  Drive_Type = json.loads(Drive_Type)\\n\\t\\n\\t  merged_df = []\\n\\t\\n\\t  try:\\n\\t      Driver_Data_Merged = convert_to_dataframe(Driver_Data_Merged)\\n\\t  except Exception as e:\\n\\t      print(e)\\n\\t      print(traceback.format_exc())\\n\\t  try:\\n\\t      Drive_Type = convert_to_dataframe(Drive_Type)\\n\\t  except Exception as e:\\n\\t      merged_df = Driver_Data_Merged.copy()\\n\\t      print(traceback.format_exc())\\n\\t      print(e)\\n\\t\\n\\t  print(Driver_Data_Merged.columns,\\\"hi\\\", Drive_Type.columns)\\n\\t  try:\\n\\t      merged_df = pd.merge(Driver_Data_Merged, Drive_Type,  on='Driver Name', how='outer')\\n\\t  except Exception as e:\\n\\t      print(e)\\n\\t      print(traceback.format_exc())\\n\\t  \\n\\t  try:\\n\\t      rename_dict = {\\n\\t        'Driver Name': 'Driver Name',\\n\\t        'Driver DOB' : 'Driver D.O.B',\\n\\t        'Licence Date': 'Drivers Licence - Date obtained',\\n\\t        'Licence Tenure':'Driver: Years Appropriate Licence Held',\\n\\t        'Conviction Code': 'Conviction Details',\\n\\t        'Driver Type': 'Driver Type'\\n\\t      }\\n\\t\\n\\t      safe_rename_dict = {k: v for k, v in rename_dict.items() if k in merged_df.columns}\\n\\t\\n\\t      merged_df.rename(columns=safe_rename_dict, inplace=True)\\n\\t      \\n\\t      columns_order = [ 'Driver Name' , 'Driver D.O.B', \\\\\\n\\t                        'Drivers Licence - Date obtained', \\\\\\n\\t                        'Driver: Years Appropriate Licence Held', \\\\\\n\\t                        'Conviction Details' , 'Driver Type', 'Driver Claims']\\n\\t\\n\\t      for col in columns_order:\\n\\t          if col not in merged_df.columns:\\n\\t              merged_df[col] = ''\\n\\t      \\n\\t      merged_df['Driver: Years Appropriate Licence Held'] = merged_df['Driver: Years Appropriate Licence Held'].applymap(lambda x: x if x in ['1', '2', '3', '4', '5'] else '5+')\\n\\t\\n\\t      existing_columns = [col for col in columns_order if col in merged_df.columns]           \\n\\t                  \\n\\t      merged_df.replace('N/A', '', inplace=True)\\n\\t      merged_df.replace('\\\"\\\"', '', inplace=True)\\n\\t      merged_df.replace('null', '', inplace=True)\\n\\t\\n\\t      merged_df = merged_df.replace({None: np.nan, \\\"\\\": np.nan})\\n\\t      merged_df = merged_df.dropna(how='all')\\n\\t      # merged_df = merged_df.where(pd.notna(merged_df), \\\"\\\")\\n\\t\\n\\t      merged_df = merged_df.fillna('')\\n\\t\\n\\t      merged_df = merged_df[existing_columns]\\n\\t\\n\\t      # merged_df = [merged_df.columns.tolist()] + merged_df.values.tolist()\\n\\t  except Exception as e:\\n\\t      print(\\\"Exception in renaming \\\", e)\\n\\t\\n\\t      for col in columns_order:\\n\\t          if col not in merged_df.columns:\\n\\t              merged_df[col] = ''\\n\\t      \\n\\t      if len(merged_df.columns.tolist()) > 0:\\n\\t          merged_df = merged_df[columns_order]\\n\\t          merged_df = [merged_df.columns.tolist()] + merged_df.values.tolist()\\n\\t          return merged_df\\n\\t      else:\\n\\t          return [columns_order]\\n\\t  \\n\\t  if len(merged_df.columns.tolist()) > 0:\\n\\t      merged_df = [merged_df.columns.tolist()] + merged_df.values.tolist()\\n\\t      return merged_df\\n\\t  else:\\n\\t      return [columns_order]\\n\\texcept:\\n\\t  return [[ 'Driver Name' , 'Driver D.O.B', \\\\\\n\\t                        'Drivers Licence - Date obtained', \\\\\\n\\t                        'Driver: Years Appropriate Licence Held', \\\\\\n\\t                        'Conviction Details' , 'Driver Type', 'Driver Claims']]\""}, {"arg_name": "fn_name", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"form_driver_table\""}, {"arg_name": "args", "arg_type": "VAR_POSITIONAL", "data_type": "LIST", "value": "[{\"data_type\":\"FIELD\",\"value\":\"Driver_Data_Merged\"},{\"data_type\":\"FIELD\",\"value\":\"Drive_Type\"}]"}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{\"metrics_params\": {\"data_type\": \"DICT\", \"value\": \"{\\\"source_id\\\": \\\"Unknown\\\", \\\"source_type\\\": \\\"App\\\", \\\"user_agent\\\": \\\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36\\\"}\"}}"}], "output_type": "TEXT"}]}, {"label": "Excess_Type_Fire", "lines": [{"function_id": {"name": "get_extracted_field_value", "source": "NATIVE"}, "inputs": [{"arg_name": "fields", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "FIELD", "data_type_options": ["TEXT"], "value": "__model_result"}, {"arg_name": "field", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "\"Excess_Type_Fire\""}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{}"}], "output_type": "TEXT"}, {"function_id": {"name": "refine_field_v2", "source": "NATIVE"}, "inputs": [{"arg_name": "prompt", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"From the extracted text, return only the clean numeric data associated with **Excess Value**.\\nIf no Excess Value is found, return \\\"0\\\"\""}, {"arg_name": "metrics_params", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "{\"source_id\": \"Unknown\", \"source_type\": \"App\", \"user_agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36\"}"}, {"arg_name": "proj_uuid", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"0198ef37-d998-7864-878d-539c9c7ddd98\""}, {"arg_name": "cached_index", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "custom_request", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "{\"enable_map_reduce_extraction\": true, \"feature_flag_overrides\": {\"enable_dummy_feature_c\": true, \"enable_aihub_secret_manager\": true, \"aihub_enable_classification_validation\": true, \"enable_slas\": true, \"enable_advanced_apps\": true, \"aihub_enable_ocr_confidence_validation\": true, \"enable_text_view_in_converse\": true, \"enable_repo_roles\": true, \"enable_deployment_dashboard\": true, \"enable_multi_step_lite\": true, \"enable_runtime_configuration\": true, \"enable_upgrade_in_progress_banner\": true, \"enable_aihub_review_queues\": true, \"enable_aihub_stp_options\": true, \"aihub_enable_native_excel_processing\": true, \"aihub_enable_reasoning_prompt_suggestion\": true, \"enable_email_integration_data_source\": true, \"enable_aihub_saml_mapping\": true, \"enable_review_dashboard\": true, \"aihub_enable_search_history\": true, \"enable_aihub_deployment_notifications\": true, \"aihub_enable_vision_reasoning\": true, \"aihub_enable_migrate_project\": true, \"enable_app_ux_refresh\": true, \"enable_splitter_instructions\": true, \"enterprise_advanced_ocr\": true, \"aihub_enable_manual_app_ibllm_updates\": true, \"aihub_enable_customize_app\": true, \"enable_discourse_community_forum\": true, \"aihub_enable_app_run_gt_sets\": true, \"aihub_enable_navbar_redesign\": true, \"aihub_enable_extended_ai_runtime_expiration\": true, \"aihub_enable_build_split_by_page\": true, \"aihub_enable_search_in_navbar\": true, \"aihub_enable_build_moderation\": true, \"enable_upgrade_expired_apps\": true, \"aihub_enable_sdlc_workspaces\": true, \"enable_decoupled_chatbots\": true, \"aihub_enable_linked_deployments\": true, \"enable_extraction_value_normalization\": true, \"enable_fine_grain_usage_data\": true, \"enable_original_llm_limits\": true, \"enable_passing_class_names_to_splitter\": true, \"enable_search_acl_ui_v2\": true, \"enable_multistep_build\": true}, \"udf_id\": null, \"confidence_for_reasoning\": true}"}, {"arg_name": "doc_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "data_type", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"TEXT\""}, {"arg_name": "previous_line", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LINE", "data_type_options": ["TEXT"], "value": "Excess_Type_Fire@0"}, {"arg_name": "prompt_arg_names", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[]"}, {"arg_name": "prompt_arg_vals", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[]"}, {"arg_name": "prompt_arg_data_types", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[]"}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{}"}], "output_type": "TEXT"}]}, {"label": "Excess_Type_Accident_Damage", "lines": [{"function_id": {"name": "get_extracted_field_value", "source": "NATIVE"}, "inputs": [{"arg_name": "fields", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "FIELD", "data_type_options": ["TEXT"], "value": "__model_result"}, {"arg_name": "field", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "\"Excess_Type_Accident_Damage\""}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{}"}], "output_type": "TEXT"}, {"function_id": {"name": "refine_field_v2", "source": "NATIVE"}, "inputs": [{"arg_name": "prompt", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"From the extracted text, return only the clean numeric data associated with **Excess Value**.\\nIf no Excess Value is found, return \\\"0\\\"\""}, {"arg_name": "metrics_params", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "{\"source_id\": \"Unknown\", \"source_type\": \"App\", \"user_agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36\"}"}, {"arg_name": "proj_uuid", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"0198ef37-d998-7864-878d-539c9c7ddd98\""}, {"arg_name": "cached_index", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "custom_request", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "{\"enable_map_reduce_extraction\": true, \"feature_flag_overrides\": {\"enable_dummy_feature_c\": true, \"enable_aihub_secret_manager\": true, \"aihub_enable_classification_validation\": true, \"enable_slas\": true, \"enable_advanced_apps\": true, \"aihub_enable_ocr_confidence_validation\": true, \"enable_text_view_in_converse\": true, \"enable_repo_roles\": true, \"enable_deployment_dashboard\": true, \"enable_multi_step_lite\": true, \"enable_runtime_configuration\": true, \"enable_upgrade_in_progress_banner\": true, \"enable_aihub_review_queues\": true, \"enable_aihub_stp_options\": true, \"aihub_enable_native_excel_processing\": true, \"aihub_enable_reasoning_prompt_suggestion\": true, \"enable_email_integration_data_source\": true, \"enable_aihub_saml_mapping\": true, \"enable_review_dashboard\": true, \"aihub_enable_search_history\": true, \"enable_aihub_deployment_notifications\": true, \"aihub_enable_vision_reasoning\": true, \"aihub_enable_migrate_project\": true, \"enable_app_ux_refresh\": true, \"enable_splitter_instructions\": true, \"enterprise_advanced_ocr\": true, \"aihub_enable_manual_app_ibllm_updates\": true, \"aihub_enable_customize_app\": true, \"enable_discourse_community_forum\": true, \"aihub_enable_app_run_gt_sets\": true, \"aihub_enable_navbar_redesign\": true, \"aihub_enable_extended_ai_runtime_expiration\": true, \"aihub_enable_build_split_by_page\": true, \"aihub_enable_search_in_navbar\": true, \"aihub_enable_build_moderation\": true, \"enable_upgrade_expired_apps\": true, \"aihub_enable_sdlc_workspaces\": true, \"enable_decoupled_chatbots\": true, \"aihub_enable_linked_deployments\": true, \"enable_extraction_value_normalization\": true, \"enable_fine_grain_usage_data\": true, \"enable_original_llm_limits\": true, \"enable_passing_class_names_to_splitter\": true, \"enable_search_acl_ui_v2\": true, \"enable_multistep_build\": true}, \"udf_id\": null, \"confidence_for_reasoning\": true}"}, {"arg_name": "doc_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "data_type", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"TEXT\""}, {"arg_name": "previous_line", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LINE", "data_type_options": ["TEXT"], "value": "Excess_Type_Accident_Damage@0"}, {"arg_name": "prompt_arg_names", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[]"}, {"arg_name": "prompt_arg_vals", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[]"}, {"arg_name": "prompt_arg_data_types", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[]"}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{}"}], "output_type": "TEXT"}]}, {"label": "Excess_Type_Theft", "lines": [{"function_id": {"name": "get_extracted_field_value", "source": "NATIVE"}, "inputs": [{"arg_name": "fields", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "FIELD", "data_type_options": ["TEXT"], "value": "__model_result"}, {"arg_name": "field", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "\"Excess_Type_Theft\""}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{}"}], "output_type": "TEXT"}, {"function_id": {"name": "refine_field_v2", "source": "NATIVE"}, "inputs": [{"arg_name": "prompt", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"From the extracted text, return only the clean numeric data associated with **Excess Value**.\\nIf no Excess Value is found, return \\\"0\\\"\""}, {"arg_name": "metrics_params", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "{\"source_id\": \"Unknown\", \"source_type\": \"App\", \"user_agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36\"}"}, {"arg_name": "proj_uuid", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"0198ef37-d998-7864-878d-539c9c7ddd98\""}, {"arg_name": "cached_index", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "custom_request", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "{\"enable_map_reduce_extraction\": true, \"feature_flag_overrides\": {\"enable_dummy_feature_c\": true, \"enable_aihub_secret_manager\": true, \"aihub_enable_classification_validation\": true, \"enable_slas\": true, \"enable_advanced_apps\": true, \"aihub_enable_ocr_confidence_validation\": true, \"enable_text_view_in_converse\": true, \"enable_repo_roles\": true, \"enable_deployment_dashboard\": true, \"enable_multi_step_lite\": true, \"enable_runtime_configuration\": true, \"enable_upgrade_in_progress_banner\": true, \"enable_aihub_review_queues\": true, \"enable_aihub_stp_options\": true, \"aihub_enable_native_excel_processing\": true, \"aihub_enable_reasoning_prompt_suggestion\": true, \"enable_email_integration_data_source\": true, \"enable_aihub_saml_mapping\": true, \"enable_review_dashboard\": true, \"aihub_enable_search_history\": true, \"enable_aihub_deployment_notifications\": true, \"aihub_enable_vision_reasoning\": true, \"aihub_enable_migrate_project\": true, \"enable_app_ux_refresh\": true, \"enable_splitter_instructions\": true, \"enterprise_advanced_ocr\": true, \"aihub_enable_manual_app_ibllm_updates\": true, \"aihub_enable_customize_app\": true, \"enable_discourse_community_forum\": true, \"aihub_enable_app_run_gt_sets\": true, \"aihub_enable_navbar_redesign\": true, \"aihub_enable_extended_ai_runtime_expiration\": true, \"aihub_enable_build_split_by_page\": true, \"aihub_enable_search_in_navbar\": true, \"aihub_enable_build_moderation\": true, \"enable_upgrade_expired_apps\": true, \"aihub_enable_sdlc_workspaces\": true, \"enable_decoupled_chatbots\": true, \"aihub_enable_linked_deployments\": true, \"enable_extraction_value_normalization\": true, \"enable_fine_grain_usage_data\": true, \"enable_original_llm_limits\": true, \"enable_passing_class_names_to_splitter\": true, \"enable_search_acl_ui_v2\": true, \"enable_multistep_build\": true}, \"udf_id\": null, \"confidence_for_reasoning\": true}"}, {"arg_name": "doc_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "data_type", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"TEXT\""}, {"arg_name": "previous_line", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LINE", "data_type_options": ["TEXT"], "value": "Excess_Type_Theft@0"}, {"arg_name": "prompt_arg_names", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[]"}, {"arg_name": "prompt_arg_vals", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[]"}, {"arg_name": "prompt_arg_data_types", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[]"}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{}"}], "output_type": "TEXT"}]}, {"label": "Excess_Type_WS", "lines": [{"function_id": {"name": "get_extracted_field_value", "source": "NATIVE"}, "inputs": [{"arg_name": "fields", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "FIELD", "data_type_options": ["TEXT"], "value": "__model_result"}, {"arg_name": "field", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "\"Excess_Type_WS\""}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{}"}], "output_type": "TEXT"}, {"function_id": {"name": "refine_field_v2", "source": "NATIVE"}, "inputs": [{"arg_name": "prompt", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"From the extracted text, return only the clean numeric data associated with **Excess Value**.\\nIf no Excess Value is found, return \\\"0\\\"\""}, {"arg_name": "metrics_params", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "{\"source_id\": \"Unknown\", \"source_type\": \"App\", \"user_agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36\"}"}, {"arg_name": "proj_uuid", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"0198ef37-d998-7864-878d-539c9c7ddd98\""}, {"arg_name": "cached_index", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "custom_request", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "{\"enable_map_reduce_extraction\": true, \"feature_flag_overrides\": {\"enable_dummy_feature_c\": true, \"enable_aihub_secret_manager\": true, \"aihub_enable_classification_validation\": true, \"enable_slas\": true, \"enable_advanced_apps\": true, \"aihub_enable_ocr_confidence_validation\": true, \"enable_text_view_in_converse\": true, \"enable_repo_roles\": true, \"enable_deployment_dashboard\": true, \"enable_multi_step_lite\": true, \"enable_runtime_configuration\": true, \"enable_upgrade_in_progress_banner\": true, \"enable_aihub_review_queues\": true, \"enable_aihub_stp_options\": true, \"aihub_enable_native_excel_processing\": true, \"aihub_enable_reasoning_prompt_suggestion\": true, \"enable_email_integration_data_source\": true, \"enable_aihub_saml_mapping\": true, \"enable_review_dashboard\": true, \"aihub_enable_search_history\": true, \"enable_aihub_deployment_notifications\": true, \"aihub_enable_vision_reasoning\": true, \"aihub_enable_migrate_project\": true, \"enable_app_ux_refresh\": true, \"enable_splitter_instructions\": true, \"enterprise_advanced_ocr\": true, \"aihub_enable_manual_app_ibllm_updates\": true, \"aihub_enable_customize_app\": true, \"enable_discourse_community_forum\": true, \"aihub_enable_app_run_gt_sets\": true, \"aihub_enable_navbar_redesign\": true, \"aihub_enable_extended_ai_runtime_expiration\": true, \"aihub_enable_build_split_by_page\": true, \"aihub_enable_search_in_navbar\": true, \"aihub_enable_build_moderation\": true, \"enable_upgrade_expired_apps\": true, \"aihub_enable_sdlc_workspaces\": true, \"enable_decoupled_chatbots\": true, \"aihub_enable_linked_deployments\": true, \"enable_extraction_value_normalization\": true, \"enable_fine_grain_usage_data\": true, \"enable_original_llm_limits\": true, \"enable_passing_class_names_to_splitter\": true, \"enable_search_acl_ui_v2\": true, \"enable_multistep_build\": true}, \"udf_id\": null, \"confidence_for_reasoning\": true}"}, {"arg_name": "doc_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "data_type", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"TEXT\""}, {"arg_name": "previous_line", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LINE", "data_type_options": ["TEXT"], "value": "Excess_Type_WS@0"}, {"arg_name": "prompt_arg_names", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[]"}, {"arg_name": "prompt_arg_vals", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[]"}, {"arg_name": "prompt_arg_data_types", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[]"}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{}"}], "output_type": "TEXT"}]}, {"label": "Business_Category", "lines": [{"function_id": {"name": "run_udf_in_lambda_v2", "source": "NATIVE"}, "inputs": [{"arg_name": "absolute_scripts_path", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"axauk/dev-si-fleet/fs/Instabase Drive/aihub/0198ef37-d998-7864-878d-539c9c7ddd98/project/modules/scripts/REFINER/0099a5c4-ffc4-4361-9c05-8034d9403ada.json\""}, {"arg_name": "function_args", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "[]"}, {"arg_name": "lambda_udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "doc_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"17085\""}, {"arg_name": "code_arg", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"\\n\\ndef return_business_category(context = {}, keys = {}, **kwargs):\\n\\treturn \\\"Mid Market\\\"\""}, {"arg_name": "fn_name", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"return_business_category\""}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{\"metrics_params\": {\"data_type\": \"DICT\", \"value\": \"{\\\"source_id\\\": \\\"Unknown\\\", \\\"source_type\\\": \\\"App\\\", \\\"user_agent\\\": \\\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36\\\"}\"}}"}], "output_type": "TEXT"}]}, {"label": "Vehicle_Schedule_Data", "lines": [{"function_id": {"name": "get_extracted_field_value", "source": "NATIVE"}, "inputs": [{"arg_name": "fields", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "FIELD", "data_type_options": ["TEXT"], "value": "__model_result"}, {"arg_name": "field", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "\"Vehicle_Schedule_Data\""}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{}"}], "output_type": "TEXT"}, {"function_id": {"name": "refine_field_v2", "source": "NATIVE"}, "inputs": [{"arg_name": "prompt", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"Return only the extracted data in a list of lists format like below:\\n[[\\\"Vehicle Registration\\\", \\\"Cover Vehicle\\\"], [\\\"AB12 XYZ\\\", \\\"TPO\\\"], [\\\"XY99 ZZZ\\\", \\\"\\\"]]\\nDo not include explanations, comments, or headings.\\nDo not wrap the output in markdown or quote blocks.\\n\\nIf no valid data is found, return an empty list: [].\\n\\nAll unrelated or irrelevant content must be excluded from the output.\""}, {"arg_name": "metrics_params", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "{\"source_id\": \"Unknown\", \"source_type\": \"App\", \"user_agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36\"}"}, {"arg_name": "proj_uuid", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"0198ef37-d998-7864-878d-539c9c7ddd98\""}, {"arg_name": "cached_index", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "custom_request", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "{\"enable_map_reduce_extraction\": true, \"feature_flag_overrides\": {\"enable_dummy_feature_c\": true, \"enable_aihub_secret_manager\": true, \"aihub_enable_classification_validation\": true, \"enable_slas\": true, \"enable_advanced_apps\": true, \"aihub_enable_ocr_confidence_validation\": true, \"enable_text_view_in_converse\": true, \"enable_repo_roles\": true, \"enable_deployment_dashboard\": true, \"enable_multi_step_lite\": true, \"enable_runtime_configuration\": true, \"enable_upgrade_in_progress_banner\": true, \"enable_aihub_review_queues\": true, \"enable_aihub_stp_options\": true, \"aihub_enable_native_excel_processing\": true, \"aihub_enable_reasoning_prompt_suggestion\": true, \"enable_email_integration_data_source\": true, \"enable_aihub_saml_mapping\": true, \"enable_review_dashboard\": true, \"aihub_enable_search_history\": true, \"enable_aihub_deployment_notifications\": true, \"aihub_enable_vision_reasoning\": true, \"aihub_enable_migrate_project\": true, \"enable_app_ux_refresh\": true, \"enable_splitter_instructions\": true, \"enterprise_advanced_ocr\": true, \"aihub_enable_manual_app_ibllm_updates\": true, \"aihub_enable_customize_app\": true, \"enable_discourse_community_forum\": true, \"aihub_enable_app_run_gt_sets\": true, \"aihub_enable_navbar_redesign\": true, \"aihub_enable_extended_ai_runtime_expiration\": true, \"aihub_enable_build_split_by_page\": true, \"aihub_enable_search_in_navbar\": true, \"aihub_enable_build_moderation\": true, \"enable_upgrade_expired_apps\": true, \"aihub_enable_sdlc_workspaces\": true, \"enable_decoupled_chatbots\": true, \"aihub_enable_linked_deployments\": true, \"enable_extraction_value_normalization\": true, \"enable_fine_grain_usage_data\": true, \"enable_original_llm_limits\": true, \"enable_passing_class_names_to_splitter\": true, \"enable_search_acl_ui_v2\": true, \"enable_multistep_build\": true}, \"udf_id\": null, \"confidence_for_reasoning\": true}"}, {"arg_name": "doc_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "data_type", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"TEXT\""}, {"arg_name": "previous_line", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LINE", "data_type_options": ["TEXT"], "value": "Vehicle_Schedule_Data@0"}, {"arg_name": "prompt_arg_names", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[]"}, {"arg_name": "prompt_arg_vals", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[]"}, {"arg_name": "prompt_arg_data_types", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[]"}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{}"}], "output_type": "TEXT"}, {"function_id": {"name": "run_udf_in_lambda_v2", "source": "NATIVE"}, "inputs": [{"arg_name": "absolute_scripts_path", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"axauk/dev-si-fleet/fs/Instabase Drive/aihub/0198ef37-d998-7864-878d-539c9c7ddd98/project/modules/scripts/REFINER/51d025c9-203c-402b-bb0b-623afd4195fd.json\""}, {"arg_name": "function_args", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "[{\"name\":\"previous_line\",\"data_type\":\"LINE\",\"value\":\"Vehicle_Schedule_Data@1\"},{\"name\":\"Effective_From\",\"data_type\":\"FIELD\",\"value\":\"Effective_From\"},{\"name\":\"Effective_To\",\"data_type\":\"FIELD\",\"value\":\"Effective_To\"}]"}, {"arg_name": "lambda_udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "doc_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"17084\""}, {"arg_name": "code_arg", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"\\n\\ndef form_vehicle_schedule(previous_line, Effective_From, Effective_To, context = {}, keys = {}, **kwargs):\\n\\t\\n\\timport pandas as pd\\n\\timport json, re\\n\\t\\n\\tdef convert_to_dataframe(data):\\n\\t    if isinstance(data, list):\\n\\t        if all(isinstance(item, dict) for item in data):\\n\\t            # List of dictionaries\\n\\t            return pd.DataFrame(data)\\n\\t        \\n\\t        elif all(isinstance(item, list) for item in data):\\n\\t            # List of lists\\n\\t            # First row is assumed as header\\n\\t            return pd.DataFrame(data[1:], columns=data[0])\\n\\t\\n\\tcolumn_order = ['Effective From', 'Effective To','Vehicle Registration', 'Cover - Vehicle']\\n\\tprint(previous_line)\\n\\ttry:\\n\\t    try:\\n\\t        vehicel_schedule_data = json.loads(str(previous_line))\\n\\t    except:\\n\\t        # previous_line = previous_line.replace(\\\"```\\\",\\\"\\\").replace(\\\"json\\\",\\\"\\\")\\n\\t        matches = re.findall(r'\\\\[.*?\\\\]', previous_line)\\n\\t        \\n\\t        if len(matches) == 1:\\n\\t            vehicel_schedule_data = json.loads(matches[0])\\n\\t        else:\\n\\t            # Case 2: Multiple lists, convert all\\n\\t            vehicel_schedule_data = [json.loads(m) for m in matches]\\n\\t\\n\\t    merged_df = []\\n\\t    \\n\\t    try:\\n\\t        vehicel_schedule_data = convert_to_dataframe(vehicel_schedule_data)\\n\\t        \\n\\t    except Exception as e:\\n\\t        print(\\\"no vehicel_schedule_data details \\\", e)\\n\\t    \\n\\t    try:\\n\\t        vehicel_schedule_data['Effective From'] = Effective_From\\n\\t    except:\\n\\t        vehicel_schedule_data['Effective From'] = ''\\n\\t    \\n\\t    try:\\n\\t        vehicel_schedule_data['Effective To'] = Effective_To\\n\\t    except:\\n\\t        vehicel_schedule_data['Effective To'] = ''\\n\\t\\n\\t    vehicel_schedule_data.fillna('', inplace=True)\\n\\t    vehicel_schedule_data = vehicel_schedule_data.replace('N/A', '')\\n\\t    vehicel_schedule_data = vehicel_schedule_data.replace('\\\"\\\"', '')\\n\\t    try:\\n\\t        vehicel_schedule_data = vehicel_schedule_data.rename(columns={'Cover Vehicle': 'Cover - Vehicle'})\\n\\t    except Exception as e:\\n\\t        print(e)\\n\\t\\n\\t    for col in column_order:\\n\\t        if col not in vehicel_schedule_data.columns:\\n\\t            vehicel_schedule_data[col] = ''\\n\\t\\n\\t\\n\\t    if len(vehicel_schedule_data.columns.tolist()) > 0:\\n\\t        vehicel_schedule_data = vehicel_schedule_data[column_order]\\n\\t        vehicel_schedule_data = [vehicel_schedule_data.columns.tolist()] + vehicel_schedule_data.values.tolist()\\n\\t        return vehicel_schedule_data\\n\\t    else:\\n\\t        return [['Effective From', 'Effective To','Vehicle Registration', 'Cover - Vehicle']]\\n\\texcept:\\n\\t    return [['Effective From', 'Effective To','Vehicle Registration', 'Cover - Vehicle']]\""}, {"arg_name": "fn_name", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"form_vehicle_schedule\""}, {"arg_name": "args", "arg_type": "VAR_POSITIONAL", "data_type": "LIST", "value": "[{\"data_type\":\"LINE\",\"value\":\"Vehicle_Schedule_Data@1\"},{\"data_type\":\"FIELD\",\"value\":\"Effective_From\"},{\"data_type\":\"FIELD\",\"value\":\"Effective_To\"}]"}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{}"}], "output_type": "TEXT"}]}, {"label": "Unique__Values__Cover__Basis", "lines": [{"function_id": {"name": "run_udf_in_lambda_v2", "source": "NATIVE"}, "inputs": [{"arg_name": "absolute_scripts_path", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"axauk/dev-si-fleet/fs/Instabase Drive/aihub/0198ef37-d998-7864-878d-539c9c7ddd98/project/modules/scripts/REFINER/97e4aeb5-0b8f-4e11-9d41-09b0119370eb.json\""}, {"arg_name": "function_args", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "[{\"name\":\"Vehicle_Schedule_Data\",\"data_type\":\"FIELD\",\"value\":\"Vehicle_Schedule_Data\"}]"}, {"arg_name": "lambda_udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "doc_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"17088\""}, {"arg_name": "code_arg", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"\\n\\ndef get_unique_values_from_cover_basis_col(Vehicle_Schedule_Data, context = {}, keys = {}, **kwargs):\\n\\t# # Import Python packages\\n\\timport json\\n\\timport pandas as pd\\n\\t\\n\\t# list_of_dct = json.loads(Vehicle_Schedule_Data)\\n\\t# # print(list_of_dct)\\n\\t\\n\\t# try:\\n\\t#     unique_cover_basis_set = set(item['Cover Vehicle'] for item in list_of_dct)\\n\\t#     unique_cover_basis_list = list(unique_cover_basis_set)\\n\\t#     unique_cover_basis_list_without_na = [item for item in unique_cover_basis_list if item != 'N/A']\\n\\t#     return unique_cover_basis_list_without_na\\n\\t\\n\\t# except Exception as e:\\n\\t#     print(\\\"in ex\\\", e)\\n\\t#     # print(type(list_of_dct))\\n\\t#     unique_first_col = list(set(row[0] for row in list_of_dct))\\n\\t#     if 'Cover Vehicle' in unique_first_col:\\n\\t#         unique_first_col.remove('Cover Vehicle')\\n\\t\\n\\t#     return unique_first_col\\n\\t    \\n\\t\\n\\t\\n\\tdef convert_to_dataframe(data):\\n\\t    if isinstance(data, list):\\n\\t        if all(isinstance(item, dict) for item in data):\\n\\t            # List of dictionaries\\n\\t            return pd.DataFrame(data)\\n\\t        elif all(isinstance(item, list) for item in data):\\n\\t            # List of lists\\n\\t            return pd.DataFrame(data[1:] , columns= data[0])\\n\\t        else:\\n\\t            raise ValueError(\\\"The list must contain either all dictionaries or all lists.\\\")\\n\\t    else:\\n\\t        raise TypeError(\\\"Input data is not a list.\\\")\\n\\t\\n\\t\\n\\tVehicle_Schedule_Data = json.loads(Vehicle_Schedule_Data)\\n\\t\\n\\tif Vehicle_Schedule_Data in ['',None,'N/A', '[]', []]:\\n\\t  return \\\"None\\\"\\n\\t\\n\\tVehicle_Schedule_Data = convert_to_dataframe(Vehicle_Schedule_Data)\\n\\tunique_vals = Vehicle_Schedule_Data['Cover - Vehicle'].unique().tolist()\\n\\tunique_vals = [each_val for each_val in unique_vals if each_val not in ['N/A', \\\"\\\", None, \\\"null\\\"]]\\n\\tif unique_vals:\\n\\t    return unique_vals\\n\\telse:\\n\\t    return \\\"None\\\"\""}, {"arg_name": "fn_name", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"get_unique_values_from_cover_basis_col\""}, {"arg_name": "args", "arg_type": "VAR_POSITIONAL", "data_type": "LIST", "value": "[{\"data_type\":\"FIELD\",\"value\":\"Vehicle_Schedule_Data\"}]"}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{\"metrics_params\": {\"data_type\": \"DICT\", \"value\": \"{\\\"source_id\\\": \\\"Unknown\\\", \\\"source_type\\\": \\\"App\\\", \\\"user_agent\\\": \\\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36\\\"}\"}}"}], "output_type": "TEXT"}]}, {"label": "Cover_Basis_Mapping", "lines": [{"function_id": {"name": "refine_field_v2", "source": "NATIVE"}, "inputs": [{"arg_name": "prompt", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"For each value in the list {{\\\\ Unique_Values_Cover_Basis \\\\}}, generate a dictionary mapping where each value is normalised to one of the standard cover basis categories. You may receive values in full form (e.g., \\\"Third Party, Fire and Theft\\\"), as acronyms (e.g., \\\"TPFT\\\", \\\"TPO\\\", \\\"Comp\\\"), or as variations of known phrases (e.g., \\\"Comprehensive Cover\\\", \\\"Laid Up - Fire &amp; Theft\\\"). Use the following mapping rules: \\\"Third Party, Fire and Theft\\\" or similar \\u2192 TPFT, \\\"Comprehensive\\\" or similar \\u2192 Comp, \\\"Third Party Only\\\" or similar \\u2192 TPO, \\\"Laid Up (Accidental Damage, Fire, and Theft)\\\" or similar \\u2192 Laid Up (ADFT), \\\"Laid Up (Fire and Theft)\\\" , LUFT or similar \\u2192 Laid up (FT Only). Direct acronyms like TPO, TPFT, Comp should map to themselves  exclude LUFT, Since LUFT -&gt; Laid up (FT Only). If a value is irrelevant or does not match any known category, map it to an empty string \\\"\\\" Return the output as a dictionary like this: {\\u201coriginal value\\u201d: mapped category, }\""}, {"arg_name": "metrics_params", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "{\"source_id\": \"Unknown\", \"source_type\": \"App\", \"user_agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36\"}"}, {"arg_name": "proj_uuid", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"0198ef37-d998-7864-878d-539c9c7ddd98\""}, {"arg_name": "cached_index", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "custom_request", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "{\"enable_map_reduce_extraction\": true, \"feature_flag_overrides\": {\"enable_dummy_feature_c\": true, \"enable_aihub_secret_manager\": true, \"aihub_enable_classification_validation\": true, \"enable_slas\": true, \"enable_advanced_apps\": true, \"aihub_enable_ocr_confidence_validation\": true, \"enable_text_view_in_converse\": true, \"enable_repo_roles\": true, \"enable_deployment_dashboard\": true, \"enable_multi_step_lite\": true, \"enable_runtime_configuration\": true, \"enable_upgrade_in_progress_banner\": true, \"enable_aihub_review_queues\": true, \"enable_aihub_stp_options\": true, \"aihub_enable_native_excel_processing\": true, \"aihub_enable_reasoning_prompt_suggestion\": true, \"enable_email_integration_data_source\": true, \"enable_aihub_saml_mapping\": true, \"enable_review_dashboard\": true, \"aihub_enable_search_history\": true, \"enable_aihub_deployment_notifications\": true, \"aihub_enable_vision_reasoning\": true, \"aihub_enable_migrate_project\": true, \"enable_app_ux_refresh\": true, \"enable_splitter_instructions\": true, \"enterprise_advanced_ocr\": true, \"aihub_enable_manual_app_ibllm_updates\": true, \"aihub_enable_customize_app\": true, \"enable_discourse_community_forum\": true, \"aihub_enable_app_run_gt_sets\": true, \"aihub_enable_navbar_redesign\": true, \"aihub_enable_extended_ai_runtime_expiration\": true, \"aihub_enable_build_split_by_page\": true, \"aihub_enable_search_in_navbar\": true, \"aihub_enable_build_moderation\": true, \"enable_upgrade_expired_apps\": true, \"aihub_enable_sdlc_workspaces\": true, \"enable_decoupled_chatbots\": true, \"aihub_enable_linked_deployments\": true, \"enable_extraction_value_normalization\": true, \"enable_fine_grain_usage_data\": true, \"enable_original_llm_limits\": true, \"enable_passing_class_names_to_splitter\": true, \"enable_search_acl_ui_v2\": true, \"enable_multistep_build\": true}, \"udf_id\": null, \"confidence_for_reasoning\": true}"}, {"arg_name": "doc_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "data_type", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"TEXT\""}, {"arg_name": "previous_line", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "prompt_arg_names", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[{\"data_type\": \"ANY\", \"value\": \"\\\"Unique__Values__Cover__Basis\\\"\"}]"}, {"arg_name": "prompt_arg_vals", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[{\"data_type\": \"FIELD\", \"value\": \"Unique__Values__Cover__Basis\"}]"}, {"arg_name": "prompt_arg_data_types", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[{\"data_type\": \"ANY\", \"value\": \"\\\"TEXT\\\"\"}]"}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{}"}], "output_type": "TEXT"}, {"function_id": {"name": "run_udf_in_lambda_v2", "source": "NATIVE"}, "inputs": [{"arg_name": "absolute_scripts_path", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"axauk/dev-si-fleet/fs/Instabase Drive/aihub/0198ef37-d998-7864-878d-539c9c7ddd98/project/modules/scripts/REFINER/702bc713-4cbd-4cc3-b28c-933d4cef0472.json\""}, {"arg_name": "function_args", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "[{\"name\":\"previous_line\",\"data_type\":\"LINE\",\"value\":\"Cover_Basis_Mapping@0\"}]"}, {"arg_name": "lambda_udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "doc_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"17089\""}, {"arg_name": "code_arg", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"\\n\\ndef refine_result(previous_line, context = {}, keys = {}, **kwargs):\\n\\timport json\\n\\t\\n\\ttry:\\n\\t    if previous_line not in [\\\"\\\", None, \\\"[]\\\", \\\" \\\", \\\"N/A\\\", \\\"null\\\"]:\\n\\t        result = previous_line\\n\\t    else:\\n\\t        result = \\\"{}\\\"\\n\\t\\n\\texcept Exception as e:\\n\\t    print(e)\\n\\t    result = \\\"{}\\\"\\n\\t\\n\\treturn result  # Ensure this is inside a function\\n\\t\""}, {"arg_name": "fn_name", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"refine_result\""}, {"arg_name": "args", "arg_type": "VAR_POSITIONAL", "data_type": "LIST", "value": "[{\"data_type\":\"LINE\",\"value\":\"Cover_Basis_Mapping@0\"}]"}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{}"}], "output_type": "TEXT"}]}, {"label": "Vehicle_Schedule_Table", "lines": [{"function_id": {"name": "run_udf_in_lambda_v2", "source": "NATIVE"}, "inputs": [{"arg_name": "absolute_scripts_path", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"axauk/dev-si-fleet/fs/Instabase Drive/aihub/0198ef37-d998-7864-878d-539c9c7ddd98/project/modules/scripts/REFINER/4ad109a5-bb41-4951-9179-93f2565ed611.json\""}, {"arg_name": "function_args", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "[{\"name\":\"Cover_Basis_Mapping\",\"data_type\":\"FIELD\",\"value\":\"Cover_Basis_Mapping\"},{\"name\":\"Unique__Values__Cover__Basis\",\"data_type\":\"FIELD\",\"value\":\"Unique__Values__Cover__Basis\"},{\"name\":\"Vehicle_Schedule_Data\",\"data_type\":\"FIELD\",\"value\":\"Vehicle_Schedule_Data\"},{\"name\":\"Effective_From\",\"data_type\":\"FIELD\",\"value\":\"Effective_From\"},{\"name\":\"Effective_To\",\"data_type\":\"FIELD\",\"value\":\"Effective_To\"}]"}, {"arg_name": "lambda_udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "doc_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"17090\""}, {"arg_name": "code_arg", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"\\n\\ndef form_vehicle_schedule_table(Cover_Basis_Mapping, Unique__Values__Cover__Basis, Vehicle_Schedule_Data, Effective_From, Effective_To, context = {}, keys = {}, **kwargs):\\n\\timport json\\n\\timport pandas as pd\\n\\t\\n\\tdef convert_to_dataframe(data):\\n\\t    if isinstance(data, list):\\n\\t        if all(isinstance(item, dict) for item in data):\\n\\t            # List of dictionaries\\n\\t            return pd.DataFrame(data)\\n\\t        elif all(isinstance(item, list) for item in data):\\n\\t            # List of lists\\n\\t            return pd.DataFrame(data[1:] , columns= data[0])\\n\\t        else:\\n\\t            raise ValueError(\\\"The list must contain either all dictionaries or all lists.\\\")\\n\\t    else:\\n\\t        raise TypeError(\\\"Input data is not a list.\\\")\\n\\t\\n\\t\\n\\tcolumns_order = ['Effective From', \\\\\\n\\t                  'Effective To', \\\\\\n\\t                'Vehicle Registration', \\\\\\n\\t                'Cover - Vehicle', \\\\\\n\\t                'Cover - Vehicle - Mapped']\\n\\t\\n\\t\\n\\tif Vehicle_Schedule_Data == \\\"[]\\\":\\n\\t    return [columns_order]\\n\\ttry:\\n\\t    \\n\\t    vehicle_num_and_cover_type_table = json.loads(Vehicle_Schedule_Data)\\n\\t    vehicle_num_and_cover_type_table_df = convert_to_dataframe(vehicle_num_and_cover_type_table)\\n\\t    \\n\\t    # if vehicle_num_and_cover_type_table_df.empty and ((Effective_From not in ['','N/A']) or (Effective_To not in ['','N/A'])):\\n\\t    #   vehicle_num_and_cover_type_table_df.loc[0] = {'Effective From': Effective_From, 'Effective To': Effective_To}\\n\\t\\n\\t\\n\\t    vehicle_num_and_cover_type_table_df['Effective From'] = str(Effective_From)\\n\\t    vehicle_num_and_cover_type_table_df['Effective To'] = str(Effective_To)\\n\\t    \\n\\t    # print(\\\"hi\\\", vehicle_num_and_cover_type_table_df)\\n\\t\\n\\t    vehicle_num_and_cover_type_table_df.rename(columns={\\n\\t        'Cover - Vehicle' : 'Cover - Vehicle',\\n\\t        'Vehicle Registration Number' : 'Vehicle Registration' \\n\\t      }, inplace=True)\\n\\t    \\n\\t    try:\\n\\t        Unique__Values__Cover__Basis = json.loads(Unique__Values__Cover__Basis)\\n\\t    except:\\n\\t        Unique__Values__Cover__Basis = eval(Unique__Values__Cover__Basis)\\n\\t\\n\\t    if Unique__Values__Cover__Basis:\\n\\t        Cover_Basis_Mapping_dct = json.loads(Cover_Basis_Mapping)\\n\\t        vehicle_num_and_cover_type_table_df['Cover - Vehicle - Mapped'] = vehicle_num_and_cover_type_table_df['Cover - Vehicle'].replace(Cover_Basis_Mapping_dct)\\n\\t\\n\\t    # print(vehicle_num_and_cover_type_table_df, Effective_From, Effective_To)\\n\\t    \\n\\t    for col in columns_order:\\n\\t          if col not in vehicle_num_and_cover_type_table_df.columns:\\n\\t            vehicle_num_and_cover_type_table_df[col] = ''\\n\\t\\n\\t\\n\\t    invalid_values = [\\\"\\\", \\\"n/a\\\", \\\"null\\\", \\\"none\\\", \\\"nan\\\"]\\n\\t    vehicle_num_and_cover_type_table_df = vehicle_num_and_cover_type_table_df[~vehicle_num_and_cover_type_table_df[\\\"Vehicle Registration\\\"].astype(str).str.strip().str.lower().isin([str(i).lower() for i in invalid_values])]\\n\\t\\n\\t\\n\\t    vehicle_num_and_cover_type_table_df = vehicle_num_and_cover_type_table_df.replace('N/A', '')\\n\\t    vehicle_num_and_cover_type_table_df = vehicle_num_and_cover_type_table_df.replace('\\\"\\\"', '')\\n\\t    vehicle_num_and_cover_type_table_df.fillna('', inplace=True)\\n\\t\\n\\t    if len(vehicle_num_and_cover_type_table_df.columns.tolist()) > 0:\\n\\t        vehicle_num_and_cover_type_table_df = vehicle_num_and_cover_type_table_df[columns_order]\\n\\t        vehicle_num_and_cover_type_table_df = [vehicle_num_and_cover_type_table_df.columns.tolist()] + vehicle_num_and_cover_type_table_df.values.tolist()\\n\\t        return vehicle_num_and_cover_type_table_df\\n\\t    else:\\n\\t        return [columns_order]\\n\\t\\n\\texcept Exception as e:\\n\\t    print(\\\"In exception \\\", e)\\n\\t    try:\\n\\t        vehicle_num_and_cover_type_table = json.loads(Vehicle_Schedule_Data)\\n\\t        vehicle_num_and_cover_type_table_df = convert_to_dataframe(vehicle_num_and_cover_type_table)\\n\\t        \\n\\t        # if vehicle_num_and_cover_type_table_df.empty and ((Effective_From not in ['','N/A']) or (Effective_To not in ['','N/A'])):\\n\\t        #   vehicle_num_and_cover_type_table_df.loc[0] = {'Effective From': Effective_From, 'Effective To': Effective_To}\\n\\t\\n\\t\\n\\t        try:\\n\\t            vehicle_num_and_cover_type_table_df.rename(columns={\\n\\t                'Cover - Vehicle' : 'Cover - Vehicle',\\n\\t                'Vehicle Registration Number' : 'Vehicle Registration' \\n\\t              }, inplace=True)\\n\\t\\n\\t        except:\\n\\t            print()\\n\\t\\n\\t        for col in columns_order:\\n\\t          if col not in vehicle_num_and_cover_type_table_df.columns:\\n\\t            vehicle_num_and_cover_type_table_df[col] = ''\\n\\t\\n\\t        \\n\\t        if len(vehicle_num_and_cover_type_table_df.columns.tolist()) > 0:\\n\\t            vehicle_num_and_cover_type_table_df.fillna('', inplace=True)\\n\\t            vehicle_num_and_cover_type_table_df = vehicle_num_and_cover_type_table_df[columns_order]\\n\\t            vehicle_num_and_cover_type_table_df = [vehicle_num_and_cover_type_table_df.columns.tolist()] + vehicle_num_and_cover_type_table_df.values.tolist()\\n\\t            return vehicle_num_and_cover_type_table_df\\n\\t        else:\\n\\t            return [columns_order]\\n\\t    except:\\n\\t        return [columns_order]\\n\\t    return [columns_order]\""}, {"arg_name": "fn_name", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"form_vehicle_schedule_table\""}, {"arg_name": "args", "arg_type": "VAR_POSITIONAL", "data_type": "LIST", "value": "[{\"data_type\":\"FIELD\",\"value\":\"Cover_Basis_Mapping\"},{\"data_type\":\"FIELD\",\"value\":\"Unique__Values__Cover__Basis\"},{\"data_type\":\"FIELD\",\"value\":\"Vehicle_Schedule_Data\"},{\"data_type\":\"FIELD\",\"value\":\"Effective_From\"},{\"data_type\":\"FIELD\",\"value\":\"Effective_To\"}]"}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{\"metrics_params\": {\"data_type\": \"DICT\", \"value\": \"{\\\"source_id\\\": \\\"Unknown\\\", \\\"source_type\\\": \\\"App\\\", \\\"user_agent\\\": \\\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36\\\"}\"}}"}], "output_type": "TEXT"}]}, {"label": "Vehicle_Count_From_Email", "lines": [{"function_id": {"name": "get_extracted_field_value", "source": "NATIVE"}, "inputs": [{"arg_name": "fields", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "FIELD", "data_type_options": ["TEXT"], "value": "__model_result"}, {"arg_name": "field", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "\"Vehicle_Count_From_Email\""}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{}"}], "output_type": "TEXT"}, {"function_id": {"name": "refine_field_v2", "source": "NATIVE"}, "inputs": [{"arg_name": "prompt", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"Just return the vehicle count, otherwise return \\\"\\\"\""}, {"arg_name": "metrics_params", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "{\"source_id\": \"Unknown\", \"source_type\": \"App\", \"user_agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36\"}"}, {"arg_name": "proj_uuid", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"0198ef37-d998-7864-878d-539c9c7ddd98\""}, {"arg_name": "cached_index", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "custom_request", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "{\"enable_map_reduce_extraction\": true, \"feature_flag_overrides\": {\"enable_dummy_feature_c\": true, \"enable_aihub_secret_manager\": true, \"aihub_enable_classification_validation\": true, \"enable_slas\": true, \"enable_advanced_apps\": true, \"aihub_enable_ocr_confidence_validation\": true, \"enable_text_view_in_converse\": true, \"enable_repo_roles\": true, \"enable_deployment_dashboard\": true, \"enable_multi_step_lite\": true, \"enable_runtime_configuration\": true, \"enable_upgrade_in_progress_banner\": true, \"enable_aihub_review_queues\": true, \"enable_aihub_stp_options\": true, \"aihub_enable_native_excel_processing\": true, \"aihub_enable_reasoning_prompt_suggestion\": true, \"enable_email_integration_data_source\": true, \"enable_aihub_saml_mapping\": true, \"enable_review_dashboard\": true, \"aihub_enable_search_history\": true, \"enable_aihub_deployment_notifications\": true, \"aihub_enable_vision_reasoning\": true, \"aihub_enable_migrate_project\": true, \"enable_app_ux_refresh\": true, \"enable_splitter_instructions\": true, \"enterprise_advanced_ocr\": true, \"aihub_enable_manual_app_ibllm_updates\": true, \"aihub_enable_customize_app\": true, \"enable_discourse_community_forum\": true, \"aihub_enable_app_run_gt_sets\": true, \"aihub_enable_navbar_redesign\": true, \"aihub_enable_extended_ai_runtime_expiration\": true, \"aihub_enable_build_split_by_page\": true, \"aihub_enable_search_in_navbar\": true, \"aihub_enable_build_moderation\": true, \"enable_upgrade_expired_apps\": true, \"aihub_enable_sdlc_workspaces\": true, \"enable_decoupled_chatbots\": true, \"aihub_enable_linked_deployments\": true, \"enable_extraction_value_normalization\": true, \"enable_fine_grain_usage_data\": true, \"enable_original_llm_limits\": true, \"enable_passing_class_names_to_splitter\": true, \"enable_search_acl_ui_v2\": true, \"enable_multistep_build\": true}, \"udf_id\": null, \"confidence_for_reasoning\": true}"}, {"arg_name": "doc_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "data_type", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"TEXT\""}, {"arg_name": "previous_line", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LINE", "data_type_options": ["TEXT"], "value": "Vehicle_Count_From_Email@0"}, {"arg_name": "prompt_arg_names", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[]"}, {"arg_name": "prompt_arg_vals", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[]"}, {"arg_name": "prompt_arg_data_types", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[]"}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{}"}], "output_type": "TEXT"}]}, {"label": "Vehicle_Count_From_Table", "lines": [{"function_id": {"name": "run_udf_in_lambda_v2", "source": "NATIVE"}, "inputs": [{"arg_name": "absolute_scripts_path", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"axauk/dev-si-fleet/fs/Instabase Drive/aihub/0198ef37-d998-7864-878d-539c9c7ddd98/project/modules/scripts/REFINER/99f85194-3acc-42fe-8716-440df971e3ad.json\""}, {"arg_name": "function_args", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "[{\"name\":\"Vehicle_Schedule_Table\",\"data_type\":\"FIELD\",\"value\":\"Vehicle_Schedule_Table\"}]"}, {"arg_name": "lambda_udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "doc_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"17086\""}, {"arg_name": "code_arg", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"\\n\\ndef get_number_of_notifiable_vehicles(Vehicle_Schedule_Table, context = {}, keys = {}, **kwargs):\\n\\timport json\\n\\timport pandas as pd\\n\\timport numpy as np\\n\\t\\n\\tdef convert_to_dataframe(data):\\n\\t    if isinstance(data, list):\\n\\t        if all(isinstance(item, dict) for item in data):\\n\\t            # List of dictionaries\\n\\t            return pd.DataFrame(data)\\n\\t        elif all(isinstance(item, list) for item in data):\\n\\t            # List of lists\\n\\t            return pd.DataFrame( data[1:] , columns= data[0])\\n\\t        else:\\n\\t            raise ValueError(\\\"The list must contain either all dictionaries or all lists.\\\")\\n\\t    else:\\n\\t        raise TypeError(\\\"Input data is not a list.\\\")\\n\\t\\n\\ttry:\\n\\t  if Vehicle_Schedule_Table == \\\"[]\\\" or Vehicle_Schedule_Table == 'n/a':\\n\\t    return \\\"0\\\"\\n\\t  else:\\n\\t    Vehicle_Schedule_Table = json.loads(Vehicle_Schedule_Table)\\n\\t    Vehicle_Schedule_Table = convert_to_dataframe(Vehicle_Schedule_Table)\\n\\t    non_empty_count = Vehicle_Schedule_Table['Vehicle Registration'].replace('', np.nan).dropna().shape[0]\\n\\t    return non_empty_count\\n\\texcept:\\n\\t  return \\\"0\\\"\""}, {"arg_name": "fn_name", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"get_number_of_notifiable_vehicles\""}, {"arg_name": "args", "arg_type": "VAR_POSITIONAL", "data_type": "LIST", "value": "[{\"data_type\":\"FIELD\",\"value\":\"Vehicle_Schedule_Table\"}]"}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{\"metrics_params\": {\"data_type\": \"DICT\", \"value\": \"{\\\"source_id\\\": \\\"Unknown\\\", \\\"source_type\\\": \\\"App\\\", \\\"user_agent\\\": \\\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36\\\"}\"}}"}], "output_type": "TEXT"}]}, {"label": "Number_of_Notifiable_Vehicles", "lines": [{"function_id": {"name": "run_udf_in_lambda_v2", "source": "NATIVE"}, "inputs": [{"arg_name": "absolute_scripts_path", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"axauk/dev-si-fleet/fs/Instabase Drive/aihub/0198ef37-d998-7864-878d-539c9c7ddd98/project/modules/scripts/REFINER/49c8ab9f-811c-4a35-9ed4-724653ece661.json\""}, {"arg_name": "function_args", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "[{\"name\":\"Vehicle_Count_From_Email\",\"data_type\":\"FIELD\",\"value\":\"Vehicle_Count_From_Email\"},{\"name\":\"Vehicle_Count_From_Table\",\"data_type\":\"FIELD\",\"value\":\"Vehicle_Count_From_Table\"}]"}, {"arg_name": "lambda_udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "doc_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"17091\""}, {"arg_name": "code_arg", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"\\n\\ndef get_count_of_notifiable_vehicles(Vehicle_Count_From_Email, Vehicle_Count_From_Table, context = {}, keys = {}, **kwargs):\\n\\t# try:\\n\\t#     Vehicle_Count_From_Email = int(Vehicle_Count_From_Email)\\n\\t#     return Vehicle_Count_From_Email\\n\\t# except:\\n\\ttry:\\n\\t    Vehicle_Count_From_Table = int(Vehicle_Count_From_Table)\\n\\t    return Vehicle_Count_From_Table\\n\\texcept:\\n\\t    return 0\""}, {"arg_name": "fn_name", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"get_count_of_notifiable_vehicles\""}, {"arg_name": "args", "arg_type": "VAR_POSITIONAL", "data_type": "LIST", "value": "[{\"data_type\":\"FIELD\",\"value\":\"Vehicle_Count_From_Email\"},{\"data_type\":\"FIELD\",\"value\":\"Vehicle_Count_From_Table\"}]"}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{\"metrics_params\": {\"data_type\": \"DICT\", \"value\": \"{\\\"source_id\\\": \\\"Unknown\\\", \\\"source_type\\\": \\\"App\\\", \\\"user_agent\\\": \\\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36\\\"}\"}}"}], "output_type": "TEXT"}]}, {"label": "Offering_Type", "lines": [{"function_id": {"name": "run_udf_in_lambda_v2", "source": "NATIVE"}, "inputs": [{"arg_name": "absolute_scripts_path", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"axauk/dev-si-fleet/fs/Instabase Drive/aihub/0198ef37-d998-7864-878d-539c9c7ddd98/project/modules/scripts/REFINER/9ac456f9-1563-4d49-8f5f-5543854cd807.json\""}, {"arg_name": "function_args", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "[{\"name\":\"Number_of_Notifiable_Vehicles\",\"data_type\":\"FIELD\",\"value\":\"Vehicle_Count_From_Table\"},{\"name\":\"Target_Price\",\"data_type\":\"FIELD\",\"value\":\"Target_Price\"}]"}, {"arg_name": "lambda_udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "doc_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"17087\""}, {"arg_name": "code_arg", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"\\n\\ndef get_offering_type(Number_of_Notifiable_Vehicles, Target_Price, context = {}, keys = {}, **kwargs):\\n\\t# def clean_premium(premium_value):\\n\\t#     if premium_value is None:\\n\\t#         return None\\n\\t#     if isinstance(premium_value, (int, float)):\\n\\t#         return float(premium_value)\\n\\t#     try:\\n\\t#         # Remove currency symbols, commas, and whitespace\\n\\t#         # print(premium_value)\\n\\t#         # cleaned = re.sub(r\\\"[\\u00a3\\u20ac,]\\\", \\\"\\\", premium_value).strip()\\n\\t#         cleaned = premium_value.replace('\\u00a3','').replace('\\u20ac','').replace(' ', '').replace(',', '').strip()\\n\\t#         print(cleaned)\\n\\t#         return float(cleaned)\\n\\t#     except Exception:\\n\\t#         return None\\n\\t# def determine_offering_type(vehicle_count, premium_cleaned=None):\\n\\t#     if vehicle_count is None:\\n\\t#         return \\\"\\\"\\n\\t#     if vehicle_count <= 19:\\n\\t#         if premium_cleaned is None or premium_cleaned < 10000:\\n\\t#             return \\\"Mini Fleet\\\"\\n\\t#     elif 20 <= vehicle_count <= 149:\\n\\t#         if premium_cleaned is None or 10000 <= premium_cleaned < 250000:\\n\\t#             # print(\\\"yes\\\")\\n\\t#             return \\\"Vantage Fleet\\\"\\n\\t#     elif vehicle_count >= 150:\\n\\t#         if premium_cleaned is None or premium_cleaned >= 250000:\\n\\t#             return \\\"Mid Corp\\\"\\n\\t#     return \\\"None\\\"\\n\\t# try:\\n\\t#     Number_of_Notifiable_Vehicles = int(Number_of_Notifiable_Vehicles)\\n\\t# except:\\n\\t#     return \\\"None\\\"\\n\\t# try:\\n\\t#     premium_cleaned = clean_premium(Target_Price)\\n\\t#     print(premium_cleaned)\\n\\t# except:\\n\\t#     premium_cleaned = None\\n\\t\\n\\t# offering_type = determine_offering_type( Number_of_Notifiable_Vehicles, premium_cleaned )\\n\\t# return offering_type\\n\\t\\n\\t\\n\\tdef clean_premium(premium_value):\\n\\t    if premium_value is None:\\n\\t        return None\\n\\t    if isinstance(premium_value, (int, float)):\\n\\t        return float(premium_value)\\n\\t    try:\\n\\t        # Remove currency symbols, commas, and whitespace\\n\\t        # print(premium_value)\\n\\t        # cleaned = re.sub(r\\\"[\\u00a3\\u20ac,]\\\", \\\"\\\", premium_value).strip()\\n\\t        cleaned = premium_value.replace('\\u00a3','').replace('\\u20ac','').replace(' ', '').replace(',', '').strip()\\n\\t        print(cleaned)\\n\\t        return float(cleaned)\\n\\t    except Exception:\\n\\t        return None\\n\\t\\n\\tdef determine_offering_type(vehicle_count, premium_cleaned=None):    \\n\\t\\n\\t    if vehicle_count == 0:\\n\\t        if premium_cleaned is None or premium_cleaned < 10000:\\n\\t            return \\\"Mini Fleet\\\"\\n\\t        \\n\\t        elif 10000 <= premium_cleaned < 250000:\\n\\t            return \\\"Vantage Fleet\\\"\\n\\t        \\n\\t        elif premium_cleaned >= 250000:\\n\\t            return \\\"Mid Corp\\\"\\n\\t\\n\\t    if vehicle_count <= 19:\\n\\t            return \\\"Mini Fleet\\\"\\n\\t            \\n\\t    elif 20 <= vehicle_count <= 149:\\n\\t            return \\\"Vantage Fleet\\\"\\n\\t        \\n\\t    elif vehicle_count >= 150:\\n\\t            return \\\"Mid Corp\\\"\\n\\t\\n\\t\\n\\ttry:\\n\\t    Number_of_Notifiable_Vehicles = int(Number_of_Notifiable_Vehicles)\\n\\texcept:\\n\\t    Number_of_Notifiable_Vehicles = 0\\n\\t\\n\\ttry:\\n\\t    premium_cleaned = clean_premium(Target_Price)\\n\\texcept:\\n\\t    premium_cleaned = None\\n\\t\\n\\toffering_type = determine_offering_type( Number_of_Notifiable_Vehicles, premium_cleaned )\\n\\treturn offering_type\""}, {"arg_name": "fn_name", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"get_offering_type\""}, {"arg_name": "args", "arg_type": "VAR_POSITIONAL", "data_type": "LIST", "value": "[{\"data_type\":\"FIELD\",\"value\":\"Vehicle_Count_From_Table\"},{\"data_type\":\"FIELD\",\"value\":\"Target_Price\"}]"}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{\"metrics_params\": {\"data_type\": \"DICT\", \"value\": \"{\\\"source_id\\\": \\\"Unknown\\\", \\\"source_type\\\": \\\"App\\\", \\\"user_agent\\\": \\\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36\\\"}\"}}"}], "output_type": "TEXT"}]}, {"label": "Agency_Code", "lines": [{"function_id": {"name": "get_extracted_field_value", "source": "NATIVE"}, "inputs": [{"arg_name": "fields", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "FIELD", "data_type_options": ["TEXT"], "value": "__model_result"}, {"arg_name": "field", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "\"Agency_Code\""}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{}"}], "output_type": "TEXT"}, {"function_id": {"name": "refine_field_v2", "source": "NATIVE"}, "inputs": [{"arg_name": "prompt", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"From the extracted text, return only the clean **Agency Code**.\\n\\nIf no Agency Code is found, return \\\"\\\"\""}, {"arg_name": "metrics_params", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "{\"source_id\": \"Unknown\", \"source_type\": \"App\", \"user_agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36\"}"}, {"arg_name": "proj_uuid", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"0198ef37-d998-7864-878d-539c9c7ddd98\""}, {"arg_name": "cached_index", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "custom_request", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "{\"enable_map_reduce_extraction\": true, \"feature_flag_overrides\": {\"enable_dummy_feature_c\": true, \"enable_aihub_secret_manager\": true, \"aihub_enable_classification_validation\": true, \"enable_slas\": true, \"enable_advanced_apps\": true, \"aihub_enable_ocr_confidence_validation\": true, \"enable_text_view_in_converse\": true, \"enable_repo_roles\": true, \"enable_deployment_dashboard\": true, \"enable_multi_step_lite\": true, \"enable_runtime_configuration\": true, \"enable_upgrade_in_progress_banner\": true, \"enable_aihub_review_queues\": true, \"enable_aihub_stp_options\": true, \"aihub_enable_native_excel_processing\": true, \"aihub_enable_reasoning_prompt_suggestion\": true, \"enable_email_integration_data_source\": true, \"enable_aihub_saml_mapping\": true, \"enable_review_dashboard\": true, \"aihub_enable_search_history\": true, \"enable_aihub_deployment_notifications\": true, \"aihub_enable_vision_reasoning\": true, \"aihub_enable_migrate_project\": true, \"enable_app_ux_refresh\": true, \"enable_splitter_instructions\": true, \"enterprise_advanced_ocr\": true, \"aihub_enable_manual_app_ibllm_updates\": true, \"aihub_enable_customize_app\": true, \"enable_discourse_community_forum\": true, \"aihub_enable_app_run_gt_sets\": true, \"aihub_enable_navbar_redesign\": true, \"aihub_enable_extended_ai_runtime_expiration\": true, \"aihub_enable_build_split_by_page\": true, \"aihub_enable_search_in_navbar\": true, \"aihub_enable_build_moderation\": true, \"enable_upgrade_expired_apps\": true, \"aihub_enable_sdlc_workspaces\": true, \"enable_decoupled_chatbots\": true, \"aihub_enable_linked_deployments\": true, \"enable_extraction_value_normalization\": true, \"enable_fine_grain_usage_data\": true, \"enable_original_llm_limits\": true, \"enable_passing_class_names_to_splitter\": true, \"enable_search_acl_ui_v2\": true, \"enable_multistep_build\": true}, \"udf_id\": null, \"confidence_for_reasoning\": true}"}, {"arg_name": "doc_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "data_type", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"TEXT\""}, {"arg_name": "previous_line", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LINE", "data_type_options": ["TEXT"], "value": "Agency_Code@0"}, {"arg_name": "prompt_arg_names", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[]"}, {"arg_name": "prompt_arg_vals", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[]"}, {"arg_name": "prompt_arg_data_types", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[]"}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{}"}], "output_type": "TEXT"}]}, {"label": "Main_Cover_Type_Mapped", "lines": [{"function_id": {"name": "refine_field_v2", "source": "NATIVE"}, "inputs": [{"arg_name": "prompt", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"Main_cover_type : {{ \\\\ Main Cover Type \\\\ }}\\n\\nValid Normalized Types:\\n\\n1) COMP \\u2192 includes: \\\"Comp\\\", \\\"COMP\\\", \\\"Comprehensive\\\", \\\"Comprehensive Cover\\\"\\n\\n2) TPFT \\u2192 includes: \\\"TPFT\\\", \\\"Third Party Fire and Theft\\\", \\\"Third Party, Fire and Theft\\\", \\\"Third Party Fire &amp; Theft\\\"\\n\\n3) TPO \\u2192 includes: \\\"TPO\\\", \\\"Third Party Only\\\", \\\"Third Party\\\"\\n\\n4) Laid up (ADFT) \\u2192 includes: \\\"Laid Up (Accidental Damage, Fire, and Theft)\\\", \\\"Laid Up ADFT\\\", \\\"Laid-Up ADFT\\\"\\n\\n5) Laid up (FT Only) \\u2192 includes: \\\"Laid Up (Fire and Theft)\\\", \\\"LUFT\\\", \\\"Laid-Up FT\\\"\\n\\nInstructions:\\n\\nMatch the Main_cover_type with the above Valid Normalized types (case-insensitive, ignore minor formatting differences).\\n\\nIf matched, return the normalized type exactly as listed above.\\n\\nIf no valid match, return \\\"\\\".\""}, {"arg_name": "metrics_params", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "{\"source_id\": \"Unknown\", \"source_type\": \"App\", \"user_agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36\"}"}, {"arg_name": "proj_uuid", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"0198ef37-d998-7864-878d-539c9c7ddd98\""}, {"arg_name": "cached_index", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "custom_request", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "{\"enable_map_reduce_extraction\": true, \"feature_flag_overrides\": {\"enable_dummy_feature_c\": true, \"enable_aihub_secret_manager\": true, \"aihub_enable_classification_validation\": true, \"enable_slas\": true, \"enable_advanced_apps\": true, \"aihub_enable_ocr_confidence_validation\": true, \"enable_text_view_in_converse\": true, \"enable_repo_roles\": true, \"enable_deployment_dashboard\": true, \"enable_multi_step_lite\": true, \"enable_runtime_configuration\": true, \"enable_upgrade_in_progress_banner\": true, \"enable_aihub_review_queues\": true, \"enable_aihub_stp_options\": true, \"aihub_enable_native_excel_processing\": true, \"aihub_enable_reasoning_prompt_suggestion\": true, \"enable_email_integration_data_source\": true, \"enable_aihub_saml_mapping\": true, \"enable_review_dashboard\": true, \"aihub_enable_search_history\": true, \"enable_aihub_deployment_notifications\": true, \"aihub_enable_vision_reasoning\": true, \"aihub_enable_migrate_project\": true, \"enable_app_ux_refresh\": true, \"enable_splitter_instructions\": true, \"enterprise_advanced_ocr\": true, \"aihub_enable_manual_app_ibllm_updates\": true, \"aihub_enable_customize_app\": true, \"enable_discourse_community_forum\": true, \"aihub_enable_app_run_gt_sets\": true, \"aihub_enable_navbar_redesign\": true, \"aihub_enable_extended_ai_runtime_expiration\": true, \"aihub_enable_build_split_by_page\": true, \"aihub_enable_search_in_navbar\": true, \"aihub_enable_build_moderation\": true, \"enable_upgrade_expired_apps\": true, \"aihub_enable_sdlc_workspaces\": true, \"enable_decoupled_chatbots\": true, \"aihub_enable_linked_deployments\": true, \"enable_extraction_value_normalization\": true, \"enable_fine_grain_usage_data\": true, \"enable_original_llm_limits\": true, \"enable_passing_class_names_to_splitter\": true, \"enable_search_acl_ui_v2\": true, \"enable_multistep_build\": true}, \"udf_id\": null, \"confidence_for_reasoning\": true}"}, {"arg_name": "doc_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "data_type", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"TEXT\""}, {"arg_name": "previous_line", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "prompt_arg_names", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[{\"data_type\": \"ANY\", \"value\": \"\\\"Main_Cover_Type\\\"\"}]"}, {"arg_name": "prompt_arg_vals", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[{\"data_type\": \"FIELD\", \"value\": \"Main_Cover_Type\"}]"}, {"arg_name": "prompt_arg_data_types", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[{\"data_type\": \"ANY\", \"value\": \"\\\"TEXT\\\"\"}]"}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{}"}], "output_type": "TEXT"}, {"function_id": {"name": "run_udf_in_lambda_v2", "source": "NATIVE"}, "inputs": [{"arg_name": "absolute_scripts_path", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"axauk/dev-si-fleet/fs/Instabase Drive/aihub/0198ef37-d998-7864-878d-539c9c7ddd98/project/modules/scripts/REFINER/b356ad3c-7cd6-40e2-a27a-a4330cfa29e6.json\""}, {"arg_name": "function_args", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "[{\"name\":\"previous_line\",\"data_type\":\"LINE\",\"value\":\"Main_Cover_Type_Mapped@0\"}]"}, {"arg_name": "lambda_udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "doc_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"17092\""}, {"arg_name": "code_arg", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"\\n\\ndef check_cover_type_mapped(previous_line, context = {}, keys = {}, **kwargs):\\n\\t# Import Python packages\\n\\t# import json\\n\\t\\n\\t# Log statements using print()\\n\\t# print(\\\"This will appear in the logs\\\")\\n\\t\\n\\t# Return the cleaned output\\n\\t# return previous_line\\n\\t\\n\\tdef contains_only_quotes(s):\\n\\t  return all(c in {'\\\"', \\\"'\\\"} for c in s)\\n\\t\\n\\tprevious_line = previous_line.strip()\\n\\tif previous_line:\\n\\t  if contains_only_quotes(previous_line):\\n\\t    print('1')\\n\\t    return 'COMP'\\n\\t  else :\\n\\t    print('2')\\n\\t    return previous_line\\n\\tprint('3')\\n\\treturn 'COMP'\""}, {"arg_name": "fn_name", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"check_cover_type_mapped\""}, {"arg_name": "args", "arg_type": "VAR_POSITIONAL", "data_type": "LIST", "value": "[{\"data_type\":\"LINE\",\"value\":\"Main_Cover_Type_Mapped@0\"}]"}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{}"}], "output_type": "TEXT"}]}, {"label": "Party_Address_Details", "lines": [{"function_id": {"name": "refine_field_v2", "source": "NATIVE"}, "inputs": [{"arg_name": "prompt", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"You are an intelligent address extraction assistant.\\n\\nGiven a full address string {{ \\\\ Party Address \\\\}}, extract the following components:\\nAddress Line 1: Only the building number/name and street/road name. (Exclude landmarks, estates, zones, or locality info.)\\nAddress Line 2: Estate, locality, landmark, or additional location detail\\nAddress Line 3: Optional detail like block, zone, village, or area\\nCity: Town or city name\\nState: The state, province, or region\\nCountry: Country name\\nPostcode: postal code (UK format)\\n\\nExtraction Rules:\\nDo not merge unrelated fields across lines\\nDo not confuse postcode with city/state.\\nReturn empty strings if any field is missing for that component \\n{\\n  \\\"Address Line 1\\\": \\\"\\\",\\n  \\\"Address Line 2\\\": \\\"\\\",\\n  \\\"Address Line 3\\\": \\\"\\\",\\n  \\\"City\\\": \\\"\\\",\\n  \\\"State\\\": \\\"\\\",\\n  \\\"Country\\\": \\\"\\\",\\n  \\\"Postcode\\\": \\\"\\\"\\n}\""}, {"arg_name": "metrics_params", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "{\"source_id\": \"Unknown\", \"source_type\": \"App\", \"user_agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36\"}"}, {"arg_name": "proj_uuid", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"0198ef37-d998-7864-878d-539c9c7ddd98\""}, {"arg_name": "cached_index", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "custom_request", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "{\"enable_map_reduce_extraction\": true, \"feature_flag_overrides\": {\"enable_dummy_feature_c\": true, \"enable_aihub_secret_manager\": true, \"aihub_enable_classification_validation\": true, \"enable_slas\": true, \"enable_advanced_apps\": true, \"aihub_enable_ocr_confidence_validation\": true, \"enable_text_view_in_converse\": true, \"enable_repo_roles\": true, \"enable_deployment_dashboard\": true, \"enable_multi_step_lite\": true, \"enable_runtime_configuration\": true, \"enable_upgrade_in_progress_banner\": true, \"enable_aihub_review_queues\": true, \"enable_aihub_stp_options\": true, \"aihub_enable_native_excel_processing\": true, \"aihub_enable_reasoning_prompt_suggestion\": true, \"enable_email_integration_data_source\": true, \"enable_aihub_saml_mapping\": true, \"enable_review_dashboard\": true, \"aihub_enable_search_history\": true, \"enable_aihub_deployment_notifications\": true, \"aihub_enable_vision_reasoning\": true, \"aihub_enable_migrate_project\": true, \"enable_app_ux_refresh\": true, \"enable_splitter_instructions\": true, \"enterprise_advanced_ocr\": true, \"aihub_enable_manual_app_ibllm_updates\": true, \"aihub_enable_customize_app\": true, \"enable_discourse_community_forum\": true, \"aihub_enable_app_run_gt_sets\": true, \"aihub_enable_navbar_redesign\": true, \"aihub_enable_extended_ai_runtime_expiration\": true, \"aihub_enable_build_split_by_page\": true, \"aihub_enable_search_in_navbar\": true, \"aihub_enable_build_moderation\": true, \"enable_upgrade_expired_apps\": true, \"aihub_enable_sdlc_workspaces\": true, \"enable_decoupled_chatbots\": true, \"aihub_enable_linked_deployments\": true, \"enable_extraction_value_normalization\": true, \"enable_fine_grain_usage_data\": true, \"enable_original_llm_limits\": true, \"enable_passing_class_names_to_splitter\": true, \"enable_search_acl_ui_v2\": true, \"enable_multistep_build\": true}, \"udf_id\": null, \"confidence_for_reasoning\": true}"}, {"arg_name": "doc_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "data_type", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"TEXT\""}, {"arg_name": "previous_line", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "prompt_arg_names", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[{\"data_type\": \"ANY\", \"value\": \"\\\"Party_Address\\\"\"}]"}, {"arg_name": "prompt_arg_vals", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[{\"data_type\": \"FIELD\", \"value\": \"Party_Address\"}]"}, {"arg_name": "prompt_arg_data_types", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[{\"data_type\": \"ANY\", \"value\": \"\\\"TEXT\\\"\"}]"}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{}"}], "output_type": "TEXT"}, {"function_id": {"name": "run_udf_in_lambda_v2", "source": "NATIVE"}, "inputs": [{"arg_name": "absolute_scripts_path", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"axauk/dev-si-fleet/fs/Instabase Drive/aihub/0198ef37-d998-7864-878d-539c9c7ddd98/project/modules/scripts/REFINER/6e7fd210-446b-4afe-bc56-e02cd85a4e8d.json\""}, {"arg_name": "function_args", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "[{\"name\":\"previous_line\",\"data_type\":\"LINE\",\"value\":\"Party_Address_Details@0\"}]"}, {"arg_name": "lambda_udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "doc_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"17100\""}, {"arg_name": "code_arg", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"\\n\\ndef clean(previous_line, context = {}, keys = {}, **kwargs):\\n\\timport json\\n\\t\\n\\ttry:\\n\\t  previous_line = eval(previous_line)\\n\\t  # print(type(previous_line))\\n\\texcept:\\n\\t  previous_line = json.loads(previous_line)\\n\\t  # print(type(previous_line))\\n\\t\\n\\treturn previous_line\""}, {"arg_name": "fn_name", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"clean\""}, {"arg_name": "args", "arg_type": "VAR_POSITIONAL", "data_type": "LIST", "value": "[{\"data_type\":\"LINE\",\"value\":\"Party_Address_Details@0\"}]"}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{}"}], "output_type": "TEXT"}]}, {"label": "Party_Address_Line_1", "lines": [{"function_id": {"name": "run_udf_in_lambda_v2", "source": "NATIVE"}, "inputs": [{"arg_name": "absolute_scripts_path", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"axauk/dev-si-fleet/fs/Instabase Drive/aihub/0198ef37-d998-7864-878d-539c9c7ddd98/project/modules/scripts/REFINER/04f3cfb7-6db1-4d5c-8c70-fc286ba57fe6.json\""}, {"arg_name": "function_args", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "[{\"name\":\"Party_Address_Details\",\"data_type\":\"FIELD\",\"value\":\"Party_Address_Details\"}]"}, {"arg_name": "lambda_udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "doc_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"17099\""}, {"arg_name": "code_arg", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"\\n\\ndef get_party_address_line1(Party_Address_Details, context = {}, keys = {}, **kwargs):\\n\\timport json\\n\\t\\n\\tdef get_value(data, key):\\n\\t    if isinstance(data, dict):\\n\\t        return data.get(key, \\\"\\\")\\n\\t    return \\\"\\\"\\n\\t\\n\\ttry:\\n\\t  Party_Address_Details = eval(Party_Address_Details)\\n\\t  # print(type(previous_line))\\n\\texcept:\\n\\t  Party_Address_Details = json.loads(Party_Address_Details)\\n\\t  # print(type(previous_line))\\n\\t\\n\\tval = get_value(Party_Address_Details, \\\"Address Line 1\\\")\\n\\treturn val\""}, {"arg_name": "fn_name", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"get_party_address_line1\""}, {"arg_name": "args", "arg_type": "VAR_POSITIONAL", "data_type": "LIST", "value": "[{\"data_type\":\"FIELD\",\"value\":\"Party_Address_Details\"}]"}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{\"metrics_params\": {\"data_type\": \"DICT\", \"value\": \"{\\\"source_id\\\": \\\"Unknown\\\", \\\"source_type\\\": \\\"App\\\", \\\"user_agent\\\": \\\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36\\\"}\"}}"}], "output_type": "TEXT"}]}, {"label": "Party_Address_Line_2", "lines": [{"function_id": {"name": "run_udf_in_lambda_v2", "source": "NATIVE"}, "inputs": [{"arg_name": "absolute_scripts_path", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"axauk/dev-si-fleet/fs/Instabase Drive/aihub/0198ef37-d998-7864-878d-539c9c7ddd98/project/modules/scripts/REFINER/a0611902-5475-43e4-b576-ae079e9c8fa8.json\""}, {"arg_name": "function_args", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "[{\"name\":\"Party_Address_Line_1\",\"data_type\":\"FIELD\",\"value\":\"Party_Address\"},{\"name\":\"Party_Address_Details\",\"data_type\":\"FIELD\",\"value\":\"Party_Address_Details\"}]"}, {"arg_name": "lambda_udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "doc_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"17093\""}, {"arg_name": "code_arg", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"\\n\\ndef get_address_line(Party_Address_Line_1, Party_Address_Details, context = {}, keys = {}, **kwargs):\\n\\t# # Import Python packages\\n\\t# # import json\\n\\t\\n\\t# # Log statements using print()\\n\\t# # print(\\\"This will appear in the logs\\\")\\n\\t\\n\\t# # Return the cleaned output\\n\\t# # print(previous_line)\\n\\t# # return previous_line\\n\\t# import json\\n\\t# key = \\\"Line_2\\\"\\n\\t# def extract_first_json_object(text):\\n\\t#   start = text.find('{')\\n\\t#   if start == -1:\\n\\t#     return None\\n\\t#   brace_count = 0\\n\\t#   end = None\\n\\t#   for i in range(start,len(text)):\\n\\t#     if text[i] == '{':\\n\\t#       brace_count += 1\\n\\t#     elif text[i] == '}':\\n\\t#       brace_count  -= 1\\n\\t#       if brace_count == 0:\\n\\t#         end = i\\n\\t#         break\\n\\t#   if end is None:\\n\\t#     return None\\n\\t#   return text[start:end+1]\\n\\t\\n\\t# if Party_Address_Line_1:\\n\\t#   json_part = extract_first_json_object(Party_Address_Line_1)\\n\\t#   if json_part is None:\\n\\t#     return None\\n\\t#   try:\\n\\t#     data = json.loads(json_part)\\n\\t#   except json.JSONDecodeError:\\n\\t#     return \\\"Extracted JSON is invalid.\\\"\\n\\t#   if key == \\\"Line_3\\\":\\n\\t#     parts = []\\n\\t#     line3 = data.get(\\\"Line_3\\\")\\n\\t#     if line3:\\n\\t#       parts.append(line3)\\n\\t#     extra = data.get(\\\"Extra_Lines\\\",[])\\n\\t#     if extra and isinstance(extra,list):\\n\\t#       parts.extend(extra)\\n\\t#     return ', '.join(parts) if parts else None\\n\\t#   value = data.get(key)\\n\\t#   return str(value) if value is not None else None\\n\\t# else:\\n\\t#   return None\\n\\t\\n\\t\\n\\timport json\\n\\t\\n\\tdef get_value(data, key):\\n\\t    if isinstance(data, dict):\\n\\t        return data.get(key, \\\"\\\")\\n\\t    return \\\"\\\"\\n\\t\\n\\ttry:\\n\\t  Party_Address_Details = eval(Party_Address_Details)\\n\\t  # print(type(previous_line))\\n\\texcept:\\n\\t  Party_Address_Details = json.loads(Party_Address_Details)\\n\\t  # print(type(previous_line))\\n\\t\\n\\tval = get_value(Party_Address_Details, \\\"Address Line 2\\\")\\n\\treturn val\""}, {"arg_name": "fn_name", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"get_address_line\""}, {"arg_name": "args", "arg_type": "VAR_POSITIONAL", "data_type": "LIST", "value": "[{\"data_type\":\"FIELD\",\"value\":\"Party_Address\"},{\"data_type\":\"FIELD\",\"value\":\"Party_Address_Details\"}]"}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{\"metrics_params\": {\"data_type\": \"DICT\", \"value\": \"{\\\"source_id\\\": \\\"Unknown\\\", \\\"source_type\\\": \\\"App\\\", \\\"user_agent\\\": \\\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36\\\"}\"}}"}], "output_type": "TEXT"}]}, {"label": "Party_Address_Line_3", "lines": [{"function_id": {"name": "run_udf_in_lambda_v2", "source": "NATIVE"}, "inputs": [{"arg_name": "absolute_scripts_path", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"axauk/dev-si-fleet/fs/Instabase Drive/aihub/0198ef37-d998-7864-878d-539c9c7ddd98/project/modules/scripts/REFINER/2872a05c-01c4-4d85-9555-7a41bbb7ed23.json\""}, {"arg_name": "function_args", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "[{\"name\":\"Party_Address_Details\",\"data_type\":\"FIELD\",\"value\":\"Party_Address_Details\"}]"}, {"arg_name": "lambda_udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "doc_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"17094\""}, {"arg_name": "code_arg", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"\\n\\ndef get_address_line3(Party_Address_Details, context = {}, keys = {}, **kwargs):\\n\\timport json\\n\\t\\n\\tdef get_value(data, key):\\n\\t    if isinstance(data, dict):\\n\\t        return data.get(key, \\\"\\\")\\n\\t    return \\\"\\\"\\n\\t\\n\\ttry:\\n\\t  Party_Address_Details = eval(Party_Address_Details)\\n\\t  # print(type(previous_line))\\n\\texcept:\\n\\t  Party_Address_Details = json.loads(Party_Address_Details)\\n\\t  # print(type(previous_line))\\n\\t\\n\\tval = get_value(Party_Address_Details, \\\"Address Line 3\\\")\\n\\treturn val\""}, {"arg_name": "fn_name", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"get_address_line3\""}, {"arg_name": "args", "arg_type": "VAR_POSITIONAL", "data_type": "LIST", "value": "[{\"data_type\":\"FIELD\",\"value\":\"Party_Address_Details\"}]"}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{\"metrics_params\": {\"data_type\": \"DICT\", \"value\": \"{\\\"source_id\\\": \\\"Unknown\\\", \\\"source_type\\\": \\\"App\\\", \\\"user_agent\\\": \\\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36\\\"}\"}}"}], "output_type": "TEXT"}]}, {"label": "Party_Address_Country", "lines": [{"function_id": {"name": "run_udf_in_lambda_v2", "source": "NATIVE"}, "inputs": [{"arg_name": "absolute_scripts_path", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"axauk/dev-si-fleet/fs/Instabase Drive/aihub/0198ef37-d998-7864-878d-539c9c7ddd98/project/modules/scripts/REFINER/da91fe7c-d078-4424-ad28-5b8c526be85e.json\""}, {"arg_name": "function_args", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "[{\"name\":\"Party_Address_Details\",\"data_type\":\"FIELD\",\"value\":\"Party_Address_Details\"}]"}, {"arg_name": "lambda_udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "doc_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"17095\""}, {"arg_name": "code_arg", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"\\n\\ndef get_country(Party_Address_Details, context = {}, keys = {}, **kwargs):\\n\\timport json\\n\\t\\n\\tdef get_value(data, key):\\n\\t    if isinstance(data, dict):\\n\\t        return data.get(key, \\\"\\\")\\n\\t    return \\\"\\\"\\n\\t\\n\\ttry:\\n\\t  Party_Address_Details = eval(Party_Address_Details)\\n\\t  # print(type(previous_line))\\n\\texcept:\\n\\t  Party_Address_Details = json.loads(Party_Address_Details)\\n\\t  # print(type(previous_line))\\n\\t\\n\\tval = get_value(Party_Address_Details, \\\"Country\\\")\\n\\treturn val\""}, {"arg_name": "fn_name", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"get_country\""}, {"arg_name": "args", "arg_type": "VAR_POSITIONAL", "data_type": "LIST", "value": "[{\"data_type\":\"FIELD\",\"value\":\"Party_Address_Details\"}]"}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{\"metrics_params\": {\"data_type\": \"DICT\", \"value\": \"{\\\"source_id\\\": \\\"Unknown\\\", \\\"source_type\\\": \\\"App\\\", \\\"user_agent\\\": \\\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36\\\"}\"}}"}], "output_type": "TEXT"}]}, {"label": "Party_Address_State", "lines": [{"function_id": {"name": "run_udf_in_lambda_v2", "source": "NATIVE"}, "inputs": [{"arg_name": "absolute_scripts_path", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"axauk/dev-si-fleet/fs/Instabase Drive/aihub/0198ef37-d998-7864-878d-539c9c7ddd98/project/modules/scripts/REFINER/e6ae390d-af62-4ed3-8308-3a33890d19f1.json\""}, {"arg_name": "function_args", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "[{\"name\":\"Party_Address_Details\",\"data_type\":\"FIELD\",\"value\":\"Party_Address_Details\"}]"}, {"arg_name": "lambda_udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "doc_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"17096\""}, {"arg_name": "code_arg", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"\\n\\ndef get_state(Party_Address_Details, context = {}, keys = {}, **kwargs):\\n\\timport json\\n\\t\\n\\tdef get_value(data, key):\\n\\t    if isinstance(data, dict):\\n\\t        return data.get(key, \\\"\\\")\\n\\t    return \\\"\\\"\\n\\t\\n\\ttry:\\n\\t  Party_Address_Details = eval(Party_Address_Details)\\n\\t  # print(type(previous_line))\\n\\texcept:\\n\\t  Party_Address_Details = json.loads(Party_Address_Details)\\n\\t  # print(type(previous_line))\\n\\t\\n\\tval = get_value(Party_Address_Details, \\\"State\\\")\\n\\treturn val\""}, {"arg_name": "fn_name", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"get_state\""}, {"arg_name": "args", "arg_type": "VAR_POSITIONAL", "data_type": "LIST", "value": "[{\"data_type\":\"FIELD\",\"value\":\"Party_Address_Details\"}]"}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{\"metrics_params\": {\"data_type\": \"DICT\", \"value\": \"{\\\"source_id\\\": \\\"Unknown\\\", \\\"source_type\\\": \\\"App\\\", \\\"user_agent\\\": \\\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36\\\"}\"}}"}], "output_type": "TEXT"}]}, {"label": "Party_Address_City", "lines": [{"function_id": {"name": "run_udf_in_lambda_v2", "source": "NATIVE"}, "inputs": [{"arg_name": "absolute_scripts_path", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"axauk/dev-si-fleet/fs/Instabase Drive/aihub/0198ef37-d998-7864-878d-539c9c7ddd98/project/modules/scripts/REFINER/a470a09a-6c01-454b-a674-64c42281b931.json\""}, {"arg_name": "function_args", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "[{\"name\":\"Party_Address_Details\",\"data_type\":\"FIELD\",\"value\":\"Party_Address_Details\"}]"}, {"arg_name": "lambda_udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "doc_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"17097\""}, {"arg_name": "code_arg", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"\\n\\ndef get_city(Party_Address_Details, context = {}, keys = {}, **kwargs):\\n\\timport json\\n\\t\\n\\tdef get_value(data, key):\\n\\t    if isinstance(data, dict):\\n\\t        return data.get(key, \\\"\\\")\\n\\t    return \\\"\\\"\\n\\t\\n\\ttry:\\n\\t  Party_Address_Details = eval(Party_Address_Details)\\n\\t  # print(type(previous_line))\\n\\texcept:\\n\\t  Party_Address_Details = json.loads(Party_Address_Details)\\n\\t  # print(type(previous_line))\\n\\t\\n\\tval = get_value(Party_Address_Details, \\\"City\\\")\\n\\treturn val\""}, {"arg_name": "fn_name", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"get_city\""}, {"arg_name": "args", "arg_type": "VAR_POSITIONAL", "data_type": "LIST", "value": "[{\"data_type\":\"FIELD\",\"value\":\"Party_Address_Details\"}]"}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{\"metrics_params\": {\"data_type\": \"DICT\", \"value\": \"{\\\"source_id\\\": \\\"Unknown\\\", \\\"source_type\\\": \\\"App\\\", \\\"user_agent\\\": \\\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36\\\"}\"}}"}], "output_type": "TEXT"}]}, {"label": "Party_Address_Postcode", "lines": [{"function_id": {"name": "run_udf_in_lambda_v2", "source": "NATIVE"}, "inputs": [{"arg_name": "absolute_scripts_path", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"axauk/dev-si-fleet/fs/Instabase Drive/aihub/0198ef37-d998-7864-878d-539c9c7ddd98/project/modules/scripts/REFINER/35f6720a-8023-4f78-ae6e-0a38da9eae2b.json\""}, {"arg_name": "function_args", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "[{\"name\":\"Party_Address_Details\",\"data_type\":\"FIELD\",\"value\":\"Party_Address_Details\"}]"}, {"arg_name": "lambda_udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "doc_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"17098\""}, {"arg_name": "code_arg", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"\\n\\ndef get_postcode(Party_Address_Details, context = {}, keys = {}, **kwargs):\\n\\t# def get_value(data, key):\\n\\t#     if isinstance(data, dict):\\n\\t#         return data.get(key, \\\"\\\")\\n\\t#     return \\\"\\\"\\n\\t\\n\\t# val = get_value(Party_Address_Details, \\\"Postcode\\\")\\n\\t# return val\\n\\t\\n\\timport json\\n\\t\\n\\tdef get_value(data, key):\\n\\t    if isinstance(data, dict):\\n\\t        return data.get(key, \\\"\\\")\\n\\t    return \\\"\\\"\\n\\t\\n\\ttry:\\n\\t  Party_Address_Details = eval(Party_Address_Details)\\n\\t  # print(type(previous_line))\\n\\texcept:\\n\\t  Party_Address_Details = json.loads(Party_Address_Details)\\n\\t  # print(type(previous_line))\\n\\t\\n\\ttry:\\n\\t  val = get_value(Party_Address_Details, \\\"Postcode\\\")\\n\\t  return val\\n\\texcept:\\n\\t  return \\\"\\\"\""}, {"arg_name": "fn_name", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"get_postcode\""}, {"arg_name": "args", "arg_type": "VAR_POSITIONAL", "data_type": "LIST", "value": "[{\"data_type\":\"FIELD\",\"value\":\"Party_Address_Details\"}]"}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{\"metrics_params\": {\"data_type\": \"DICT\", \"value\": \"{\\\"source_id\\\": \\\"Unknown\\\", \\\"source_type\\\": \\\"App\\\", \\\"user_agent\\\": \\\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36\\\"}\"}}"}], "output_type": "TEXT"}]}, {"label": "Trade_Descriptions", "lines": [{"function_id": {"name": "run_udf_in_lambda_v2", "source": "NATIVE"}, "inputs": [{"arg_name": "absolute_scripts_path", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"axauk/dev-si-fleet/fs/Instabase Drive/aihub/0198ef37-d998-7864-878d-539c9c7ddd98/project/modules/scripts/REFINER/39ea008a-bcba-4c28-b258-84860337a9cd.json\""}, {"arg_name": "function_args", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "[]"}, {"arg_name": "lambda_udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "doc_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"17101\""}, {"arg_name": "code_arg", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"\\n\\ndef unnamed_custom_function(context = {}, keys = {}, **kwargs):\\n\\tdata = [\\n\\t  {\\n\\t    \\\"trade\\\": \\\"General Manufacturing\\\",\\n\\t    \\\"aliases\\\": [\\\"steel\\\", \\\"metal\\\", \\\"samples\\\", \\\"manufacturing of glass\\\", \\\"manufacturing of furniture\\\", \\\"manufacturing\\\", \\\"general manufacturing\\\"]\\n\\t  },\\n\\t  {\\n\\t    \\\"trade\\\": \\\"Fleet - Unclassified\\\",\\n\\t    \\\"aliases\\\": []\\n\\t  },\\n\\t  {\\n\\t    \\\"trade\\\": \\\"Contractor\\\",\\n\\t    \\\"aliases\\\": []\\n\\t  },\\n\\t  {\\n\\t    \\\"trade\\\": \\\"Builders\\\",\\n\\t    \\\"aliases\\\": [\\\"Building Contractors\\\", \\\"house builders\\\", \\\"builders\\\"]\\n\\t  },\\n\\t  {\\n\\t    \\\"trade\\\": \\\"Hauliers UK only\\\",\\n\\t    \\\"aliases\\\": [\\\"haulage contractors - uk only\\\", \\\"hauliers uk only\\\"]\\n\\t  },\\n\\t  {\\n\\t    \\\"trade\\\": \\\"Electrician\\\",\\n\\t    \\\"aliases\\\": [\\\"Electrical Contractors\\\", \\\"electrical installation\\\", \\\"electrical testing\\\", \\\"electrician\\\"]\\n\\t  },\\n\\t  {\\n\\t    \\\"trade\\\": \\\"Plumbing & Heating Engineer\\\",\\n\\t    \\\"aliases\\\": [\\\"plumbing & heating contractors\\\", \\\"gas servicing\\\", \\\"boiler maintenance\\\", \\\"plumber\\\", \\\"heating engineer\\\"]\\n\\t  },\\n\\t  {\\n\\t    \\\"trade\\\": \\\"Engineering\\\",\\n\\t    \\\"aliases\\\": [ \\\"engineers\\\", \\\"mechanical engineers\\\", \\\"engineering\\\", \\\"electrical engineers\\\"]\\n\\t  },\\n\\t  {\\n\\t    \\\"trade\\\": \\\"Civil engineering\\\",\\n\\t    \\\"aliases\\\": [\\\"civil engineering\\\"]\\n\\t  },\\n\\t  {\\n\\t    \\\"trade\\\": \\\"Scaffolding Contractors\\\",\\n\\t    \\\"aliases\\\": [\\\"scaffolders\\\", \\\"scaffolding contractors\\\"]\\n\\t  },\\n\\t  {\\n\\t    \\\"trade\\\": \\\"Wholesale (non food and drink)\\\",\\n\\t    \\\"aliases\\\": [\\\"wholesalers of electrical components\\\", \\\"building materials\\\", \\\"wholesale\\\"]\\n\\t  },\\n\\t  {\\n\\t    \\\"trade\\\": \\\"Cleaning Contractors\\\",\\n\\t    \\\"aliases\\\": [\\\"domestic cleaners\\\", \\\"office cleaners\\\", \\\"cleaning contractors\\\"]\\n\\t  },\\n\\t  {\\n\\t    \\\"trade\\\": \\\"Plant Hire\\\",\\n\\t    \\\"aliases\\\": [\\\"plant hire operator\\\"]\\n\\t  },\\n\\t  {\\n\\t    \\\"trade\\\": \\\"Food & Drink Wholesale\\\",\\n\\t    \\\"aliases\\\": [\\\"cash & carry\\\", \\\"beer & wine wholesalers\\\", \\\"food wholesalers\\\"]\\n\\t  },\\n\\t  {\\n\\t    \\\"trade\\\": \\\"Retail (non food and drink)\\\",\\n\\t    \\\"aliases\\\": [\\\"department store\\\", \\\"shopping centre\\\"]\\n\\t  },\\n\\t  {\\n\\t    \\\"trade\\\": \\\"Property Owners\\\",\\n\\t    \\\"aliases\\\": [\\\"landlords\\\", \\\"commercial property owners\\\"]\\n\\t  },\\n\\t  {\\n\\t    \\\"trade\\\": \\\"Telecommunications & IT\\\",\\n\\t    \\\"aliases\\\": [\\\"telecommunications installation\\\", \\\"it installation\\\", \\\"it services\\\"]\\n\\t  },\\n\\t  {\\n\\t    \\\"trade\\\": \\\"Double Glazing\\\",\\n\\t    \\\"aliases\\\": [\\\"double glazing manufacture\\\", \\\"double glazing installation\\\"]\\n\\t  },\\n\\t  {\\n\\t    \\\"trade\\\": \\\"Landscape Gardener\\\",\\n\\t    \\\"aliases\\\": [\\\"gardening\\\", \\\"landscape gardener\\\"]\\n\\t  },\\n\\t  {\\n\\t    \\\"trade\\\": \\\"Other Prof/Sci/Tech\\\",\\n\\t    \\\"aliases\\\": [\\\"laboratory\\\"]\\n\\t  },\\n\\t  {\\n\\t    \\\"trade\\\": \\\"Removal Contractor\\\",\\n\\t    \\\"aliases\\\": [\\\"removals and storage\\\"]\\n\\t  },\\n\\t  {\\n\\t    \\\"trade\\\": \\\"Security and investigation\\\",\\n\\t    \\\"aliases\\\": [\\\"private detectives\\\", \\\"security guarding\\\", \\\"security services\\\"]\\n\\t  },\\n\\t  {\\n\\t    \\\"trade\\\": \\\"Builders Merchant\\\",\\n\\t    \\\"aliases\\\": [\\\"building supplies\\\", \\\"suppliers of aggregates\\\"]\\n\\t  },\\n\\t  {\\n\\t    \\\"trade\\\": \\\"Service Engineers\\\",\\n\\t    \\\"aliases\\\": [\\\"mechanical servicing\\\"]\\n\\t  },\\n\\t  {\\n\\t    \\\"trade\\\": \\\"Asphalters/Pavers/Engineers\\\",\\n\\t    \\\"aliases\\\": [\\\"road maintenance\\\", \\\"road surfacing\\\"]\\n\\t  },\\n\\t  {\\n\\t    \\\"trade\\\": \\\"Flooring and Carpet\\\",\\n\\t    \\\"aliases\\\": [\\\"carpet fitters\\\"]\\n\\t  },\\n\\t  {\\n\\t    \\\"trade\\\": \\\"Leisure Industry\\\",\\n\\t    \\\"aliases\\\": [\\\"nightclub\\\", \\\"pub\\\", \\\"leisure centre\\\", \\\"gym\\\"]\\n\\t  },\\n\\t  {\\n\\t    \\\"trade\\\": \\\"Social Religious or Charitable\\\",\\n\\t    \\\"aliases\\\": [\\\"charity\\\"]\\n\\t  },\\n\\t  {\\n\\t    \\\"trade\\\": \\\"Business Services\\\",\\n\\t    \\\"aliases\\\": [\\\"document storage\\\", \\\"administration\\\", \\\"consultants\\\"]\\n\\t  },\\n\\t  {\\n\\t    \\\"trade\\\": \\\"Food & Drink Services\\\",\\n\\t    \\\"aliases\\\": [\\\"food delivery\\\"]\\n\\t  },\\n\\t  {\\n\\t    \\\"trade\\\": \\\"Food & Drink Retail\\\",\\n\\t    \\\"aliases\\\": [\\\"restaurant\\\", \\\"pub\\\", \\\"takeaway\\\"]\\n\\t  },\\n\\t  {\\n\\t    \\\"trade\\\": \\\"Estate Agent\\\",\\n\\t    \\\"aliases\\\": [\\\"lettings agents\\\", \\\"estate agent\\\"]\\n\\t  },\\n\\t  {\\n\\t    \\\"trade\\\": \\\"Furniture Sale and Manufacture\\\",\\n\\t    \\\"aliases\\\": [\\\"furniture retail\\\", \\\"furniture showroom\\\"]\\n\\t  },\\n\\t  {\\n\\t    \\\"trade\\\": \\\"Leisure (Hotel, clubs & pubs)\\\",\\n\\t    \\\"aliases\\\": []\\n\\t  },\\n\\t  {\\n\\t    \\\"trade\\\": \\\"Shop Fitting\\\",\\n\\t    \\\"aliases\\\": []\\n\\t  },\\n\\t  {\\n\\t    \\\"trade\\\": \\\"NHS Trust\\\",\\n\\t    \\\"aliases\\\": []\\n\\t  },\\n\\t  {\\n\\t    \\\"trade\\\": \\\"Import/Export\\\",\\n\\t    \\\"aliases\\\": [\\\"Import\\\", \\\"Export\\\"]\\n\\t  },\\n\\t  {\\n\\t    \\\"trade\\\": \\\"Catering\\\",\\n\\t    \\\"aliases\\\": [\\\"licensed catering\\\", \\\"unlicensed catering\\\", \\\"outside catering\\\"]\\n\\t  },\\n\\t  {\\n\\t    \\\"trade\\\": \\\"Residential Care\\\",\\n\\t    \\\"aliases\\\": [\\\"care homes\\\", \\\"retirement homes\\\"]\\n\\t  },\\n\\t  {\\n\\t    \\\"trade\\\": \\\"Manufacturing Timber/Furniture\\\",\\n\\t    \\\"aliases\\\": [\\\"joinery\\\"]\\n\\t  },\\n\\t  {\\n\\t    \\\"trade\\\": \\\"Printers and publishers\\\",\\n\\t    \\\"aliases\\\": []\\n\\t  },\\n\\t  {\\n\\t    \\\"trade\\\": \\\"Demolition Contractors\\\",\\n\\t    \\\"aliases\\\": []\\n\\t  },\\n\\t  {\\n\\t    \\\"trade\\\": \\\"Housing Association\\\",\\n\\t    \\\"aliases\\\": []\\n\\t  },\\n\\t  {\\n\\t    \\\"trade\\\": \\\"Timber Merchant\\\",\\n\\t    \\\"aliases\\\": []\\n\\t  },\\n\\t  {\\n\\t    \\\"trade\\\": \\\"Private Ambulance Service\\\",\\n\\t    \\\"aliases\\\": []\\n\\t  },\\n\\t  {\\n\\t    \\\"trade\\\": \\\"Hauliers Overseas\\\",\\n\\t    \\\"aliases\\\": [\\\"haulage contractors - overseas\\\", \\\"hauliers overseas\\\"]\\n\\t  },\\n\\t  {\\n\\t    \\\"trade\\\": \\\"Textiles & Clothing\\\",\\n\\t    \\\"aliases\\\": [\\\"clothing manufacturing\\\", \\\"textile manufacturing\\\", \\\"clothing retail\\\"]\\n\\t  },\\n\\t  {\\n\\t    \\\"trade\\\": \\\"Automotive Industry\\\",\\n\\t    \\\"aliases\\\": [\\\"vehicle manufacturing\\\", \\\"vehicle repairs\\\", \\\"vehicle parts manufacturing\\\", \\\"vehicle parts wholesale\\\"]\\n\\t  },\\n\\t  {\\n\\t    \\\"trade\\\": \\\"Pharmaceutical\\\",\\n\\t    \\\"aliases\\\": [\\\"pharmacy\\\", \\\"medical laboratories\\\"]\\n\\t  },\\n\\t  {\\n\\t    \\\"trade\\\": \\\"Farmer\\\",\\n\\t    \\\"aliases\\\": [\\\"dairy farmers\\\", \\\"arable farmers\\\", \\\"livestock farmers\\\"]\\n\\t  }\\n\\t]\\n\\t\\n\\treturn data\\n\\t\\n\\t\""}, {"arg_name": "fn_name", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"unnamed_custom_function\""}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{\"metrics_params\": {\"data_type\": \"DICT\", \"value\": \"{\\\"source_id\\\": \\\"Unknown\\\", \\\"source_type\\\": \\\"App\\\", \\\"user_agent\\\": \\\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36\\\"}\"}}"}], "output_type": "TEXT"}]}, {"label": "AXA_Trade_Description", "lines": [{"function_id": {"name": "refine_field_v2", "source": "NATIVE"}, "inputs": [{"arg_name": "prompt", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"You are a domain expert in classifying business descriptions.\\n\\nYou are given:\\n\\nTrades_List: { \\\\ Trade Descriptions \\\\} \\nBusiness_Description: { \\\\ Business Description \\\\}\\n\\nInstructions:\\nFor the business description provided:\\nCompare it against both the trade names and their aliases in Trades_List.\\nDetermine the closest and similar matching **trade**.\\nIf no suitable match is found, return \\\"Fleet - Unclassified\\\".\""}, {"arg_name": "metrics_params", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "{\"source_id\": \"Unknown\", \"source_type\": \"App\", \"user_agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36\"}"}, {"arg_name": "proj_uuid", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"0198ef37-d998-7864-878d-539c9c7ddd98\""}, {"arg_name": "cached_index", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "custom_request", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "ANY", "data_type_options": ["TEXT"], "value": "{\"enable_map_reduce_extraction\": true, \"feature_flag_overrides\": {\"enable_dummy_feature_c\": true, \"enable_aihub_secret_manager\": true, \"aihub_enable_classification_validation\": true, \"enable_slas\": true, \"enable_advanced_apps\": true, \"aihub_enable_ocr_confidence_validation\": true, \"enable_text_view_in_converse\": true, \"enable_repo_roles\": true, \"enable_deployment_dashboard\": true, \"enable_multi_step_lite\": true, \"enable_runtime_configuration\": true, \"enable_upgrade_in_progress_banner\": true, \"enable_aihub_review_queues\": true, \"enable_aihub_stp_options\": true, \"aihub_enable_native_excel_processing\": true, \"aihub_enable_reasoning_prompt_suggestion\": true, \"enable_email_integration_data_source\": true, \"enable_aihub_saml_mapping\": true, \"enable_review_dashboard\": true, \"aihub_enable_search_history\": true, \"enable_aihub_deployment_notifications\": true, \"aihub_enable_vision_reasoning\": true, \"aihub_enable_migrate_project\": true, \"enable_app_ux_refresh\": true, \"enable_splitter_instructions\": true, \"enterprise_advanced_ocr\": true, \"aihub_enable_manual_app_ibllm_updates\": true, \"aihub_enable_customize_app\": true, \"enable_discourse_community_forum\": true, \"aihub_enable_app_run_gt_sets\": true, \"aihub_enable_navbar_redesign\": true, \"aihub_enable_extended_ai_runtime_expiration\": true, \"aihub_enable_build_split_by_page\": true, \"aihub_enable_search_in_navbar\": true, \"aihub_enable_build_moderation\": true, \"enable_upgrade_expired_apps\": true, \"aihub_enable_sdlc_workspaces\": true, \"enable_decoupled_chatbots\": true, \"aihub_enable_linked_deployments\": true, \"enable_extraction_value_normalization\": true, \"enable_fine_grain_usage_data\": true, \"enable_original_llm_limits\": true, \"enable_passing_class_names_to_splitter\": true, \"enable_search_acl_ui_v2\": true, \"enable_multistep_build\": true}, \"udf_id\": null, \"confidence_for_reasoning\": true}"}, {"arg_name": "doc_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "data_type", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"TEXT\""}, {"arg_name": "previous_line", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "prompt_arg_names", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[{\"data_type\": \"ANY\", \"value\": \"\\\"Business_Description\\\"\"}, {\"data_type\": \"ANY\", \"value\": \"\\\"Trade_Descriptions\\\"\"}]"}, {"arg_name": "prompt_arg_vals", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[{\"data_type\": \"FIELD\", \"value\": \"Business_Description\"}, {\"data_type\": \"FIELD\", \"value\": \"Trade_Descriptions\"}]"}, {"arg_name": "prompt_arg_data_types", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "LIST", "data_type_options": ["TEXT"], "value": "[{\"data_type\": \"ANY\", \"value\": \"\\\"TEXT\\\"\"}, {\"data_type\": \"ANY\", \"value\": \"\\\"TEXT\\\"\"}]"}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{}"}], "output_type": "TEXT"}, {"function_id": {"name": "run_udf_in_lambda_v2", "source": "NATIVE"}, "inputs": [{"arg_name": "absolute_scripts_path", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"axauk/dev-si-fleet/fs/Instabase Drive/aihub/0198ef37-d998-7864-878d-539c9c7ddd98/project/modules/scripts/REFINER/dc8966b8-e421-4058-8580-f5182c14ab3e.json\""}, {"arg_name": "function_args", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "[{\"name\":\"previous_line\",\"data_type\":\"LINE\",\"value\":\"AXA_Trade_Description@0\"},{\"name\":\"Business_Description\",\"data_type\":\"FIELD\",\"value\":\"Business_Description\"}]"}, {"arg_name": "lambda_udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "doc_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"17102\""}, {"arg_name": "code_arg", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"\\n\\ndef clean(previous_line, Business_Description, context = {}, keys = {}, **kwargs):\\n\\tif Business_Description:\\n\\t  if Business_Description == \\\"\\\":\\n\\t      return \\\"\\\"\\n\\t  else:\\n\\t      return previous_line\\n\\telse:\\n\\t    return \\\"\\\"\""}, {"arg_name": "fn_name", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"clean\""}, {"arg_name": "args", "arg_type": "VAR_POSITIONAL", "data_type": "LIST", "value": "[{\"data_type\":\"LINE\",\"value\":\"AXA_Trade_Description@0\"},{\"data_type\":\"FIELD\",\"value\":\"Business_Description\"}]"}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{}"}], "output_type": "TEXT"}, {"function_id": {"name": "run_udf_in_lambda_v2", "source": "NATIVE"}, "inputs": [{"arg_name": "absolute_scripts_path", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"axauk/dev-si-fleet/fs/Instabase Drive/aihub/0198ef37-d998-7864-878d-539c9c7ddd98/project/modules/scripts/REFINER/88663633-36e9-4162-9a4d-3ab3da40d272.json\""}, {"arg_name": "function_args", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "[{\"name\":\"previous_line\",\"data_type\":\"LINE\",\"value\":\"AXA_Trade_Description@1\"},{\"name\":\"Trade_Descriptions\",\"data_type\":\"FIELD\",\"value\":\"Trade_Descriptions\"}]"}, {"arg_name": "lambda_udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "doc_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "null", "default": "null"}, {"arg_name": "udf_id", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"17103\""}, {"arg_name": "code_arg", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"\\n\\ndef test_wih_exisitng_list(previous_line, Trade_Descriptions, context = {}, keys = {}, **kwargs):\\n\\t# Import Python packages\\n\\timport json\\n\\t\\n\\t\\n\\t\\n\\t# try:\\n\\t#   Trade_Descriptions = eval(Trade_Descriptions)\\n\\t# except:\\n\\t#   try:\\n\\t#       Trade_Descriptions = json.loads(Trade_Descriptions)\\n\\t#   except:\\n\\t#       # return \\\"Fleet - Unclassified\\\"\\n\\t#       return \\\"Other\\\"\\n\\t\\n\\t# # Trade_Descriptions_ls = [item.lower() for item in Trade_Descriptions]\\n\\t\\n\\t# Trade_Descriptions_ls = [item[\\\"trade\\\"].lower() for item in Trade_Descriptions]\\n\\t\\n\\t# if previous_line.lower() in Trade_Descriptions_ls:\\n\\t#   return previous_line\\n\\t# else:\\n\\t#   return \\\"Other\\\"\\n\\t\\n\\tprint(repr(previous_line))\\n\\tif previous_line == '\\\"\\\"' or previous_line == '' or previous_line == \\\"\\\":\\n\\t    return \\\"\\\"\\n\\t\\n\\tif previous_line:\\n\\t  try:\\n\\t      Trade_Descriptions = eval(Trade_Descriptions)\\n\\t  except:\\n\\t      try:\\n\\t          Trade_Descriptions = json.loads(Trade_Descriptions)\\n\\t      except:\\n\\t          # return \\\"Fleet - Unclassified\\\"\\n\\t          return \\\"Fleet - Unclassified\\\"\\n\\t\\n\\t  Trade_Descriptions_ls = [item[\\\"trade\\\"].lower() for item in Trade_Descriptions]\\n\\t    \\n\\t  if previous_line.lower() in Trade_Descriptions_ls:\\n\\t    return previous_line\\n\\t  else:\\n\\t    return \\\"Fleet - Unclassified\\\"\\n\\telse:\\n\\t  return \\\"\\\"\""}, {"arg_name": "fn_name", "arg_type": "POSITIONAL_OR_KEYWORD", "data_type": "TEXT", "data_type_options": ["TEXT"], "value": "\"test_wih_exisitng_list\""}, {"arg_name": "args", "arg_type": "VAR_POSITIONAL", "data_type": "LIST", "value": "[{\"data_type\":\"LINE\",\"value\":\"AXA_Trade_Description@1\"},{\"data_type\":\"FIELD\",\"value\":\"Trade_Descriptions\"}]"}, {"arg_name": "kwargs", "arg_type": "VAR_KEYWORD", "data_type": "DICT", "data_type_options": ["DICT"], "value": "{}"}], "output_type": "TEXT"}]}]}