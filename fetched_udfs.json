{
    "8303": {
        "args": [],
        "code": "\treturn None",
        "docstring": null,
        "lambda_end_of_life": null,
        "lambda_id": "11",
        "lambda_udf_id": "v1:AWS_LAMBDA:3208694765:insaprd-use2-aihub-prd-docker-default-udf:10",
        "last_updated_at": "1744114058000",
        "name": "unnamed_custom_function",
        "udf_type": "VALIDATIONS"
    },
    "8304": {
        "args": [
            {
                "data_type": "FIELD",
                "name": "Lease_rentable_area",
                "value": "Lease rentable area"
            }
        ],
        "code": "    import re\n    match = re.search('(\\\\d+(\\\\.\\\\d+)?)\\\\s*(sqm|square meters)', Lease_rentable_area, re.IGNORECASE)\n    if match:\n        area = float(match.group(1))\n        if area <= 150:\n            return 'Lease rentable area must be over 150 sqm.'\n    else:\n        return 'Lease rentable area is not explicitly mentioned in the provided document chunk.'\n    return None",
        "docstring": null,
        "lambda_end_of_life": null,
        "lambda_id": "11",
        "lambda_udf_id": "v1:AWS_LAMBDA:8206037779:insaprd-use2-aihub-prd-docker-default-udf:10",
        "last_updated_at": "1744114058000",
        "name": "validate_lease_rentable_area",
        "udf_type": "VALIDATIONS"
    },
    "8305": {
        "args": [
            {
                "data_type": "FIELD",
                "name": "Lease_rentable_area",
                "value": "Lease rentable area"
            }
        ],
        "code": "\t# Import Python packages\n\t# import json\n\t\n\t# Log statements using print()\n\t# print(\"This will appear in the logs\")\n\t\n\tif Lease_rentable_area:\n\t\t# Return None to indicate validation passed\n\t\treturn None\n\telse:\n\t\t# Return a string to indicate validation failed\n\t\treturn \"Error: Lease_rentable_area is empty\"",
        "docstring": null,
        "lambda_end_of_life": null,
        "lambda_id": "11",
        "lambda_udf_id": "v1:AWS_LAMBDA:2110582794:insaprd-use2-aihub-prd-docker-default-udf:10",
        "last_updated_at": "1744114058000",
        "name": "unnamed_custom_function",
        "udf_type": "VALIDATIONS"
    },
    "8306": {
        "args": [
            {
                "data_type": "FIELD",
                "name": "Lease_rentable_area",
                "value": "Lease rentable area"
            }
        ],
        "code": "    import re\n    match = re.search('(\\\\d+(\\\\.\\\\d+)?)\\\\s*(sqm|square meters)', Lease_rentable_area, re.IGNORECASE)\n    if match:\n        area = float(match.group(1))\n        if area < 150:\n            return 'Lease rentable area must be at least 150 square meters.'\n    else:\n        return 'Lease rentable area is not explicitly mentioned in the provided document chunk.'\n    return None",
        "docstring": null,
        "lambda_end_of_life": null,
        "lambda_id": "11",
        "lambda_udf_id": "v1:AWS_LAMBDA:4779556377:insaprd-use2-aihub-prd-docker-default-udf:10",
        "last_updated_at": "1744114058000",
        "name": "validate_lease_rentable_area",
        "udf_type": "VALIDATIONS"
    },
    "8307": {
        "args": [
            {
                "data_type": "FIELD",
                "name": "Lease_Expiration_Date",
                "value": "Lease Expiration Date"
            }
        ],
        "code": "\t# Import Python packages\n\t# import json\n\t\n\t# Log statements using print()\n\t# print(\"This will appear in the logs\")\n\t\n\tif Lease_Expiration_Date:\n\t\t# Return None to indicate validation passed\n\t\treturn none\n\telse:\n\t\t# Return a string to indicate validation failed\n\t\treturn \"Error: Lease_Expiration_Date is empty\"",
        "docstring": null,
        "lambda_end_of_life": null,
        "lambda_id": "11",
        "lambda_udf_id": "v1:AWS_LAMBDA:3701840986:insaprd-use2-aihub-prd-docker-default-udf:10",
        "last_updated_at": "1744114058000",
        "name": "unnamed_custom_function",
        "udf_type": "VALIDATIONS"
    },
    "8308": {
        "args": [
            {
                "data_type": "FIELD",
                "name": "Lease_Expiration_Date",
                "value": "Lease Expiration Date"
            }
        ],
        "code": "    import dateparser\n    import datetime\n    expiration_date = dateparser.parse(Lease_Expiration_Date)\n    if expiration_date is None:\n        return \"Invalid date format for 'Lease Expiration Date'.\"\n    cutoff_date = datetime.datetime(2026, 1, 1)\n    if expiration_date >= cutoff_date:\n        return \"'Lease Expiration Date' must be before 2026.\"\n    return None",
        "docstring": null,
        "lambda_end_of_life": null,
        "lambda_id": "11",
        "lambda_udf_id": "v1:AWS_LAMBDA:1686289388:insaprd-use2-aihub-prd-docker-default-udf:10",
        "last_updated_at": "1744114058000",
        "name": "validate_lease_expiration_date",
        "udf_type": "VALIDATIONS"
    },
    "8309": {
        "args": [
            {
                "data_type": "FIELD",
                "name": "Lease_Expiration_Date",
                "value": "Lease Expiration Date"
            }
        ],
        "code": "    import dateparser\n    from datetime import datetime, timedelta\n    parsed_date = dateparser.parse(Lease_Expiration_Date)\n    if not parsed_date:\n        return \"Invalid date format in 'Lease Expiration Date'.\"\n    three_months_from_now = datetime.now() + timedelta(days=90)\n    if parsed_date <= three_months_from_now:\n        return \"'Lease Expiration Date' must be more than 3 months from today.\"\n    return None",
        "docstring": null,
        "lambda_end_of_life": null,
        "lambda_id": "11",
        "lambda_udf_id": "v1:AWS_LAMBDA:1801318206:insaprd-use2-aihub-prd-docker-default-udf:10",
        "last_updated_at": "1744114058000",
        "name": "validate_lease_expiration_date",
        "udf_type": "VALIDATIONS"
    },
    "8310": {
        "args": [
            {
                "data_type": "FIELD",
                "name": "Lease_Expiration_Date",
                "value": "Lease Expiration Date"
            }
        ],
        "code": "\t# Import Python packages\n\t# import json\n\tfrom datetime import datetime, timedelta\n\t# Log statements using print()\n\t# print(\"This will appear in the logs\")\n\tdatee =\"03/01/2024\"\n\t\n\tprint(type(Lease_Expiration_Date))\n\tprint(datee)\n\tprint(type(datee))\n\tif not Lease_Expiration_Date:\n\t\tprint(\"Error: Lease_Expiration_Date is empty\")\n\t\treturn \"Error: Lease_Expiration_Date is empty\"\n\ttry:\n\t\t  # Directly parse the date in DD/MM/YYYY format and convert to date object\n\t\tlease_date = datetime.strptime(Lease_Expiration_Date, \"%d/%m/%Y\")\n\t\tprint(f\"Parsed lease date: {lease_date}\")\n\texcept ValueError as e:\n\t\tprint(f\"Error: Invalid date format. Use DD/MM/YYYY. Received: {Lease_Expiration_Date}\")\n\t\treturn f\"Error: Invalid date format. Use DD/MM/YYYY. Received: {Lease_Expiration_Date}\"\n\t\n\ttoday = datetime.today()\n\tthree_months_from_now = today + timedelta(days=90)\n\tprint(f\"Today's date: {today}\")\n\tprint(f\"Three months from now: {three_months_from_now}\")\n\t\n\tif lease_date < today:\n\t\tprint(\"Alert: Lease expiration date has passed!\")\n\t\treturn \"Alert: Lease expiration date has passed!\"\n\telif lease_date <= three_months_from_now:\n\t\tprint(\"Alert: Lease expiration date is in less than three months!\")\n\t\treturn \"Alert: Lease expiration date is in less than three months!\"\n\telse:\n\t\tprint(\"No alert needed.\")\n\t\treturn None  # No alert needed",
        "docstring": null,
        "lambda_end_of_life": null,
        "lambda_id": "11",
        "lambda_udf_id": "v1:AWS_LAMBDA:1759715678:insaprd-use2-aihub-prd-docker-default-udf:10",
        "last_updated_at": "1744114058000",
        "name": "Expiration_Date",
        "udf_type": "VALIDATIONS"
    },
    "8311": {
        "args": [],
        "code": "\treturn None",
        "docstring": null,
        "lambda_end_of_life": null,
        "lambda_id": "11",
        "lambda_udf_id": "v1:AWS_LAMBDA:1990801822:insaprd-use2-aihub-prd-docker-default-udf:10",
        "last_updated_at": "1744114058000",
        "name": "unnamed_custom_function",
        "udf_type": "VALIDATIONS"
    }
}