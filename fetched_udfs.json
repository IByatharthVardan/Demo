{
    "7703": {
        "args": [
            {
                "data_type": "FIELD",
                "name": "Lease_Expiration_Date",
                "value": "Lease Expiration Date"
            }
        ],
        "code": "\t# Import Python packages\n\t# import json\n\t\n\t# Log statements using print()\n\t# print(\"This will appear in the logs\")\n\t\n\tif Lease_Expiration_Date:\n\t\t# Return None to indicate validation passed\n\t\treturn None\n\telse:\n\t\t# Return a string to indicate validation failed\n\t\treturn \"Error: Lease_Expiration_Date is empty\"",
        "docstring": null,
        "lambda_end_of_life": null,
        "lambda_id": "11",
        "lambda_udf_id": "v1:AWS_LAMBDA:3175306356:insaprd-use2-aihub-prd-docker-default-udf:10",
        "last_updated_at": "1742565260000",
        "name": "unnamed_custom_function",
        "udf_type": "VALIDATIONS"
    },
    "7704": {
        "args": [
            {
                "data_type": "FIELD",
                "name": "Lease_Expiration_Date",
                "value": "Lease Expiration Date"
            }
        ],
        "code": "    import dateparser\n    import datetime\n    import re\n    date_patterns = ['\\\\bexpires on (\\\\w+ \\\\d{1,2}, \\\\d{4})\\\\b', '\\\\bexpires on (\\\\w+ \\\\d{1,2}, \\\\d{4})\\\\.', '\\\\bexpire on (\\\\w+ \\\\d{1,2}, \\\\d{4})\\\\b', '\\\\bexpire on (\\\\w+ \\\\d{1,2}, \\\\d{4})\\\\.']\n    for pattern in date_patterns:\n        match = re.search(pattern, Lease_Expiration_Date)\n        if match:\n            date_str = match.group(1)\n            parsed_date = dateparser.parse(date_str)\n            if parsed_date:\n                if parsed_date < datetime.datetime.now():\n                    return f\"Lease expiration date '{date_str}' has already passed.\"\n                return None\n    return 'Lease expiration date format is invalid.'",
        "docstring": "    Validates that the 'Lease Expiration Date' has not passed.\n    \n    Args:\n        Lease_Expiration_Date (str): A string containing the lease expiration date information.\n        context (optional): Additional context, default is None.\n        **kwargs: Additional keyword arguments.\n    \n    Returns:\n        str: A specific and relevant error message if the validation fails, otherwise None.",
        "lambda_end_of_life": null,
        "lambda_id": "11",
        "lambda_udf_id": "v1:AWS_LAMBDA:3060562292:insaprd-use2-aihub-prd-docker-default-udf:10",
        "last_updated_at": "1742565425000",
        "name": "validate_lease_expiration_date",
        "udf_type": "VALIDATIONS"
    },
    "7710": {
        "args": [
            {
                "data_type": "FIELD",
                "name": "Lease_Expiration_Date",
                "value": "Lease Expiration Date"
            }
        ],
        "code": "\t# Import Python packages\n\t# import json\n\t\n\tfrom datetime import datetime, timedelta\n\t# Log statements using print()\n\t# print(\"This will appear in the logs\")\n\tdatee =\"03/01/2024\"\n\t\n\tprint(type(Lease_Expiration_Date))\n\tprint(datee)\n\tprint(type(datee))\n\tif not Lease_Expiration_Date:\n\t\tprint(\"Error: Lease_Expiration_Date is empty\")\n\t\treturn \"Error: Lease_Expiration_Date is empty\"\n\ttry:\n\t\t  # Directly parse the date in DD/MM/YYYY format and convert to date object\n\t\tlease_date = datetime.strptime(Lease_Expiration_Date, \"%d/%m/%Y\")\n\t\tprint(f\"Parsed lease date: {lease_date}\")\n\texcept ValueError as e:\n\t\tprint(f\"Error: Invalid date format. Use DD/MM/YYYY. Received: {Lease_Expiration_Date}\")\n\t\treturn f\"Error: Invalid date format. Use DD/MM/YYYY. Received: {Lease_Expiration_Date}\"\n\t\n\ttoday = datetime.today()\n\tthree_months_from_now = today + timedelta(days=90)\n\tprint(f\"Today's date: {today}\")\n\tprint(f\"Three months from now: {three_months_from_now}\")\n\t\n\tif lease_date < today:\n\t\tprint(\"Alert: Lease expiration date has passed!\")\n\t\treturn \"Alert: Lease expiration date has passed!\"\n\telif lease_date <= three_months_from_now:\n\t\tprint(\"Alert: Lease expiration date is in less than three months!\")\n\t\treturn \"Alert: Lease expiration date is in less than three months!\"\n\telse:\n\t\tprint(\"No alert needed.\")\n\t\treturn None  # No alert needed",
        "docstring": null,
        "lambda_end_of_life": null,
        "lambda_id": "11",
        "lambda_udf_id": "v1:AWS_LAMBDA:2213406136:insaprd-use2-aihub-prd-docker-default-udf:10",
        "last_updated_at": "1742651049000",
        "name": "Expiration_Date",
        "udf_type": "VALIDATIONS"
    }
}